(()=>{var e={90497:function(e,t,r){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,t,r,i){void 0===i&&(i=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,i,n)}:function(e,t,r,i){void 0===i&&(i=r),e[i]=t[r]}),n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&i(t,e,r);return n(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Db2SqlServiceClient=void 0;const o=a(r(32081)),c=a(r(52636)),d=a(r(18136)),p=a(r(71017)),u=a(r(6320)),m=s(r(7713)),h=s(r(3120)),l=s(r(3405)),f=r(88804),g=d.loadMessageBundle();t.Db2SqlServiceClient=class{constructor(e){this.serverOptions=e,this.ports=(0,f.parsePorts)(e.port),this.portIndex=0,this.portEndIndex=this.ports.length-1,this.portRestarts=[],this.managedServerProcess=new m.default({validate:e=>null===e.exitCode}),this.managedServerConnection=new m.default,this.processRestarts=[],this.connectionAttempts=0,this.disposed=!1,this.disposeResolve=()=>{},this.telemetryListener=()=>{},this.readyListener=()=>{},this.errorListener=e=>{throw e},this.notificationListeners=[],this.requestListeners=[]}get port(){return this.ports[this.portIndex]}start(){if(this.disposed)throw new Error("Client is disposed.");if(0===this.ports.length){const e=u.createVSCodeDisplayableError(u.VSCodeWindowError.INVALID_PORT,this.serverOptions.port,f.MIN_ALLOWABLE_PORT,f.MAX_ALLOWABLE_PORT);return l.default.error(g("db2sqlserviceclient.start","Db2SqlServiceClient:start: {0}",e.message)),this.errorListener(e),void this.dispose()}this.createServerProcess(),this.createServerConnection()}async dispose(){if(this.disposed)return Promise.reject(new Error("Client is disposed."));this.disposed=!0,l.default.log(g("db2sqlserviceclient.dispose","Db2SqlServiceClient:dispose: Disposing server connection."));const e=this.managedServerConnection.dispose();void 0!==e&&e.dispose(),l.default.log(g("db2sqlserviceclient.dispose","Db2SqlServiceClient:dispose: Disposing server process."));const t=this.managedServerProcess.dispose();return new Promise((e=>{void 0!==t&&null===t.exitCode?(l.default.log(g("db2sqlserviceclient.dispose","Db2SqlServiceClient:dispose: Server process alive, sending kill signal.")),this.disposeResolve=e,t.kill("SIGINT")):e()}))}isDisposed(){const e=this.managedServerProcess.forceGet();return void 0!==e&&130===e.exitCode}onTelemetry(e){this.telemetryListener=e}onReady(e){this.readyListener=e}onError(e){this.errorListener=e}onNotification(e,t){this.notificationListeners.push([e,t])}onRequest(e,t){this.requestListeners.push([e,t])}async sendNotification(e,t){l.default.log(g("db2sqlserviceclient.sendNotification",`Db2SqlServiceClient:sendNotification: Send notification received (${e}), waiting on connection.`));try{const r=await this.managedServerConnection.get();return l.default.log(g("db2sqlserviceclient.sendNotification",`Db2SqlServiceClient:sendNotification: Connection confirmed, sending notification (${e}).`)),r.sendNotification(e,t)}catch(e){throw l.default.log(g("db2sqlserviceclient.sendNotification","Db2SqlServiceClient:sendNotification: Error retrieving server connection: {0}.",e.message)),new Error("Unable to retrieve connection from DSS Server.")}}async sendRequest(e,t){l.default.log(g("db2sqlserviceclient.sendRequest",`Db2SqlServiceClient:sendRequest: Send request received (${e}), waiting on connection.`));try{const r=await this.managedServerConnection.get();return l.default.log(g("db2sqlserviceclient.sendRequest",`Db2SqlServiceClient:sendRequest: Connection confirmed, sending request (${e}).`)),r.sendRequest(e,t)}catch(e){throw l.default.log(g("db2sqlserviceclient.sendRequest","Db2SqlServiceClient:sendRequest: Error retrieving server connection: {0}.",e.message)),new Error("Unable to retrieve connection from DSS Server.")}}async createServerProcess(){const e=(new Date).getTime(),t=h.default.getPlatform(),r=h.default.getJavaRuntime(),i=h.default.getLogLevelConfiguration();try{const[n,a,s]=await Promise.all([t,r,i]),c=p.join(h.default.initializationOptions.dssDependenciesPath,"*");let d,m;d=this.serverOptions.characterConversion===u.CharacterConversionConfig.REPLACE?"-Ddb2.jcc.charsetDecoderEncoder=3":"-Ddb2.jcc.charsetDecoderEncoder=1",m="config_win"===n?`${h.default.initializationOptions.dssJarPath};${this.serverOptions.dependencies};${c}`:`${h.default.initializationOptions.dssJarPath}:${this.serverOptions.dependencies}:${c}`;const f=["-Dfile.encoding=UTF-8",d,"-cp",m,"com.ibm.db2.server.DssLauncher",this.ports[this.portIndex],s,h.default.initializationOptions.logPath,`-Xmx${this.serverOptions.maxHeapSize}`];l.default.log(g("db2sqlserviceclient.createServerProcess","Db2SqlServiceClient:createServerProcess: Starting Db2 SQL Service process with runtime {0} {1}",a,JSON.stringify(f)));const R=o.spawn(a,f);this.managedServerProcess.update(R,!1);let A=!1;l.default.info(g("db2sqlserviceclient.createServerProcess","Db2SqlServiceClient:createServerProcess: Db2 SQL Service server process started on pid: {0}",R.pid)),R.stderr.on("data",(e=>{l.default.error(g("db2sqlserviceclient.process.stderr","Db2SqlServiceClient:process:stderr: {0}",e.toString()))})),R.stdout.on("data",(t=>{const r=(new Date).getTime();l.default.info(g("db2sqlserviceclient.process.stdout","Db2SqlServiceClient:process:stdout: {0}",t.toString()));try{const e=JSON.parse(t);Object.prototype.hasOwnProperty.call(e,"requestType")&&Object.prototype.hasOwnProperty.call(e,"properties")&&this.telemetryListener(e.requestType,e.properties)}catch(i){!A&&t.toString().includes("The server is running")&&(l.default.info(g("db2sqlserviceclient.process.stdout","Db2SqlServiceClient:process: Db2SqlService server took {0}ms to start up.",r-e)),this.managedServerProcess.triggerQueue(),A=!0)}})),R.on("error",(e=>{l.default.error(g("db2sqlserviceclient.process.error","Db2SqlServiceClient:process:error: {0}",e.message))})),R.on("close",(e=>{if(l.default.warn(g("db2sqlserviceclient.process.close","Db2SqlServiceClient:process:close: Db2 SQL Service server process exited with code {0}\n---",e)),R.pid)100===e?this.portChangePolicy():130===e?(l.default.info(g("db2sqlserviceclient.process.close","Db2SqlServiceClient:process:close: Db2 SQL Service server process pid ({0}) disposed.",R.pid)),this.disposeResolve()):this.serverRestartPolicy();else{const e=u.createVSCodeDisplayableError(u.VSCodeWindowError.START_PROCESS_FAIL);l.default.error(g("db2sqlserviceclient.process.close","Db2SqlServiceClient:process:close: {0}",e.message)),this.errorListener(e),this.dispose()}}))}catch(e){l.default.error(e.message),this.errorListener(e),this.dispose()}}portChangePolicy(){if(this.portRestarts.push(Date.now()),this.portRestarts.length<3)this.createServerProcess();else if(this.portRestarts[this.portRestarts.length-1]-this.portRestarts[0]<=18e4)if(this.portIndex!==this.portEndIndex)this.portIndex=(this.portIndex+1)%this.ports.length,this.portRestarts=[],this.createServerProcess();else{const e=u.createVSCodeDisplayableError(u.VSCodeWindowError.INVALID_PORT_IN_USE,this.serverOptions.port);l.default.error(g("db2sqlserviceclient.process.close","Db2SqlServiceClient:process:close: {0}",e.message)),this.errorListener(e),this.dispose()}else this.portRestarts.shift(),this.createServerProcess()}serverRestartPolicy(){if(this.processRestarts.push(Date.now()),this.processRestarts.length<5)this.createServerProcess();else if(this.processRestarts[this.processRestarts.length-1]-this.processRestarts[0]<=18e4){const e=u.createVSCodeDisplayableError(u.VSCodeWindowError.PROCESS_CRASH);l.default.error(g("db2sqlserviceclient.process.restart","Db2SqlServiceClient:process:restart: {0}",e.message)),this.errorListener(e),this.dispose()}else this.processRestarts.shift(),this.createServerProcess()}async createServerConnection(){this.connectionAttempts++,l.default.log(g("db2sqlserviceclient.createServerConnection","Db2SqlServiceClient:createServerConnection: Attempting to connect to Db2SqlService server at port {0}; attempt {1}.",this.ports[this.portIndex],this.connectionAttempts));try{await this.managedServerProcess.get();const[e,t]=c.createServerSocketTransport(this.ports[this.portIndex]),r=c.createMessageConnection(e,t);r.onClose((()=>{this.managedServerConnection.update(void 0),l.default.warn(g("db2sqlserviceclient.createServerConnection","Db2SqlServiceClient:createServerConnection: Server connection closed.")),this.createServerConnection()}));for(const[e,t]of this.requestListeners)r.onRequest(e,t);for(const[e,t]of this.notificationListeners)r.onNotification(e,t);r.onUnhandledNotification((e=>{l.default.warn(g("db2sqlserviceclient.serverConnection","Db2SqlServiceClient:unhandledNotification: {0}",JSON.stringify(e)))})),r.listen(),this.managedServerConnection.update(r,!1),setTimeout((()=>{this.managedServerConnection.valid()&&(l.default.info(g("db2sqlserviceclient.createServerConnection","Db2SqlServiceClient:createServerConnection: Server connection established after {0} attempts",this.connectionAttempts)),this.portEndIndex=0===this.portIndex?this.ports.length-1:this.portIndex-1,this.connectionAttempts=0,this.managedServerConnection.triggerQueue(),this.readyListener())}),300)}catch(e){l.default.error(g("db2sqlserviceclient.createServerConnection","Db2SqlServiceClient:createServerConnection: Failed to establish connection; {0}",e.message))}}}},6320:function(e,t,r){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,t,r,i){void 0===i&&(i=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,i,n)}:function(e,t,r,i){void 0===i&&(i=r),e[i]=t[r]}),n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&i(t,e,r);return n(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.VSCodeRequestError=t.VSCodeWindowError=t.VSCodeWindowOption=t.docs=t.createVSCodeDisplayableError=t.VSCodeDisplayableError=t.CharacterConversionConfig=t.VSCodeConfiguration=t.LanguageClientRequest=t.LanguageClientNotification=t.LanguageClientInterface=t.DB2SqlServiceInterface=t.DSS_LOG_NAME=t.SERVICE_NAME=t.LANGUAGE_ID_SQL=t.EXTENSION_ID=t.EXTENSION_NAME=void 0;const s=a(r(18136)).loadMessageBundle();var o,c,d,p,u,m,h,l;t.EXTENSION_NAME="db2forzosdeveloperextension",t.EXTENSION_ID=`ibm.${t.EXTENSION_NAME}`,t.LANGUAGE_ID_SQL="sql",t.SERVICE_NAME="Db2 SQL Service",t.DSS_LOG_NAME="Db2 Developer Extension",(h=t.DB2SqlServiceInterface||(t.DB2SqlServiceInterface={})).CLOSE_CONNECTION="server/closeConnection",h.DEPLOY_SPSQL="server/deployRoutine",h.DEPLOY_JAVASP="server/deployJavaSP",h.EXECUTE_SQL="server/getBackEndExecResult",h.CATALOG_NAVIGATION="server/getCataNaviBackEndExecResult",h.EXECUTE_SPSQL="server/executeRoutine",h.OPEN_CONNECTION="server/openConnection",h.PARSE_SQL="server/parse",h.SET_CONNECTION_KEY="server/setConnectionKey",function(e){e.DB2_VERSION="client/db2Version",e.SQL_SETTINGS="client/sqlSettings",e.CONNECTION_CREDENTIAL="client/connectionCredential",e.CONNECTION_UPDATE="client/connectionUpdate",e.EXECUTE_COMMAND="client/executeCommand",e.LOG="client/log",e.OPEN_EXTERNAL="client/openExternal",e.TELEMETRY="client/telemetry"}(o=t.LanguageClientInterface||(t.LanguageClientInterface={})),(m=t.LanguageClientNotification||(t.LanguageClientNotification={})).CHANGE_SQL_SETTINGS="ibmdb2devext/didChangeSqlSettings",m.DB2_VERSION_CHANGED="ibmdb2devext/didChangeDb2Version",(u=t.LanguageClientRequest||(t.LanguageClientRequest={})).CLOSE_CONNECTION="ibmdb2devext/closeConnection",u.DEPLOY_SPSQL="ibmdb2devext/deployStoredProcedure",u.DSS_PORT="ibmdb2devext/dssPort",u.EXECUTE_SQL="ibmdb2devext/executeQuery",u.EXECUTE_SPSQL="ibmdb2devext/executeStoredProcedure",u.GET_PARSE_RESULTS="ibmdb2devext/getParseResults",u.OPEN_CONNECTION="ibmdb2devext/openConnection",u.PARSE_SQL="ibmdb2devext/parse",u.CATALOG_NAVIGATION="ibmdb2devext/getCataNaviBackEndExecResult",(p=t.VSCodeConfiguration||(t.VSCodeConfiguration={})).JAVA_HOME="java.home",p.LOG_LEVEL="debug.logLevel",p.DB2SQLSERVICE="db2sqlservice",p.SQL_RESULTS="sQL Results",(d=t.CharacterConversionConfig||(t.CharacterConversionConfig={})).REPLACE="replace",d.REPORT="report";class f extends Error{constructor(e,...t){super(e),this.name="VSCodeDisplayableError",this.options=t}}t.VSCodeDisplayableError=f,t.createVSCodeDisplayableError=function(e,...t){return new f(s(e.key,e.message,...t),...e.options||[])},t.docs="https://github.com/IBM/db2forzosdeveloperextension-about",function(e){e.TROUBLESHOOTING={title:s("vscodewindowoption.troubleshooting","Troubleshooting"),method:o.OPEN_EXTERNAL,data:[`${t.docs}/knownissues.html#known-issues-and-limitations`]},e.GETTING_STARTED={title:s("vscodewindowoption.gettingStarted","Getting Started"),method:o.OPEN_EXTERNAL,data:[`${t.docs}/getting_started.html#getting-started`]},e.CONFIGURE_JAVA={title:s("vscodewindowoption.configureJava","Configure Java"),method:o.OPEN_EXTERNAL,data:[`${t.docs}/getting_started.html#configuring-java-for-ibm-z-open-editor`]},e.OPEN_DSS_PORT_SETTINGS={title:s("vscodewindowoption.openSettings","Open Settings"),method:o.EXECUTE_COMMAND,data:["workbench.action.openSettings","db2forzosdeveloperextension.db2sqlservice.port"]}}(c=t.VSCodeWindowOption||(t.VSCodeWindowOption={})),(l=t.VSCodeWindowError||(t.VSCodeWindowError={})).PLATFORM_NOT_FOUND={key:"environmentManager.platformNotFoundErrorMessage",message:"The operating system cannot be determined for {0}."},l.JAVA_NOT_FOUND={key:"environmentManager.javaNotFoundErrorMessage",message:`A Java Runtime Environment was not found. The ${t.SERVICE_NAME} extension requires a Java SDK or Server Runtime.`},l.INVALID_JAVA_PATH={key:"environmentManager.invalidJavaPathErrorMessage",message:`The Java Runtime Environment path is not configured correctly for the ${t.SERVICE_NAME} extension.`},l.INVALID_JAVA_BIT={key:"environmentManager.invalidJavaBitsErrorMessage",message:`A 32-bit Java Runtime Environment is not supported for the ${t.SERVICE_NAME} extension. You must use a 64-bit version of Java 8 or later.`},l.INVALID_PORT={key:"db2sqlserviceclient.invalidPort",message:`The ${t.SERVICE_NAME} could not be started because the specified port ({0}) is invalid. The valid port range is {1} - {2}.`,options:[c.OPEN_DSS_PORT_SETTINGS]},l.INVALID_PORT_IN_USE={key:"db2sqlserviceclient.invalidPort",message:`The ${t.SERVICE_NAME} could not be started because the specified port or ports ({0}) are already in use.`,options:[c.OPEN_DSS_PORT_SETTINGS]},l.START_PROCESS_FAIL={key:"db2sqlserviceclient.processFail",message:`The ${t.SERVICE_NAME} could not be started.`},l.PROCESS_CRASH={key:"db2sqlserviceclient.processCrash",message:`The ${t.SERVICE_NAME} crashed five times in the last three minutes. The process will not be restarted.`},(t.VSCodeRequestError||(t.VSCodeRequestError={})).DSS_CLIENT_UNAVAILABLE=`The ${t.SERVICE_NAME} is unavailable. Check the ${t.DSS_LOG_NAME} log for more information.`},57391:function(e,t,r){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,t,r,i){void 0===i&&(i=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,i,n)}:function(e,t,r,i){void 0===i&&(i=r),e[i]=t[r]}),n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&i(t,e,r);return n(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=a(r(18136)),c=r(47322),d=s(r(3405)),p=r(83102),u=r(85413),m=r(53382),h=o.loadMessageBundle();var l;!function(e){e.StoredProcedure="Stored Procedure",e.Function="Function"}(l||(l={}));class f{constructor(){}static loadAllDb2Signatures(){f.loadDb2Signatures(p.PROCEDURES,m,l.StoredProcedure,c.CompletionItemKind.Class),f.loadDb2Signatures(p.FUNCTIONS,u,l.Function,c.CompletionItemKind.Function),d.default.debug(h("Db2DocumentationManager.loadAllDb2Signatures","Db2DocumentationManager.loadAllDb2Signatures: The following Db2 functions and stored procedures were loaded: {0}.",Array.from(this.db2Signatures.keys()).toString()))}static loadDb2Signatures(e,t,r,i){e.forEach((e=>{const n=e.identifier,a=t.items.find((t=>t.id===e.id)).text,s=`${a.description.join("\n")}\n\n${a.parameters.join("\n\n")}`,o={parameters:e.parameters,specifier:e.specifier,specifierParameters:e.specifierParameters,description:s,type:r},c=f.db2Signatures.get(n);c?f.db2Signatures.set(n,[...c,o]):(f.db2Signatures.set(n,[o]),f.completionItems.push({label:e.identifier,kind:i,data:e.identifier}))}))}}t.default=f,f.db2Signatures=new Map,f.completionItems=[],f.previousSignature=null},83102:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.PROCEDURES=t.FUNCTIONS=void 0,t.FUNCTIONS=[{identifier:"ABS",parameters:["numeric-expression"],id:"ABS-1"},{identifier:"ABSVAL",parameters:["numeric-expression"],id:"ABSVAL-1"},{identifier:"ACOS",parameters:["numeric-expression"],id:"ACOS-1"},{identifier:"ADD_DAYS",parameters:["expression","numeric-expression"],id:"ADD_DAYS-1"},{identifier:"ADD_MONTHS",parameters:["expression","numeric-expression"],id:"ADD_MONTHS-1"},{identifier:"ADMIN_TASK_LIST",parameters:[],id:"ADMIN_TASK_LIST-1"},{identifier:"ADMIN_TASK_OUTPUT",parameters:["task-name","num-invocations"],id:"ADMIN_TASK_OUTPUT-1"},{identifier:"ADMIN_TASK_STATUS",parameters:["max-history?"],id:"ADMIN_TASK_STATUS-1"},{identifier:"AI_ANALOGY",parameters:["source-1","target-1","source-2","target-2"],id:"AI_ANALOGY-1"},{identifier:"AI_SEMANTIC_CLUSTER",parameters:["member-expr","clustering-expression"],id:"AI_SEMANTIC_CLUSTER-1"},{identifier:"AI_SIMILARITY",parameters:["expression-1","expression-2"],id:"AI_SIMILARITY-1"},{identifier:"AI_SIMILARITY",parameters:["expression-1 'USING' 'MODEL COLUMN'? column-name","expression-2 'USING' 'MODEL COLUMN'? column-name"],id:"AI_SIMILARITY-2"},{identifier:"ARRAY_AGG",parameters:["expression"],id:"ARRAY_AGG-1"},{identifier:"ARRAY_AGG",parameters:["expression 'ORDER BY' sort-key-expression ('ASC' | 'DESC')?"],id:"ARRAY_AGG-1"},{identifier:"ARRAY_AGG",parameters:["index-expression","expression"],id:"ARRAY_AGG-2"},{identifier:"ARRAY_DELETE",parameters:["array-expression","array-index1?"],id:"ARRAY_DELETE-1"},{identifier:"ARRAY_DELETE",parameters:["array-expression","array-index1","array-index2?"],id:"ARRAY_DELETE-1"},{identifier:"ARRAY_FIRST",parameters:["array-expression"],id:"ARRAY_FIRST-1"},{identifier:"ARRAY_LAST",parameters:["array-expression"],id:"ARRAY_LAST-1"},{identifier:"ARRAY_NEXT",parameters:["array-expression","array-index"],id:"ARRAY_NEXT-1"},{identifier:"ARRAY_PRIOR",parameters:["array-expression","array-index"],id:"ARRAY_PRIOR-1"},{identifier:"ARRAY_TRIM",parameters:["array-expression","numeric-expression"],id:"ARRAY_TRIM-1"},{identifier:"ASCII",parameters:["string-expression"],id:"ASCII-1"},{identifier:"ASCII_CHR",parameters:["expression"],id:"ASCII_CHR-1"},{identifier:"ASCII_STR",parameters:["string-expression"],id:"ASCII_STR-1"},{identifier:"ASCIISTR",parameters:["string-expression"],id:"ASCIISTR-1"},{identifier:"ASIN",parameters:["numeric-expression"],id:"ASIN-1"},{identifier:"ATAN",parameters:["numeric-expression"],id:"ATAN-1"},{identifier:"ATANH",parameters:["numeric-expression"],id:"ATANH-1"},{identifier:"ATAN2",parameters:["numeric-expression-1","numeric-expression-2"],id:"ATAN2-1"},{identifier:"AVG",parameters:["('ALL' | 'DISTINCT')? numeric-expression"],id:"AVG-1"},{identifier:"BLOB",parameters:["string-expression","integer?"],id:"BLOB-1"},{identifier:"BLOCKING_THREADS",parameters:["dbname"],id:"BLOCKING_THREADS-1"},{identifier:"BIGINT",parameters:["numeric-expression"],id:"BIGINT-1"},{identifier:"BIGINT",parameters:["string-expression"],id:"BIGINT-2"},{identifier:"BITAND",parameters:["expression1","expression2"],id:"BITAND-1"},{identifier:"BITANDNOT",parameters:["expression1","expression2"],id:"BITANDNOT-1"},{identifier:"BITOR",parameters:["expression1","expression2"],id:"BITOR-1"},{identifier:"BITXOR",parameters:["expression1","expression2"],id:"BITXOR-1"},{identifier:"BITNOT",parameters:["expression1"],id:"BITNOT-1"},{identifier:"BINARY",parameters:["string-expression","integer?"],id:"BINARY-1"},{identifier:"BTRIM",parameters:["source-string","trim-string?"],id:"BTRIM-1"},{identifier:"CARDINALITY",parameters:["array-expression"],id:"CARDINALITY-1"},{identifier:"CCSID_ENCODING",parameters:["expression"],id:"CCSID_ENCODING-1"},{identifier:"CEIL",parameters:["numeric-expression"],id:"CEIL-1"},{identifier:"CEILING",parameters:["numeric-expression"],id:"CEILING-1"},{identifier:"CHAR",parameters:["integer-expression"],id:"CHAR-1"},{identifier:"CHAR",parameters:["decimal-expression","decimal-character?"],id:"CHAR-2"},{identifier:"CHAR",parameters:["floating-point-expression"],id:"CHAR-3"},{identifier:"CHAR",parameters:["decimal-floating-point-expression"],id:"CHAR-4"},{identifier:"CHAR",parameters:["character-expression","integer?"],id:"CHAR-5"},{identifier:"CHAR",parameters:["character-expression","integer","('CODEUNITS16' | 'CODEUNITS32' | 'OCTETS')?"],id:"CHAR-5"},{identifier:"CHAR",parameters:["graphic-expression","integer?"],id:"CHAR-6"},{identifier:"CHAR",parameters:["graphic-expression","integer","('CODEUNITS16' | 'CODEUNITS32')?"],id:"CHAR-6"},{identifier:"CHAR",parameters:["datetime-expression","('ISO' | 'USA' | 'EUR' | 'JIS' | 'LOCAL')?"],id:"CHAR-7"},{identifier:"CHAR",parameters:["row-ID-expression"],id:"CHAR-8"},{identifier:"CHAR_LENGTH",parameters:["character-expression","('CODEUNITS16' | 'CODEUNITS32' | 'OCTETS')"],id:"CHAR_LENGTH-1"},{identifier:"CHAR_LENGTH",parameters:["graphic-expression","('CODEUNITS16' | 'CODEUNITS32')"],id:"CHAR_LENGTH-2"},{identifier:"CHARACTER_LENGTH",parameters:["character-expression","('CODEUNITS16' | 'CODEUNITS32' | 'OCTETS')"],id:"CHARACTER_LENGTH-1"},{identifier:"CHARACTER_LENGTH",parameters:["graphic-expression","('CODEUNITS16' | 'CODEUNITS32')"],id:"CHARACTER_LENGTH-2"},{identifier:"CHR",parameters:["expression"],id:"CHR-1"},{identifier:"CLOB",parameters:["character-expression"],id:"CLOB-1"},{identifier:"CLOB",parameters:["character-expression","integer","('CODEUNITS16' | 'CODEUNITS32' | 'OCTETS')?"],id:"CLOB-1"},{identifier:"CLOB",parameters:["graphic-expression"],id:"CLOB-2"},{identifier:"CLOB",parameters:["graphic-expression","integer","('CODEUNITS16' | 'CODEUNITS32')?"],id:"CLOB-2"},{identifier:"COALESCE",parameters:["expression","expression"],id:"COALESCE-1"},{identifier:"COLLATION_KEY",parameters:["string-expression","collation-name","integer?"],id:"COLLATION_KEY-1"},{identifier:"COMPARE_DECFLOAT",parameters:["decfloat-expression1","decfloat-expression2"],id:"COMPARE_DECFLOAT-1"},{identifier:"CONCAT",parameters:["string-expression-1","string-expression-2"],id:"CONCAT-1"},{identifier:"CONTAINS",parameters:["column-name","search-argument","string-constant?"],id:"CONTAINS-1"},{identifier:"CORR",parameters:["expression-1","expression-2"],id:"CORR-1"},{identifier:"CORRELATION",parameters:["expression-1","expression-2"],id:"CORRELATION-1"},{identifier:"COS",parameters:["numeric-expression"],id:"COS-1"},{identifier:"COSH",parameters:["numeric-expression"],id:"COSH-1"},{identifier:"COUNT",parameters:["('ALL' | 'DISTINCT')? expression"],id:"COUNT-1"},{identifier:"COUNT_BIG",parameters:["('ALL' | 'DISTINCT')? expression"],id:"COUNT_BIG-1"},{identifier:"COVAR",parameters:["expression-1","expression-2"],id:"COVAR-1"},{identifier:"COVAR_POP",parameters:["expression-1","expression-2"],id:"COVAR_POP-1"},{identifier:"COVARIANCE",parameters:["expression-1","expression-2"],id:"COVARIANCE-1"},{identifier:"COVAR_SAMP",parameters:["expression-1","expression-2"],id:"COVAR_SAMP-1"},{identifier:"COVARIANCE_SAMP",parameters:["expression-1","expression-2"],id:"COVARIANCE_SAMP-1"},{identifier:"CUME_DIST",parameters:["expression"],specifier:"WITH GROUP",specifierParameters:["order-by-clause"],id:"CUME_DIST-1"},{identifier:"CUME_DIST",parameters:[],specifier:"OVER",specifierParameters:["window-partition-clause? window-order-clause"],id:"CUME_DIST-2"},{identifier:"DATE",parameters:["expression"],id:"DATE-1"},{identifier:"DAY",parameters:["expression"],id:"DAY-1"},{identifier:"DAYOFMONTH",parameters:["expression"],id:"DAYOFMONTH-1"},{identifier:"DAYOFWEEK",parameters:["expression"],id:"DAYOFWEEK-1"},{identifier:"DAYOFWEEK_ISO",parameters:["expression"],id:"DAYOFWEEK_ISO-1"},{identifier:"DAYOFYEAR",parameters:["expression"],id:"DAYOFYEAR-1"},{identifier:"DAYS",parameters:["expression"],id:"DAYS-1"},{identifier:"DAYS_BETWEEN",parameters:["expression1","expression2"],id:"DAYS_BETWEEN-1"},{identifier:"DBCLOB",parameters:["character-expression"],id:"DBCLOB-1"},{identifier:"DBCLOB",parameters:["character-expression","integer","('CODEUNITS16' | 'CODEUNITS32')?"],id:"DBCLOB-1"},{identifier:"DBCLOB",parameters:["graphic-expression"],id:"DBCLOB-2"},{identifier:"DBCLOB",parameters:["graphic-expression","integer","('CODEUNITS16' | 'CODEUNITS32')?"],id:"DBCLOB-2"},{identifier:"DEC",parameters:["numeric-expression"],id:"DEC-1"},{identifier:"DEC",parameters:["numeric-expression","precision","scale?"],id:"DEC-1"},{identifier:"DEC",parameters:["string-expression"],id:"DEC-2"},{identifier:"DEC",parameters:["string-expression","precision","scale?"],id:"DEC-2"},{identifier:"DEC",parameters:["string-expression","precision","scale","decimal-character?"],id:"DEC-2"},{identifier:"DECIMAL",parameters:["numeric-expression"],id:"DECIMAL-1"},{identifier:"DECIMAL",parameters:["numeric-expression","precision","scale?"],id:"DECIMAL-1"},{identifier:"DECIMAL",parameters:["string-expression"],id:"DECIMAL-2"},{identifier:"DECIMAL",parameters:["string-expression","precision","scale?"],id:"DECIMAL-2"},{identifier:"DECIMAL",parameters:["string-expression","precision","scale","decimal-character?"],id:"DECIMAL-2"},{identifier:"DECFLOAT",parameters:["numeric-expression","(34 | 16)?"],id:"DECFLOAT-1"},{identifier:"DECFLOAT",parameters:["string-expression","(34 | 16)?"],id:"DECFLOAT-2"},{identifier:"DECFLOAT_FORMAT",parameters:["string-expression","format-string?"],id:"DECFLOAT_FORMAT-1"},{identifier:"DECFLOAT_SORTKEY",parameters:["decfloat-expression"],id:"DECFLOAT_SORTKEY-1"},{identifier:"DECODE",parameters:["expression-1","expression-2","result-expression","else-expression?"],id:"DECODE-1"},{identifier:"DECRYPT_BINARY",parameters:["encrypted-data","(password-string | 'DEFAULT')?"],id:"DECRYPT_BINARY-1"},{identifier:"DECRYPT_BINARY",parameters:["encrypted-data","password-string | 'DEFAULT'","ccsid-constant?"],id:"DECRYPT_BINARY-1"},{identifier:"DECRYPT_BIT",parameters:["encrypted-data","(password-string | 'DEFAULT')?"],id:"DECRYPT_BIT-1"},{identifier:"DECRYPT_BIT",parameters:["encrypted-data","password-string | 'DEFAULT'","ccsid-constant?"],id:"DECRYPT_BIT-1"},{identifier:"DECRYPT_CHAR",parameters:["encrypted-data","(password-string | 'DEFAULT')?"],id:"DECRYPT_CHAR-1"},{identifier:"DECRYPT_CHAR",parameters:["encrypted-data","password-string | 'DEFAULT'","ccsid-constant?"],id:"DECRYPT_CHAR-1"},{identifier:"DECRYPT_DB",parameters:["encrypted-data","(password-string | 'DEFAULT')?"],id:"DECRYPT_DB-1"},{identifier:"DECRYPT_DB",parameters:["encrypted-data","password-string | 'DEFAULT'","ccsid-constant?"],id:"DECRYPT_DB-1"},{identifier:"DECRYPT_DATAKEY_INTEGER",parameters:["encrypted-data"],id:"DECRYPT_DATAKEY_INTEGER-1"},{identifier:"DECRYPT_DATAKEY_BIGINT",parameters:["encrypted-data"],id:"DECRYPT_DATAKEY_BIGINT-1"},{identifier:"DECRYPT_DATAKEY_DECIMAL",parameters:["encrypted-data","precision | 31","(scale | 0)?"],id:"DECRYPT_DATAKEY_DECIMAL-1"},{identifier:"DECRYPT_DATAKEY_VARCHAR",parameters:["encrypted-data","ccsid-constant?"],id:"DECRYPT_DATAKEY_VARCHAR-1"},{identifier:"DECRYPT_DATAKEY_CLOB",parameters:["encrypted-data","ccsid-constant?"],id:"DECRYPT_DATAKEY_CLOB-1"},{identifier:"DECRYPT_DATAKEY_VARGRAPHIC",parameters:["encrypted-data","ccsid-constant?"],id:"DECRYPT_DATAKEY_VARGRAPHIC-1"},{identifier:"DECRYPT_DATAKEY_DBCLOB",parameters:["encrypted-data","ccsid-constant?"],id:"DECRYPT_DATAKEY_DBCLOB-1"},{identifier:"DECRYPT_DATAKEY_BIT",parameters:["encrypted-data"],id:"DECRYPT_DATAKEY_BIT-1"},{identifier:"DEGREES",parameters:["numeric-expression"],id:"DEGREES-1"},{identifier:"DIFFERENCE",parameters:["expression-1","expression-2"],id:"DIFFERENCE-1"},{identifier:"DIGITS",parameters:["numeric-expression"],id:"DIGITS-1"},{identifier:"DOUBLE",parameters:["numeric-expression"],id:"DOUBLE-1"},{identifier:"DOUBLE",parameters:["string-expression"],id:"DOUBLE-2"},{identifier:"DOUBLE_PRECISION",parameters:["numeric-expression"],id:"DOUBLE_PRECISION-1"},{identifier:"DOUBLE_PRECISION",parameters:["string-expression"],id:"DOUBLE_PRECISION-2"},{identifier:"DSN_XMLVALIDATE",parameters:["string-expression","schema-name-string"],id:"DSN_XMLVALIDATE-1"},{identifier:"DSN_XMLVALIDATE",parameters:["string-expression","target-namespace-uri-string","schema-location-string"],id:"DSN_XMLVALIDATE-1"},{identifier:"DSN_XMLVALIDATE",parameters:["xml-expression","schema-name-string"],id:"DSN_XMLVALIDATE-1"},{identifier:"DSN_XMLVALIDATE",parameters:["xml-expression","target-namespace-uri-string","schema-location-string"],id:"DSN_XMLVALIDATE-1"},{identifier:"EBCDIC_CHR",parameters:["expression"],id:"EBCDIC_CHR-1"},{identifier:"EBCDIC_STR",parameters:["string-expression"],id:"EBCDIC_STR-1"},{identifier:"ENCRYPT_DATAKEY",parameters:["expression","key-label-name","'AES256R' | 'AES256D'"],id:"ENCRYPT_DATAKEY-1"},{identifier:"ENCRYPT_TDES",parameters:["data-string","password-string?"],id:"ENCRYPT_TDES-1"},{identifier:"ENCRYPT_TDES",parameters:["data-string","password-string","hint-string?"],id:"ENCRYPT_TDES-1"},{identifier:"EXP",parameters:["numeric-expression"],id:"EXP-1"},{identifier:"EXTRACT",parameters:["'YEAR'|'MONTH'|'DAY' FROM date-expression"],id:"EXTRACT-1"},{identifier:"EXTRACT",parameters:["'YEAR'|'MONTH'|'DAY' FROM timestamp-expression"],id:"EXTRACT-1"},{identifier:"EXTRACT",parameters:["'HOUR'|'MINUTE'|'SECOND' FROM time-expression"],id:"EXTRACT-1"},{identifier:"EXTRACT",parameters:["'HOUR'|'MINUTE'|'SECOND' FROM timestamp-expression"],id:"EXTRACT-1"},{identifier:"EXTRACT",parameters:["'HOUR'|'MINUTE'|'SECOND'|'TIMEZONE_HOUR'|'TIMEZONE_MINUTE' FROM date-expression"],id:"EXTRACT-1"},{identifier:"EXTRACT",parameters:["'HOUR'|'MINUTE'|'SECOND'|'TIMEZONE_HOUR'|'TIMEZONE_MINUTE' FROM time-expression"],id:"EXTRACT-1"},{identifier:"EXTRACT",parameters:["'HOUR'|'MINUTE'|'SECOND'|'TIMEZONE_HOUR'|'TIMEZONE_MINUTE' FROM timestamp-expression"],id:"EXTRACT-1"},{identifier:"FIRST_VALUE",parameters:["expression","('RESPECT NULLS' | 'IGNORE NULLS')?"],id:"FIRST_VALUE-1"},{identifier:"FLOAT",parameters:["numeric-expression"],id:"FLOAT-1"},{identifier:"FLOOR",parameters:["numeric-expression"],id:"FLOOR-1"},{identifier:"GENERATE_UNIQUE",parameters:[],id:"GENERATE_UNIQUE-1"},{identifier:"GENERATE_UNIQUE_BINARY",parameters:[],id:"GENERATE_UNIQUE_BINARY-1"},{identifier:"GETHINT",parameters:["encrypted-data"],id:"GETHINT-1"},{identifier:"GETVARIABLE",parameters:["string-constant","default-value?"],id:"GETVARIABLE-1"},{identifier:"GETVARIABLE",parameters:["string-constant","'CAST ( NULL AS VARCHAR(1) )'"],id:"GETVARIABLE-1"},{identifier:"GRAPHIC",parameters:["integer-expression"],id:"GRAPHIC-1"},{identifier:"GRAPHIC",parameters:["decimal-expression","decimal-character?"],id:"GRAPHIC-2"},{identifier:"GRAPHIC",parameters:["floating-point-expression"],id:"GRAPHIC-3"},{identifier:"GRAPHIC",parameters:["decimal-floating-point-expression"],id:"GRAPHIC-4"},{identifier:"GRAPHIC",parameters:["character-expression"],id:"GRAPHIC-5"},{identifier:"GRAPHIC",parameters:["character-expression","integer","('CODEUNITS16' | 'CODEUNITS32')?"],id:"GRAPHIC-5"},{identifier:"GRAPHIC",parameters:["graphic-expression"],id:"GRAPHIC-6"},{identifier:"GRAPHIC",parameters:["graphic-expression","integer","('CODEUNITS16' | 'CODEUNITS32')?"],id:"GRAPHIC-6"},{identifier:"GREATEST",parameters:["expression","expression"],id:"GREATEST-1"},{identifier:"GROUPING",parameters:["expression"],id:"GROUPING-1"},{identifier:"HASH",parameters:["expression","algorithm | 0"],id:"HASH-1"},{identifier:"HASH_CRC32",parameters:["expression"],id:"HASH_CRC32-1"},{identifier:"HASH_MD5",parameters:["expression"],id:"HASH_MD5-1"},{identifier:"HASH_SHA1",parameters:["expression"],id:"HASH_SHA1-1"},{identifier:"HASH_SHA256",parameters:["expression"],id:"HASH_SHA256-1"},{identifier:"HEX",parameters:["expression"],id:"HEX-1"},{identifier:"HOUR",parameters:["expression"],id:"HOUR-1"},{identifier:"IDENTITY_VAL_LOCAL",parameters:[],id:"IDENTITY_VAL_LOCAL-1"},{identifier:"IFNULL",parameters:["expression","expression"],id:"IFNULL-1"},{identifier:"INSERT",parameters:["source-string","start","length","insert-string","('CODEUNITS16' | 'CODEUNITS32' | 'OCTETS')?"],id:"INSERT-1"},{identifier:"INSTR",parameters:["source-string","search-string"],id:"INSTR-1"},{identifier:"INSTR",parameters:["source-string","search-string","start","instance?"],id:"INSTR-1"},{identifier:"INT",parameters:["numeric-expression"],id:"INT-1"},{identifier:"INT",parameters:["string-expression"],id:"INT-2"},{identifier:"INTEGER",parameters:["numeric-expression"],id:"INTEGER-1"},{identifier:"INTEGER",parameters:["string-expression"],id:"INTEGER-2"},{identifier:"JULIAN_DAY",parameters:["expression"],id:"JULIAN_DAY-1"},{identifier:"LAG",parameters:["expression","offset?"],id:"LAG-1"},{identifier:"LAG",parameters:["expression","offset","default-value","('RESPECT NULLS' | 'IGNORE NULLS')?"],id:"LAG-1"},{identifier:"LAST_DAY",parameters:["expression"],id:"LAST_DAY-1"},{identifier:"LAST_VALUE",parameters:["expression","('RESPECT NULLS' | 'IGNORE NULLS')?"],id:"LAST_VALUE-1"},{identifier:"LCASE",parameters:["string-expression","locale-name-string?","integer?"],id:"LCASE-1"},{identifier:"LEAD",parameters:["expression","offset?"],id:"LEAD-1"},{identifier:"LEAD",parameters:["expression","offset","default-value","('RESPECT NULLS' | 'IGNORE NULLS')?"],id:"LEAD-1"},{identifier:"LEAST",parameters:["expression","expression"],id:"LEAST-1"},{identifier:"LEFT",parameters:["character-expression","length","('CODEUNITS16' | 'CODEUNITS32' | 'OCTETS')?"],id:"LEFT-1"},{identifier:"LENGTH",parameters:["expression"],id:"LENGTH-1"},{identifier:"LISTAGG",parameters:["('ALL' | 'DISTINCT')? string-expression","separator?"],id:"LISTAGG-1"},{identifier:"LISTAGG",parameters:["('ALL' | 'DISTINCT')? string-expression","separator?"],specifier:"WITHIN GROUP",specifierParameters:["'ORDER BY' sort-key ('ASC' | 'DESC')?"],id:"LISTAGG-1"},{identifier:"LN",parameters:["numeric-expression"],id:"LN-1"},{identifier:"LOCATE",parameters:["search-string","source-string","start?","('CODEUNITS16' | 'CODEUNITS32' | 'OCTETS')?"],id:"LOCATE-1"},{identifier:"LOCATE_IN_STRING",parameters:["search-string","source-string","('CODEUNITS16' | 'CODEUNITS32' | 'OCTETS')?"],id:"LOCATE_IN_STRING-1"},{identifier:"LOCATE_IN_STRING",parameters:["search-string","source-string","start","instance?","('CODEUNITS16' | 'CODEUNITS32' | 'OCTETS')?"],id:"LOCATE_IN_STRING-1"},{identifier:"LOG10",parameters:["numeric-expression"],id:"LOG10-1"},{identifier:"LOWER",parameters:["string-expression","locale-name-string?","integer?"],id:"LOWER-1"},{identifier:"LPAD",parameters:["string-expression","integer","pad?"],id:"LPAD-1"},{identifier:"LTRIM",parameters:["string-expression","trim-expression?"],id:"LTRIM-1"},{identifier:"MAX",parameters:["('ALL' | 'DISTINCT')? expression"],id:"MAX-1"},{identifier:"MAX",parameters:["expression","expression"],id:"MAX-2"},{identifier:"MAX_CARDINALITY",parameters:["array-expression"],id:"MAX_CARDINALITY-1"},{identifier:"MICROSECOND",parameters:["expression"],id:"MICROSECOND-1"},{identifier:"MIDNIGHT_SECONDS",parameters:["expression"],id:"MIDNIGHT_SECONDS-1"},{identifier:"MIN",parameters:["('ALL' | 'DISTINCT')? expression"],id:"MIN-1"},{identifier:"MIN",parameters:["expression","expression"],id:"MIN-2"},{identifier:"MINUTE",parameters:["expression"],id:"MINUTE-1"},{identifier:"MOD",parameters:["numeric-expression-1","numeric-expression-2"],id:"MOD-1"},{identifier:"MONTH",parameters:["expression"],id:"MONTH-1"},{identifier:"MONTHS_BETWEEN",parameters:["expression1","expression2"],id:"MONTHS_BETWEEN-1"},{identifier:"MQREAD",parameters:[],id:"MQREAD-1"},{identifier:"MQREAD",parameters:["receive-service","service-policy?"],id:"MQREAD-1"},{identifier:"MQREADALL",parameters:["receive-service","service-policy?","num-rows?"],id:"MQREADALL-1"},{identifier:"MQREADALL",parameters:["num-rows?"],id:"MQREADALL-1"},{identifier:"MQREADALLCLOB",parameters:["receive-service","service-policy?","num-rows?"],id:"MQREADALLCLOB-1"},{identifier:"MQREADALLCLOB",parameters:["num-rows?"],id:"MQREADALLCLOB-1"},{identifier:"MQREADCLOB",parameters:[],id:"MQREADCLOB-1"},{identifier:"MQREADCLOB",parameters:["receive-service","service-policy?"],id:"MQREADCLOB-1"},{identifier:"MQRECEIVE",parameters:["receive-service?"],id:"MQRECEIVE-1"},{identifier:"MQRECEIVE",parameters:["receive-service","service-policy","correl-id?"],id:"MQRECEIVE-1"},{identifier:"MQRECEIVEALL",parameters:["receive-service?","num-rows?"],id:"MQRECEIVEALL-1"},{identifier:"MQRECEIVEALL",parameters:["receive-service","service-policy","correl-id?","num-rows?"],id:"MQRECEIVEALL-1"},{identifier:"MQRECEIVEALLCLOB",parameters:["receive-service?","num-rows?"],id:"MQRECEIVEALLCLOB-1"},{identifier:"MQRECEIVEALLCLOB",parameters:["receive-service","service-policy","correl-id?","num-rows?"],id:"MQRECEIVEALLCLOB-1"},{identifier:"MQRECEIVECLOB",parameters:["receive-service?"],id:"MQRECEIVECLOB-1"},{identifier:"MQRECEIVECLOB",parameters:["receive-service","service-policy","correl-id?"],id:"MQRECEIVECLOB-1"},{identifier:"MQSEND",parameters:["msg-data","correl-id?"],id:"MQSEND-1"},{identifier:"MQSEND",parameters:["send-service","service-policy?","msg-data","correl-id?"],id:"MQSEND-1"},{identifier:"MULTIPLY_ALT",parameters:["exact-numeric-expression-1","exact-numeric-expression-2"],id:"MULTIPLY_ALT-1"},{identifier:"NEXT_DAY",parameters:["expression","string-expression"],id:"NEXT_DAY-1"},{identifier:"NEXT_MONTH",parameters:["datetime-expression"],id:"NEXT_MONTH-1"},{identifier:"NORMALIZE_DECFLOAT",parameters:["decfloat-expression"],id:"NORMALIZE_DECFLOAT-1"},{identifier:"NORMALIZE_STRING",parameters:["unicode-string","'NFC' | 'NFD' | 'NFKC' | 'NFKD'","integer?"],id:"NORMALIZE_STRING-1"},{identifier:"NTH_VALUE",parameters:["expression","nth-row"],id:"NTH_VALUE-1"},{identifier:"NTILE",parameters:["num-tiles"],specifier:"OVER",specifierParameters:["window-partition-clause? window-order-clause"],id:"NTILE-1"},{identifier:"NULLIF",parameters:["expression","expression"],id:"NULLIF-1"},{identifier:"NVL",parameters:["expression","expression"],id:"NVL-1"},{identifier:"OVERLAY",parameters:["source-string","insert-string","start","length?","'CODEUNITS16' | 'CODEUNITS32' | 'OCTETS'"],id:"OVERLAY-1"},{identifier:"PACK",parameters:["'CCSID 1208' | 'CCSID DEFAULT'","expression"],id:"PACK-1"},{identifier:"PERCENTILE_CONT",parameters:["percentile-expr"],specifier:"WITHIN GROUP",specifierParameters:["'ORDER BY' sort-expression ('ASC' | 'DESC')?"],id:"PERCENTILE_CONT-1"},{identifier:"PERCENTILE_DISC",parameters:["percentile-expr"],specifier:"WITHIN GROUP",specifierParameters:["'ORDER BY' sort-expression ('ASC' | 'DESC')?"],id:"PERCENTILE_DISC-1"},{identifier:"PERCENT_RANK",parameters:["expression"],specifier:"WITHIN GROUP",specifierParameters:["order-by-clause"],id:"PERCENT_RANK-1"},{identifier:"PERCENT_RANK",parameters:[],specifier:"OVER",specifierParameters:["window-partition-clause? window-order-clause"],id:"PERCENT_RANK-2"},{identifier:"POSITION",parameters:["search-string","source-string","'CODEUNITS16' | 'CODEUNITS32' | 'OCTETS'"],id:"POSITION-1"},{identifier:"POSSTR",parameters:["source-string","search-string"],id:"POSSTR-1"},{identifier:"POW",parameters:["numeric-expression-1","numeric-expression-2"],id:"POW-1"},{identifier:"POWER",parameters:["numeric-expression-1","numeric-expression-2"],id:"POWER-1"},{identifier:"QUANTIZE",parameters:["numeric-expression-1","numeric-expression-2"],id:"QUANTIZE-1"},{identifier:"QUARTER",parameters:["expression"],id:"QUARTER-1"},{identifier:"RADIANS",parameters:["numeric-expression"],id:"RADIANS-1"},{identifier:"RAISE_ERROR",parameters:["sqlstate","diagnostic-string"],id:"RAISE_ERROR-1"},{identifier:"RAND",parameters:["numeric-expression?"],id:"RAND-1"},{identifier:"RANDOM",parameters:["numeric-expression?"],id:"RANDOM-1"},{identifier:"RATIO_TO_REPORT",parameters:["expression"],id:"RATIO_TO_REPORT-1"},{identifier:"REAL",parameters:["numeric-expression"],id:"REAL-1"},{identifier:"REAL",parameters:["string-expression"],id:"REAL-2"},{identifier:"REGEXP_COUNT",parameters:["source-string","pattern-expression","start?","flags?","('CODEUNITS16' | 'CODEUNITS32' | 'OCTETS')?"],id:"REGEXP_COUNT-1"},{identifier:"REGEXP_INSTR",parameters:["source-string","pattern-expression","start?","('CODEUNITS16' | 'CODEUNITS32' | 'OCTETS')?"],id:"REGEXP_INSTR-1"},{identifier:"REGEXP_INSTR",parameters:["source-string","pattern-expression","start","occurrence","return_option?","('CODEUNITS16' | 'CODEUNITS32' | 'OCTETS')?"],id:"REGEXP_INSTR-1"},{identifier:"REGEXP_INSTR",parameters:["source-string","pattern-expression","start","occurrence","return_option","flags","group?","('CODEUNITS16' | 'CODEUNITS32' | 'OCTETS')?"],id:"REGEXP_INSTR-1"},{identifier:"REGEXP_LIKE",parameters:["source-string","pattern-expression","start?","flags?","('CODEUNITS16' | 'CODEUNITS32' | 'OCTETS')?"],id:"REGEXP_LIKE-1"},{identifier:"REGEXP_REPLACE",parameters:["source-string","pattern-expression","('CODEUNITS16' | 'CODEUNITS32' | 'OCTETS')?"],id:"REGEXP_REPLACE-1"},{identifier:"REGEXP_REPLACE",parameters:["source-string","pattern-expression","replacement-string","start?","('CODEUNITS16' | 'CODEUNITS32' | 'OCTETS')?"],id:"REGEXP_REPLACE-1"},{identifier:"REGEXP_REPLACE",parameters:["source-string","pattern-expression","replacement-string","start","occurrence","flags?","('CODEUNITS16' | 'CODEUNITS32' | 'OCTETS')?"],id:"REGEXP_REPLACE-1"},{identifier:"REGEXP_SUBSTR",parameters:["source-string","pattern-expression","('CODEUNITS16' | 'CODEUNITS32' | 'OCTETS')?"],id:"REGEXP_SUBSTR-1"},{identifier:"REGEXP_SUBSTR",parameters:["source-string","pattern-expression","start","occurrence?","('CODEUNITS16' | 'CODEUNITS32' | 'OCTETS')?"],id:"REGEXP_SUBSTR-1"},{identifier:"REGEXP_SUBSTR",parameters:["source-string","pattern-expression","start","occurrence","flags","group?","('CODEUNITS16' | 'CODEUNITS32' | 'OCTETS')?"],id:"REGEXP_SUBSTR-1"},{identifier:"REGR_AVGX",parameters:["expression1","expression2"],id:"REGR_AVGX-1"},{identifier:"REGR_AVGY",parameters:["expression1","expression2"],id:"REGR_AVGY-1"},{identifier:"REGR_SXX",parameters:["expression1","expression2"],id:"REGR_SXX-1"},{identifier:"REGR_SXY",parameters:["expression1","expression2"],id:"REGR_SXY-1"},{identifier:"REGR_SYY",parameters:["expression1","expression2"],id:"REGR_SYY-1"},{identifier:"REGR_COUNT",parameters:["expression1","expression2"],id:"REGR_COUNT-1"},{identifier:"REGR_ICPT",parameters:["expression1","expression2"],id:"REGR_ICPT-1"},{identifier:"REGR_INTERCEPT",parameters:["expression1","expression2"],id:"REGR_INTERCEPT-1"},{identifier:"REGR_R2",parameters:["expression1","expression2"],id:"REGR_R2-1"},{identifier:"REGR_SLOPE",parameters:["expression1","expression2"],id:"REGR_SLOPE-1"},{identifier:"REPEAT",parameters:["expression","integer"],id:"REPEAT-1"},{identifier:"REPLACE",parameters:["source-string","search-string","replace-string?"],id:"REPLACE-1"},{identifier:"RID",parameters:["table-designator"],id:"RID-1"},{identifier:"RIGHT",parameters:["string-expression","integer","('CODEUNITS16' | 'CODEUNITS32' | 'OCTETS')?"],id:"RIGHT-1"},{identifier:"ROUND",parameters:["numeric-expression-1","(numeric-expression-2 | 0)?"],id:"ROUND-1"},{identifier:"ROUND_TIMESTAMP",parameters:["expression","(format-string | 'DD')?"],id:"ROUND_TIMESTAMP-1"},{identifier:"ROWID",parameters:["expression"],id:"ROWID-1"},{identifier:"RPAD",parameters:["string-expression","integer","pad?"],id:"RPAD-1"},{identifier:"RTRIM",parameters:["string-expression","trim-expression?"],id:"RTRIM-1"},{identifier:"SCORE",parameters:["column-name","search-argument","string-constant?"],id:"SCORE-1"},{identifier:"SECOND",parameters:["expression","integer-constant?"],id:"SECOND-1"},{identifier:"SIGN",parameters:["numeric-expression"],id:"SIGN-1"},{identifier:"SIN",parameters:["expression"],id:"SIN-1"},{identifier:"SINH",parameters:["expression"],id:"SINH-1"},{identifier:"SMALLINT",parameters:["numeric-expression"],id:"SMALLINT-1"},{identifier:"SMALLINT",parameters:["string-expression"],id:"SMALLINT-2"},{identifier:"SOAPHTTPC",parameters:["endpoint_url","soap_action","soap_body"],id:"SOAPHTTPC-1"},{identifier:"SOAPHTTPV",parameters:["endpoint_url","soap_action","soap_body"],id:"SOAPHTTPV-1"},{identifier:"SOAPHTTPNC",parameters:["endpoint_url","soap_action","soap_input"],id:"SOAPHTTPNC-1"},{identifier:"SOAPHTTPNV",parameters:["endpoint_url","soap_action","soap_input"],id:"SOAPHTTPNV-1"},{identifier:"SOUNDEX",parameters:["expression"],id:"SOUNDEX-1"},{identifier:"SPACE",parameters:["numeric-expression"],id:"SPACE-1"},{identifier:"SQRT",parameters:["numeric-expression"],id:"SQRT-1"},{identifier:"STDDEV",parameters:["('ALL' | 'DISTINCT')? numeric-expression"],id:"STDDEV-1"},{identifier:"STDDEV_POP",parameters:["('ALL' | 'DISTINCT')? numeric-expression"],id:"STDDEV_POP-1"},{identifier:"STDDEV_SAMP",parameters:["('ALL' | 'DISTINCT')? numeric-expression"],id:"STDDEV_SAMP-1"},{identifier:"STRIP",parameters:["string-expression","('BOTH' | 'B' | 'LEADING' | 'L' | 'TRAILING' | 'T')?","trim-constant?"],id:"STRIP-1"},{identifier:"STRLEFT",parameters:["character-expression","length","('CODEUNITS16' | 'CODEUNITS32' | 'OCTETS')?"],id:"STRLEFT-1"},{identifier:"STRPOS",parameters:["source-string","search-string"],id:"STRPOS-1"},{identifier:"STRRIGHT",parameters:["string-expression","integer","('CODEUNITS16' | 'CODEUNITS32' | 'OCTETS')?"],id:"STRRIGHT-1"},{identifier:"SUBSTR",parameters:["string-expression","start","length?"],id:"SUBSTR-1"},{identifier:"SUBSTRING",parameters:["string-expression","start","length?","'CODEUNITS16' | 'CODEUNITS32' | 'OCTETS'"],id:"SUBSTRING-1"},{identifier:"SUBSTRING",parameters:["graphic-expression","start","length?","'CODEUNITS16' | 'CODEUNITS32'"],id:"SUBSTRING-2"},{identifier:"SUBSTRING",parameters:["binary-expression","start","length?"],id:"SUBSTRING-3"},{identifier:"SUM",parameters:["('ALL' | 'DISTINCT')? numeric-expression"],id:"SUM-1"},{identifier:"TAN",parameters:["numeric-expression"],id:"TAN-1"},{identifier:"TANH",parameters:["numeric-expression"],id:"TANH-1"},{identifier:"TIME",parameters:["expression"],id:"TIME-1"},{identifier:"TIMESTAMP",parameters:["expression-1","expression-2?"],id:"TIMESTAMP-1"},{identifier:"TIMESTAMPADD",parameters:["interval","number","expression"],id:"TIMESTAMPADD-1"},{identifier:"TIMESTAMP_FORMAT",parameters:["string-expression","format-string","(precision-constant | 6)?"],id:"TIMESTAMP_FORMAT-1"},{identifier:"TIMESTAMP_ISO",parameters:["expression"],id:"TIMESTAMP_ISO-1"},{identifier:"TIMESTAMPDIFF",parameters:["numeric-expression","string-expression"],id:"TIMESTAMPDIFF-1"},{identifier:"TIMESTAMP_TZ",parameters:["expression-1","expression-2?"],id:"TIMESTAMP_TZ-1"},{identifier:"TO_CHAR",parameters:["character-expression"],id:"TO_CHAR-1"},{identifier:"TO_CHAR",parameters:["timestamp-expression","format-string"],id:"TO_CHAR-2"},{identifier:"TO_CHAR",parameters:["decimal-floating-point-expression","format-string?"],id:"TO_CHAR-3"},{identifier:"TO_CLOB",parameters:["character-expression"],id:"TO_CLOB-1"},{identifier:"TO_CLOB",parameters:["character-expression","integer","('CODEUNITS16' | 'CODEUNITS32' | 'OCTETS')?"],id:"TO_CLOB-1"},{identifier:"TO_CLOB",parameters:["graphic-expression"],id:"TO_CLOB-2"},{identifier:"TO_CLOB",parameters:["graphic-expression","integer","('CODEUNITS16' | 'CODEUNITS32')?"],id:"TO_CLOB-2"},{identifier:"TO_DATE",parameters:["string-expression","format-string","(precision-constant | 6)?"],id:"TO_DATE-1"},{identifier:"TO_NUMBER",parameters:["string-expression","format-string?"],id:"TO_NUMBER-1"},{identifier:"TOTALORDER",parameters:["expression1","expression2"],id:"TOTALORDER-1"},{identifier:"TO_TIMESTAMP",parameters:["string-expression","format-string","(precision-constant | 6)?"],id:"TO_TIMESTAMP-1"},{identifier:"TRANSLATE",parameters:["string-expression"],id:"TRANSLATE-1"},{identifier:"TRANSLATE",parameters:["string-expression","to-string","from-string?","(pad | '')?"],id:"TRANSLATE-1"},{identifier:"TRIM",parameters:["('BOTH' | 'B' | 'LEADING' | 'L' | 'TRAILING' | 'T')? trim-constant? 'FROM' string-expression"],id:"TRIM-1"},{identifier:"TRIM_ARRAY",parameters:["array-expression","numeric-expression"],id:"TRIM_ARRAY-1"},{identifier:"TRUNC",parameters:["numeric-expression-1","(numeric-expression-2 | 0)?"],id:"TRUNC-1"},{identifier:"TRUNCATE",parameters:["numeric-expression-1","(numeric-expression-2 | 0)?"],id:"TRUNCATE-1"},{identifier:"TRUNC_TIMESTAMP",parameters:["expression","(format-string | 'DD')?"],id:"TRUNC_TIMESTAMP-1"},{identifier:"UCASE",parameters:["string-expression","locale-name-string?","integer?"],id:"UCASE-1"},{identifier:"UNICODE",parameters:["string-expression"],id:"UNICODE-1"},{identifier:"UNICODE_STR",parameters:["string-expression","('UTF8' | 'UTF16')?"],id:"UNICODE_STR-1"},{identifier:"UNISTR",parameters:["string-expression","('UTF8' | 'UTF16')?"],id:"UNISTR-1"},{identifier:"UNPACK",parameters:["expression"],id:"UNPACK-1"},{identifier:"UPPER",parameters:["string-expression","locale-name-string?","integer?"],id:"UPPER-1"},{identifier:"VALUE",parameters:["expression","expression"],id:"VALUE-1"},{identifier:"VARBINARY",parameters:["string-expression","integer?"],id:"VARBINARY-1"},{identifier:"VARCHAR",parameters:["integer-expression"],id:"VARCHAR-1"},{identifier:"VARCHAR",parameters:["decimal-expression","decimal-character?"],id:"VARCHAR-2"},{identifier:"VARCHAR",parameters:["floating-point-expression"],id:"VARCHAR-3"},{identifier:"VARCHAR",parameters:["decimal-floating-point-expression"],id:"VARCHAR-4"},{identifier:"VARCHAR",parameters:["character-expression"],id:"VARCHAR-5"},{identifier:"VARCHAR",parameters:["character-expression","integer","('CODEUNITS16' | 'CODEUNITS32' | 'OCTETS')?"],id:"VARCHAR-5"},{identifier:"VARCHAR",parameters:["graphic-expression"],id:"VARCHAR-6"},{identifier:"VARCHAR",parameters:["graphic-expression","integer","('CODEUNITS16' | 'CODEUNITS32')?"],id:"VARCHAR-6"},{identifier:"VARCHAR",parameters:["datetime-expression"],id:"VARCHAR-7"},{identifier:"VARCHAR",parameters:["row-ID-expression"],id:"VARCHAR-8"},{identifier:"VARCHAR9",parameters:["decimal-expression","decimal-character?"],id:"VARCHAR9-1"},{identifier:"VARCHAR_FORMAT",parameters:["character-expression"],id:"VARCHAR_FORMAT-1"},{identifier:"VARCHAR_FORMAT",parameters:["timestamp-expression","format-string"],id:"VARCHAR_FORMAT-2"},{identifier:"VARCHAR_FORMAT",parameters:["numeric-expression","format-string?"],id:"VARCHAR_FORMAT-3"},{identifier:"VARGRAPHIC",parameters:["integer-expression"],id:"VARGRAPHIC-1"},{identifier:"VARGRAPHIC",parameters:["decimal-expression","decimal-character?"],id:"VARGRAPHIC-2"},{identifier:"VARGRAPHIC",parameters:["floating-point-expression"],id:"VARGRAPHIC-3"},{identifier:"VARGRAPHIC",parameters:["decimal-floating-point-expression"],id:"VARGRAPHIC-4"},{identifier:"VARGRAPHIC",parameters:["character-expression"],id:"VARGRAPHIC-5"},{identifier:"VARGRAPHIC",parameters:["character-expression","integer","('CODEUNITS16' | 'CODEUNITS32' | 'OCTETS')?"],id:"VARGRAPHIC-5"},{identifier:"VARGRAPHIC",parameters:["graphic-expression"],id:"VARGRAPHIC-6"},{identifier:"VARGRAPHIC",parameters:["graphic-expression","integer","('CODEUNITS16' | 'CODEUNITS32')?"],id:"VARGRAPHIC-6"},{identifier:"VAR",parameters:["('ALL' | 'DISTINCT')? numeric-expression"],id:"VAR-1"},{identifier:"VAR_POP",parameters:["('ALL' | 'DISTINCT')? numeric-expression"],id:"VAR_POP-1"},{identifier:"VARIANCE",parameters:["('ALL' | 'DISTINCT')? numeric-expression"],id:"VARIANCE-1"},{identifier:"VAR_SAMP",parameters:["('ALL' | 'DISTINCT')? numeric-expression"],id:"VAR_SAMP-1"},{identifier:"VARIANCE_SAMP",parameters:["('ALL' | 'DISTINCT')? numeric-expression"],id:"VARIANCE_SAMP-1"},{identifier:"VERIFY_GROUP_FOR_USER",parameters:["'SESSION_USER' | 'USER'","group-name-expression"],id:"VERIFY_GROUP_FOR_USER-1"},{identifier:"VERIFY_ROLE_FOR_USER",parameters:["'SESSION_USER' | 'USER'","role-name-expression"],id:"VERIFY_ROLE_FOR_USER-1"},{identifier:"VERIFY_TRUSTED_CONTEXT_ROLE_FOR_USER",parameters:["'SESSION_USER' | 'USER'","role-name-expression"],id:"VERIFY_TRUSTED_CONTEXT_ROLE_FOR_USER-1"},{identifier:"WEEK",parameters:["expression"],id:"WEEK-1"},{identifier:"WEEK_ISO",parameters:["expression"],id:"WEEK_ISO-1"},{identifier:"WRAP",parameters:["object-defintion-string"],id:"WRAP-1"},{identifier:"XMLAGG",parameters:["XML-expression"],id:"XMLAGG-1"},{identifier:"XMLAGG",parameters:["XML-expression 'ORDER BY' sort-key ('ASC' | 'DESC')?"],id:"XMLAGG-1"},{identifier:"XMLATTRIBUTES",parameters:["attribute-value-expression 'AS' attribute-name"],id:"XMLATTRIBUTES-1"},{identifier:"XMLCOMMENT",parameters:["string-expression"],id:"XMLCOMMENT-1"},{identifier:"XMLCONCAT",parameters:["XML-expression"],id:"XMLCONCAT-1"},{identifier:"XMLDOCUMENT",parameters:["XML-expression"],id:"XMLDOCUMENT-1"},{identifier:"XMLELEMENT",parameters:["'NAME' element-name","xmlnamespace-declaration?","xmlattributes-function?","element-content-expression?","option?"],id:"XMLELEMENT-1"},{identifier:"XMLFOREST",parameters:["xmlnamespace-function?","element-content-expression","('AS' element-name)?","option?"],id:"XMLFOREST-1"},{identifier:"XMLMODIFY",parameters:["xquery-update-constant","(query-variable-expression 'AS' identifier)?"],id:"XMLMODIFY-1"},{identifier:"XMLNAMESPACES",parameters:["namespace-uri 'AS' namespace-prefix"],id:"XMLNAMESPACES-1"},{identifier:"XMLNAMESPACES",parameters:["'DEFAULT' namespace-uri"],id:"XMLNAMESPACES-1"},{identifier:"XMLNAMESPACES",parameters:["'NO DEFAULT"],id:"XMLNAMESPACES-1"},{identifier:"XMLPARSE",parameters:["'DOCUMENT' (string-expression | XML-host-variable) ('STRIP WHITESPACE' | 'PRESERVE WHITESPACE')?"],id:"XMLPARSE-1"},{identifier:"XMLPI",parameters:["pi-name","string-expression?"],id:"XMLPI-1"},{identifier:"XMLQUERY",parameters:["xquery-expression-constant"],id:"XMLQUERY-1"},{identifier:"XMLQUERY",parameters:["xquery-expression-constant ('PASSING' 'BY REF'? xquery-argument)? ('RETURNING SEQUENCE' 'BY REF'?)? 'EMPTY ON EMPTY'?"],id:"XMLQUERY-1"},{identifier:"XMLSERIALIZE",parameters:["'CONTENT'? XML-expression 'AS' data-type ('VERSION 1.0' | 'EXCLUDING XMLDECLARATION' | 'INCLUDING XMLDECLARATION')?"],id:"XMLSERIALIZE-1"},{identifier:"XMLTABLE",parameters:["xmlnamespaces-declaration?","row-xquery-expression-constant"],id:"XMLTABLE-1"},{identifier:"XMLTABLE",parameters:["xmlnamespaces-declaration?","row-xquery-expression-constant 'PASSING' 'BY REF'? row-xquery-argument"],id:"XMLTABLE-1"},{identifier:"XMLTABLE",parameters:["xmlnamespaces-declaration?","row-xquery-expression-constant 'COLUMNS' (xml-table-regular-column-definition | xml-table-ordinality-column-definition)"],id:"XMLTABLE-1"},{identifier:"XMLTABLE",parameters:["xmlnamespaces-declaration?","row-xquery-expression-constant 'PASSING' 'BY REF'? row-xquery-argument 'COLUMNS' (xml-table-regular-column-definition | xml-table-ordinality-column-definition)"],id:"XMLTABLE-1"},{identifier:"XMLTEXT",parameters:["string-expression"],id:"XMLTEXT-1"},{identifier:"XMLXSROBJECTID",parameters:["xml-value-expression"],id:"XMLXSROBJECTID-1"},{identifier:"XSLTRANSFORM",parameters:["xml-document","xsl-stylesheet","xsl-parameters"],id:"XSLTRANSFORM-1"},{identifier:"YEAR",parameters:["expression"],id:"YEAR-1"}],t.PROCEDURES=[{identifier:"ADMIN_COMMAND_DB2",parameters:["db2-command: VARCHAR(32704) IN","command-length: INTEGER IN","processing-type: VARCHAR(3) IN","db2-member: VARCHAR(8) IN | NULL","commands-executed: INTEGER OUT","IFI-return-code: INTEGER OUT","IFI-reason-code: INTEGER OUT","excess-bytes: INTEGER OUT","group-IFI-reason-code: INTEGER OUT","group-excess-bytes: INTEGER OUT","return-code: INTEGER OUT","message: VARCHAR(1331) OUT"],id:"ADMIN_COMMAND_DB2-1"},{identifier:"ADMIN_COMMAND_DSN",parameters:["DSN-subcommand: VARCHAR(32704) IN","message: VARCHAR(1331) OUT"],id:"ADMIN_COMMAND_DSN-1"},{identifier:"ADMIN_COMMAND_MVS",parameters:["type: VARCHAR(24) IN","command_prefix: VARCHAR(8) IN | NULL","remote_system: VARCHAR(8) IN | NULL","jobname: VARCHAR(8) IN | NULL","command: VARCHAR(126) IN","parameters: VARCHAR(124) IN | NULL","subparameters: VARCHAR(124) IN | NULL","wait_timeout: INTEGER IN | NULL","return_code: INTEGER OUT","command_completion_code: INTEGER OUT","message: VARCHAR(1331) OUT | NULL"],id:"ADMIN_COMMAND_MVS-1"},{identifier:"ADMIN_COMMAND_UNIX",parameters:["user-ID: VARCHAR(128) IN | NULL","password: VARCHAR(24) IN | NULL","USS-command: VARCHAR(32704) IN","output-layout: VARCHAR(1024) IN | NULL","return-code: INTEGER OUT","message: VARCHAR(1331) OUT"],id:"ADMIN_COMMAND_UNIX-1"},{identifier:"ADMIN_DS_BROWSE",parameters:["data-type: INTEGER IN","data-set-name: CHAR(44) IN","member-name: CHAR(8) IN","dump-option: CHAR(1) IN","return-code: INTEGER OUT","message: VARCHAR(1331) OUT"],id:"ADMIN_DS_BROWSE-1"},{identifier:"ADMIN_DS_DELETE",parameters:["data-set-type: INTEGER IN","data-set-name: CHAR(44) IN","parent-data-set-name: CHAR(44) IN","dump-option: CHAR(1) IN","return-code: INTEGER OUT","message: VARCHAR(1331) OUT"],id:"ADMIN_DS_DELETE-1"},{identifier:"ADMIN_DS_LIST",parameters:["data-set-name: CHAR(44) IN","list-members: CHAR(1) IN","list-generations: CHAR(41 IN","max-results: INTEGER IN","dump-option: CHAR(1) IN","return-code: INTEGER OUT","message: VARCHAR(1331) OUT"],id:"ADMIN_DS_LIST-1"},{identifier:"ADMIN_DS_RENAME",parameters:["data-set-type: INTEGER IN","data-set-name: CHAR(44) IN","parent-data-set-name: CHAR(44) IN","new-data-set-name: CHAR(44) IN","dump-option: CHAR(1) IN","return-code: INTEGER OUT","message: VARCHAR(1331) OUT"],id:"ADMIN_DS_RENAME-1"},{identifier:"ADMIN_DS_SEARCH",parameters:["data-set-name: CHAR(44) IN","member-name: CHAR(8) IN","dump-option: CHAR(1) IN","data-set-exists: INTEGER OUT","return-code: INTEGER OUT","message: VARCHAR(1331) OUT"],id:"ADMIN_DS_SEARCH-1"},{identifier:"ADMIN_DS_WRITE",parameters:["data-type: INTEGER IN","data-set-name: CHAR(44) IN","member-name: CHAR(8) IN","processing-option: CHAR(2) IN","dump-option: CHAR(1) IN","return-code: INTEGER OUT","message: VARCHAR(1331) OUT"],id:"ADMIN_DS_WRITE-1"},{identifier:"ADMIN_EXPLAIN_MAINT",parameters:["mode: VARCHAR(8) IN | NULL","action: VARCHAR(30) IN | NULL","manage-alias: VARCHAR(3) IN | NULL","table-set: VARCHAR(1000) IN | NULL","authid: VARCHAR(128) IN","schema-name: VARCHAR(128) IN","schema-alias: VARCHAR(128) IN | NULL","database-name: VARCHAR(8) IN | NULL","stogroup-database: VARCHAR(128) IN | NULL","stogroup-index: VARCHAR(128) IN | NULL","4k-bufferpool: VARCHAR(8) IN | NULL","8k-bufferpool: VARCHAR(8) IN | NULL","16k-bufferpooL: VARCHAR(8) IN | NULL","32k-bufferpool: VARCHAR(8) IN | NULL","index-bufferpool: VARCHAR(8) IN | NULL","bp-4kb-lob: VARCHAR(8) IN | NULL","bp-8kb-lob: VARCHAR(8) IN | NULL","bp-16kb-lob: VARCHAR(8) IN | NULL","bp-32kb-lob: VARCHAR(8) IN | NULL","return-code: INTEGER OUT","message: VARCHAR(1331) OUT"],id:"ADMIN_EXPLAIN_MAINT-1"},{identifier:"ADMIN_INFO_HOST",parameters:["processing-option: INTEGER IN","db2-member: CHAR(8) IN | NULL","return-code: INTEGER OUT","message: VARCHAR(1331) OUT"],id:"ADMIN_INFO_HOST-1"},{identifier:"ADMIN_INFO_IFCID",parameters:["ifcid: INTEGER IN","db2-member: NULL","return-code: INTEGER OUT","message: VARCHAR(1331) OUT"],id:"ADMIN_INFO_IFCID-1"},{identifier:"ADMIN_INFO_SMS",parameters:["return-code: INTEGER OUT","message: VARCHAR(1331) OUT"],id:"ADMIN_INFO_SMS-1"},{identifier:"ADMIN_INFO_SSID",parameters:["subsystem-ID: VARCHAR(4) OUT","return-code: INTEGER OUT","message: VARCHAR(1331) OUT"],id:"ADMIN_INFO_SSID-1"},{identifier:"ADMIN_INFO_SQL",parameters:["table-creator: VARCHAR(128) IN","table-name: VARCHAR(128) IN","catalog-creator: VARCHAR(128) IN","plan-info: VARCHAR(150) IN","collect-ddl: CHAR(1) IN","collect-stats: CHAR(1) IN","collect-column-stats: CHAR(1) IN","edit-ddl: CHAR(1) IN","edit-version-mode: CHAR(4) IN","partition-rotation: CHAR(1) IN","output-method: CHAR(1) IN","output-info: VARCHAR(1024) IN","pmr-info: VARCHAR(13) IN","return-code: INTEGER OUT","message: VARCHAR(1331) OUT"],id:"ADMIN_INFO_SQL-1"},{identifier:"ADMIN_INFO_SYSLOG",parameters:["search-filter: VARCHAR(1300) IN","system-name VARCHAR(8) IN","start-date: DATE IN","start-time: TIME IN","end-date: DATE IN","end-time: TIME IN","max-entries: INTEGER IN","message: VARCHAR(1331) OUT"],id:"ADMIN_INFO_SYSLOG-1"},{identifier:"ADMIN_INFO_SYSPARM",parameters:["db2-member: VARCHAR(8) IN | NULL","return-code: INTEGER OUT","message: VARCHAR(1331) OUT"],id:"ADMIN_INFO_SYSPARM-1"},{identifier:"ADMIN_JOB_CANCEL",parameters:["user-ID: VARCHAR(128) IN | NULL","password: VARCHAR(24) IN | NULL","processing-option: INTEGER IN","job-ID: CHAR(8) IN","return-code: INTEGER OUT","message: VARCHAR(1331) OUT"],id:"ADMIN_JOB_CANCEL-1"},{identifier:"ADMIN_JOB_FETCH",parameters:["user-ID: VARCHAR(128) IN | NULL","password: VARCHAR(24) IN | NULL","job-ID: CHAR(8) IN","return-code: INTEGER OUT","message: VARCHAR(1331) OUT"],id:"ADMIN_JOB_FETCH-1"},{identifier:"ADMIN_JOB_QUERY",parameters:["user-ID: VARCHAR(128) IN | NULL","password: VARCHAR(24) IN | NULL","job-ID: CHAR(8) IN","status: INTEGER OUT","max-RC: INTEGER OUT","completion-type: INTEGER OUT","system-abend-code: INTEGER OUT","user-abend-code: INTEGER OUT","return-code: INTEGER OUT","message: VARCHAR(1331) OUT"],id:"ADMIN_JOB_QUERY-1"},{identifier:"ADMIN_JOB_SUBMIT",parameters:["user-ID: VARCHAR(128) IN | NULL","password: VARCHAR(24) IN | NULL","job-ID: CHAR(8) OUT","return-code: INTEGER OUT","message: VARCHAR(1331) OUT"],id:"ADMIN_JOB_SUBMIT-1"},{identifier:"ADMIN_TASK_ADD",parameters:["user-ID: VARCHAR(128) IN | NULL","password: VARCHAR(24) IN | NULL","begin-timestamp: TIMESTAMP IN | NULL","end-timestamp: TIMESTAMP IN | NULL","max-invocations: INTEGER IN | NULL","interval: INTEGER IN","NULL","NULL","NULL","NULL","db2-ssid: VARCHAR(4) IN | NULL","procedure-schema: VARCHAR(128) IN | NULL","procedure-name VARCHAR(128) IN","procedure-input: VARCHAR(4096) IN | NULL","NULL","NULL","NULL","task-name: VARCHAR(128) INOUT | NULL","description: VARCHAR(128) IN | NULL","return-code: INTEGER OUT","message: VARCHAR(1331) OUT"],id:"ADMIN_TASK_ADD-1"},{identifier:"ADMIN_TASK_ADD",parameters:["user-ID: VARCHAR(128) IN | NULL","password: VARCHAR(24) IN | NULL","begin-timestamp: TIMESTAMP IN | NULL","end-timestamp: TIMESTAMP IN | NULL","max-invocations: INTEGER IN | NULL","NULL","point-in-time: VARCHAR(400) IN","NULL","NULL","NULL","db2-ssid: VARCHAR(4) IN | NULL","procedure-schema: VARCHAR(128) IN | NULL","procedure-name VARCHAR(128) IN","procedure-input: VARCHAR(4096) IN | NULL","NULL","NULL","NULL","task-name: VARCHAR(128) INOUT | NULL","description: VARCHAR(128) IN | NULL","return-code: INTEGER OUT","message: VARCHAR(1331) OUT"],id:"ADMIN_TASK_ADD-1"},{identifier:"ADMIN_TASK_ADD",parameters:["user-ID: VARCHAR(128) IN | NULL","password: VARCHAR(24) IN | NULL","begin-timestamp: TIMESTAMP IN | NULL","end-timestamp: TIMESTAMP IN | NULL","max-invocations: INTEGER IN | NULL","NULL","NULL","trigger-task-name: VARCHAR(128) IN","trigger-task-cond: CHAR(2) IN | NULL","trigger-task-code: INTEGER IN | NULL","db2-ssid: VARCHAR(4) IN | NULL","procedure-schema: VARCHAR(128) IN | NULL","procedure-name VARCHAR(128) IN","procedure-input: VARCHAR(4096) IN | NULL","NULL","NULL","NULL","task-name: VARCHAR(128) INOUT | NULL","description: VARCHAR(128) IN | NULL","return-code: INTEGER OUT","message: VARCHAR(1331) OUT"],id:"ADMIN_TASK_ADD-1"},{identifier:"ADMIN_TASK_ADD",parameters:["user-ID: VARCHAR(128) IN | NULL","password: VARCHAR(24) IN | NULL","begin-timestamp: TIMESTAMP IN | NULL","end-timestamp: TIMESTAMP IN | NULL","max-invocations: INTEGER IN | NULL","interval: INTEGER IN","NULL","NULL","NULL","NULL","db2-ssid: VARCHAR(4) IN | NULL","NULL","NULL","NULL","JCL-library: VARCHAR(44) IN","JCL-member: VARCHAR(8) IN | NULL","job- wait: VARCHAR(8) IN","task-name: VARCHAR(128) INOUT | NULL","description: VARCHAR(128) IN | NULL","return-code: INTEGER OUT","message: VARCHAR(1331) OUT"],id:"ADMIN_TASK_ADD-1"},{identifier:"ADMIN_TASK_ADD",parameters:["user-ID: VARCHAR(128) IN | NULL","password: VARCHAR(24) IN | NULL","begin-timestamp: TIMESTAMP IN | NULL","end-timestamp: TIMESTAMP IN | NULL","max-invocations: INTEGER IN | NULL","NULL","point-in-time: VARCHAR(400) IN","NULL","NULL","NULL","db2-ssid: VARCHAR(4) IN | NULL","NULL","NULL","NULL","JCL-library: VARCHAR(44) IN","JCL-member: VARCHAR(8) IN | NULL","job- wait: VARCHAR(8) IN","task-name: VARCHAR(128) INOUT | NULL","description: VARCHAR(128) IN | NULL","return-code: INTEGER OUT","message: VARCHAR(1331) OUT"],id:"ADMIN_TASK_ADD-1"},{identifier:"ADMIN_TASK_ADD",parameters:["user-ID: VARCHAR(128) IN | NULL","password: VARCHAR(24) IN | NULL","begin-timestamp: TIMESTAMP IN | NULL","end-timestamp: TIMESTAMP IN | NULL","max-invocations: INTEGER IN | NULL","NULL","NULL","trigger-task-name: VARCHAR(128) IN","trigger-task-cond: CHAR(2) IN | NULL","trigger-task-code: INTEGER IN | NULL","db2-ssid: VARCHAR(4) IN | NULL","NULL","NULL","NULL","JCL-library: VARCHAR(44) IN","JCL-member: VARCHAR(8) IN | NULL","job- wait: VARCHAR(8) IN","task-name: VARCHAR(128) INOUT | NULL","description: VARCHAR(128) IN | NULL","return-code: INTEGER OUT","message: VARCHAR(1331) OUT"],id:"ADMIN_TASK_ADD-1"},{identifier:"ADMIN_TASK_CANCEL",parameters:["task-name: VARCHAR(128) IN","return-code: INTEGER OUT","message: VARCHAR(1331) OUT"],id:"ADMIN_TASK_CANCEL-1"},{identifier:"ADMIN_TASK_REMOVE",parameters:["task-name: VARCHAR(128) IN","return-code: INTEGER OUT","message: VARCHAR(1331) OUT"],id:"ADMIN_TASK_REMOVE-1"},{identifier:"ADMIN_TASK_UPDATE",parameters:["task-name: VARCHAR(128) IN","description: VARCHAR(128) IN","begin_timestamp: TIMESTAMP IN","end_timestamp: TIMESTAMP IN","max_invocations: INTEGER IN","interval: INTEGER IN","point-in-time: VARCHAR(400) IN","trigger-task-name: VARCHAR(128) IN","trigger-task-cond: CHAR(2) IN","trigger-task-code: INTEGER IN","db2-ssid: VARCHAR(4) IN","return-code: INTEGER OUT","message: VARCHAR(1331) OUT"],id:"ADMIN_TASK_UPDATE-1"},{identifier:"ADMIN_UPDATE_SYSPARM",parameters:["db2-member: VARCHAR(8) IN | NULL","parameter_module: VARCHAR(8) IN | NULL","module_library: VARCHAR(44) IN | NULL","source_library: VARCHAR(44) IN | NULL","load: CHAR(1) IN | NULL","return-code: INTEGER OUT"],id:"ADMIN_UPDATE_SYSPARM-1"},{identifier:"ADMIN_UTL_EXECUTE",parameters:["execute-options: VARCHAR(30000) IN","history-entry-id: BIGINT OUT","return-code: INTEGER OUT","message: VARCHAR(1331) OUT"],id:"ADMIN_UTL_EXECUTE-1"},{identifier:"ADMIN_UTL_MONITOR",parameters:["monitor-options: VARCHAR(30000) IN","history-entry-id: BIGINT OUT","return-code: INTEGER OUT","message: VARCHAR(1331) OUT"],id:"ADMIN_UTL_MONITOR-1"},{identifier:"ADMIN_UTL_MODIFY",parameters:["modify-options: VARCHAR(30000) IN","history-entry-id: BIGINT OUT","return-code: INTEGER OUT","message: VARCHAR(1331) OUT"],id:"ADMIN_UTL_MODIFY-1"},{identifier:"ADMIN_UTL_SCHEDULE",parameters:["max-parallel: SMALLINT IN","optimize-workload: VARCHAR(8) IN | NULL","stop-condition: VARCHAR(8) IN | NULL","utility-ID-stem: VARCHAR(8) IN","shutdown-duration: FLOAT(8) IN | NULL","number-of-objects: INTEGER INOUT","utilities-run: INTEGER OUT","highest-return-code: INTEGER OUT","parallel-tasks: SMALLINT OUT","return-code: INTEGER OUT","message: VARCHAR(1331) OUT"],id:"ADMIN_UTL_SCHEDULE-1"},{identifier:"ADMIN_UTL_SORT",parameters:["max-parallel: SMALLINT IN","max-per-job: SMALLINT IN | NULL","optimize-workload: VARCHAR(8) IN | NULL","batch-execution: VARCHAR(8) IN | NULL","number-of-objects: INTEGER INOUT","parallel-units: SMALLINT OUT","max-objects: INTEGER OUT","max-sequences: INTEGER OUT","return-code: INTEGER OUT","message: VARCHAR(1331) OUT"],id:"ADMIN_UTL_SORT-1"},{identifier:"CREATE_WRAPPED",parameters:["object-definition-string"],id:"CREATE_WRAPPED-1"},{identifier:"DSNACCOX",parameters:["QueryType","ObjectType","ICType","CatlgSchema","LocalSchema","ChkLvl","Criteria","SpecialParm","CRUpdatedPagesPct","CRUpdatedPagesAbs","CRChangesPct","CRDaySncLastCopy","ICRUpdatedPagesPct","ICRUpdatedPagesAbs","ICRChangesPct","CRIndexSize","RRTInsertsPct","RRTInsertsAbs","RRTDeletesPct","RRTDeletesAbs","RRTUnclustInsPct","RRTDisorgLOBPct","RRTDataSpaceRat","RRTMassDelLimit","RRTIndRefLimit","RRIInsertsPct","RRIInsertsAbs","RRIDeletesPct","RRIDeletesAbs","RRIAppendInsertPct","RRIPseudoDeletePct","RRIMassDelLimit","RRILeafLimit","RRINumLevelsLimit","SRTInsDelUpdPct","SRTInsDelUpdAbs","SRTMassDelLimit","SRIInsDelUpdPct","SRIInsDelUpdAbs","SRIMassDelLimit","ExtentLimit","LastStatement","ReturnCode","ErrorMsg","IFCARetCode","IFCAResCode","ExcessBytes"],id:"DSNACCOX-1"},{identifier:"DSNACICS",parameters:["parm-level: INTEGER IN","pgm-name: CHAR(8) IN","CICS-applid: CHAR(8) IN","CICS-level: INTEGER IN","connect-type: CHAR(8) IN","netname: CHAR(8) IN","mirror-trans: CHAR(4) IN","COMMAREA: VARCHAR(32704) INOUT","COMMAREA-total-len: INTEGER IN","sync-opts: INTEGER IN","return-code: INTEGER OUT","message: VARCHAR(1331) OUT"],id:"DSNACICS-1"},{identifier:"DSNAIMS",parameters:["dsnaims-function","dsnaims-2pc | NULL","xcf-group-name","xcf-ims-name","racf-userid","racf-groupid | NULL","ims-lterm | NULL","ims-modname | NULL","ims-tran-name | NULL","ims-data-in | NULL","ims-data-out | NULL","otma-tpipe-name | NULL","otma-dru-name | NULL","user-data-in | NULL","user-data-out","status-message","return-code"],id:"DSNAIMS-1"},{identifier:"DSNAIMS2",parameters:["dsnaims-function","dsnaims-2pc | NULL","xcf-group-name","xcf-ims-name","racf-userid","racf-groupid | NULL","ims-lterm | NULL","ims-modname | NULL","ims-tran-name | NULL","ims-data-in | NULL","ims-data-out | NULL","otma-tpipe-name | NULL","otma-dru-name | NULL","user-data-in | NULL","user-data-out","status-message","otma-data-inseg | NULL","return-code"],id:"DSNAIMS2-1"},{identifier:"DSNLEUSR",parameters:["Type: CHAR(1) IN","AuthID: VARCHAR(128) IN | NULL","LinkName: CHAR(8) IN | NULL","NewAuthID: VARCHAR(54) IN | NULL","Password: IN | NULL","ReturnCode: INTEGER OUT","MsgArea: VARCHAR(500) OUT"],id:"DSNLEUSR-1"},{identifier:"DSNUTILU",parameters:["utility-id: VARCHAR(16) IN","restart: VARCHAR(8) IN","utstmt: VARCHAR(32704) IN","retcode: INTEGER OUT"],id:"DSNUTILU-1"},{identifier:"DSNUTILV",parameters:["utility-id: VARCHAR(16) IN","restart: VARCHAR(8) IN","utstmt: CLOB(2G) IN","retcode: INTEGER OUT"],id:"DSNUTILV-1"},{identifier:"DSN_WLM_APPLENV",parameters:["action: VARCHAR(20) IN","policyid: VARCHAR(8) IN","wlmoptions: VARCHAR(4000) IN","return-code: INTEGER OUT","message: VARCHAR(1331) OUT"],id:"DSN_WLM_APPLENV-1"},{identifier:"CREATE_DGTT",parameters:[],id:"CREATE_DGTT-1"},{identifier:"DISABLE",parameters:[],id:"DISABLE-1"},{identifier:"ENABLE",parameters:["buffer-size: INTEGER IN"],id:"ENABLE-1"},{identifier:"GET_LINE",parameters:["line: VARGRAPHIC(16334) OUT","status: INTEGER OUT"],id:"GET_LINE-1"},{identifier:"GET_LINES",parameters:["lines: VARGRAPHIC(16334) OUT","numlines: INTEGER INOUT"],id:"GET_LINES-1"},{identifier:"NEW_LINE",parameters:[],id:"NEW_LINE-1"},{identifier:"PUT",parameters:["item: VARGRAPHIC(16334) OUT"],id:"PUT-1"},{identifier:"PUT_LINE",parameters:["item: VARGRAPHIC(16334) OUT"],id:"PUT_LINE-1"},{identifier:"GET_CONFIG",parameters:["major_version: INTEGER OUT | NULL","minor_version: INTEGER OUT | NULL","requested_locale: VARCHAR(33) IN | NULL","xml_input: BLOB(2G) IN | NULL","xml_filter: BLOB(4K) IN | NULL","xml_output: BLOB(2G) OUT","xml_message: BLOB(64K) OUT"],id:"GET_CONFIG-1"},{identifier:"GET_MESSAGE",parameters:["major_version: INTEGER INOUT | NULL","minor_version: INTEGER INOUT | NULL","requested_locale: VARCHAR(33) IN | NULL","xml_input: BLOB(2G) IN | NULL","xml_filter: BLOB(4K) IN | NULL","xml_output: BLOB(2G) OUT","xml_message: BLOB(64K) OUT"],id:"GET_MESSAGE-1"},{identifier:"GET_SYSTEM_INFO",parameters:["major_version: INTEGER INOUT | NULL","minor_version: INTEGER INOUT | NULL","requested_locale: VARCHAR(33) IN | NULL","xml_input: BLOB(2G) IN | NULL","xml_filter: BLOB(4K) IN | NULL","xml_output: BLOB(2G) OUT","xml_message: BLOB(64K) OUT"],id:"GET_SYSTEM_INFO-1"},{identifier:"SET_MAINT_MODE_RECORD_NO_TEMPORALHISTORY",parameters:[],id:"SET_MAINT_MODE_RECORD_NO_TEMPORALHISTORY-1"},{identifier:"SET_PLAN_HINT",parameters:["major_version: INTEGER INOUT | NULL","minor_version: INTEGER INOUT | NULL","requested_locale: VARCHAR(33) IN | NULL","xml_input: BLOB(2G) IN | NULL","xml_filter: BLOB(4K) IN | NULL","xml_output: BLOB(2G) OUT","xml_message: BLOB(64K) OUT"],id:"SET_PLAN_HINT-1"},{identifier:"ALTER_JAVA_PATH",parameters:["JAR-name1: VARCHAR(257) IN","path: VARCHAR(2048) IN"],id:"ALTER_JAVA_PATH-1"},{identifier:"DB2_INSTALL_JAR",parameters:["JAR-locator: BLOB IN","JAR-name: VARCHAR(257) IN","deploy: INTEGER IN"],id:"DB2_INSTALL_JAR-1"},{identifier:"DB2_REPLACE_JAR",parameters:["JAR-locator: BLOB IN","JAR-name: VARCHAR(257) IN"],id:"DB2_REPLACE_JAR-1"},{identifier:"INSTALL_JAR",parameters:["url: VARCHAR(1024) IN","JAR-name: VARCHAR(257) IN","deploy: INTEGER IN"],id:"INSTALL_JAR-1"},{identifier:"REMOVE_JAR",parameters:["JAR-name: VARCHAR(257) IN","undeploy: INTEGER IN"],id:"REMOVE_JAR-1"},{identifier:"REPLACE_JAR",parameters:["url: VARCHAR(1024) IN","JAR-name: VARCHAR(257) IN"],id:"REPLACE_JAR-1"},{identifier:"WLM_REFRESH",parameters:["WLM-environment: VARCHAR(32) IN","ssid: VARCHAR(4) IN | NULL","status-message: VARCHAR(120) OUT","return-code: INTEGER OUT"],id:"WLM_REFRESH-1"},{identifier:"WLM_SET_CLIENT_INFO",parameters:["client_userid: VARCHAR(255) IN | NULL","client_wrkstnname: VARCHAR(255) IN | NULL","client_applname: VARCHAR(255) IN | NULL","client_acctstr: VARCHAR(255) IN | NULL"],id:"WLM_SET_CLIENT_INFO-1"},{identifier:"XSR_ADDSCHEMADOC",parameters:["rschema: VARCHAR(128) IN | NULL","name: VARCHAR(128) IN","schemalocation: VARCHAR(1000) IN | NULL","content: BLOB(30M) IN","docproperty: BLOB(5M) IN | NULL"],id:"XSR_ADDSCHEMADOC-1"},{identifier:"XSR_COMPLETE",parameters:["rschema: VARCHAR(128) IN | NULL","name: VARCHAR(128) IN","schema-properties: BLOB(5M) IN","for-decomposition: 0"],id:"XSR_COMPLETE-1"},{identifier:"XSR_REGISTER",parameters:["rschema: VARCHAR(128) IN | NULL","name: VARCHAR(128) INOUT | NULL","schemalocation: VARCHAR(1000) IN | NULL","content: BLOB(30M) IN","docproperty: BLOB(5M) IN | NULL"],id:"XSR_REGISTER-1"},{identifier:"XSR_REMOVE",parameters:["rschema: VARCHAR(128) IN | NULL","name: VARCHAR(128) IN"],id:"XSR_REMOVE-1"}]},33586:function(e,t,r){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,t,r,i){void 0===i&&(i=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,i,n)}:function(e,t,r,i){void 0===i&&(i=r),e[i]=t[r]}),n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&i(t,e,r);return n(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=a(r(18136)),c=a(r(6320)),d=s(r(81458)),p=r(90497),u=s(r(7713)),m=s(r(3405)),h=o.loadMessageBundle(),l={characterConversion:c.CharacterConversionConfig.REPLACE,dependencies:"",maxHeapSize:"256M",port:"3000"};class f{constructor(){}static initialize(e){m.default.log(h("db2sqlservice.initialize","Db2SqlService:initialize: Initializing Db2SqlService.")),f.connection=e,f.loadConfiguration().then((()=>{f.createClient(f.serverOptions).then((e=>{f.managedDssClient.update(e)})).catch((e=>{f.managedDssClient.dispose()}))}))}static getClient(){try{return f.managedDssClient.get()}catch(e){throw new Error(c.VSCodeRequestError.DSS_CLIENT_UNAVAILABLE)}}static loadConfiguration(){return f.connection.workspace.getConfiguration(`${c.EXTENSION_NAME}.${c.VSCodeConfiguration.DB2SQLSERVICE}`).then((e=>{const t=e[c.VSCodeConfiguration.SQL_RESULTS].characterConversion;f.serverOptions={characterConversion:Object.values(c.CharacterConversionConfig).includes(t)?t:l.characterConversion,dependencies:e.dependencies||l.dependencies,maxHeapSize:e.maxHeapSize||l.maxHeapSize,port:e.port||l.port},m.default.info(h("db2sqlservice.loadConfiguration","Db2SqlService:loadConfiguration: Configurations loaded {0}.",JSON.stringify(f.serverOptions)))}))}static createClient(e){return new Promise(((t,r)=>{const i=new p.Db2SqlServiceClient(e);i.onTelemetry(((e,t,r)=>{f.connection.sendNotification(c.LanguageClientInterface.TELEMETRY,[e,t,r])})),i.onError((e=>{d.default.showErrorWindow(e),r(e)})),i.onRequest(c.LanguageClientInterface.CONNECTION_CREDENTIAL,(e=>f.connection.sendRequest(c.LanguageClientInterface.CONNECTION_CREDENTIAL,e))),i.onNotification(c.LanguageClientInterface.CONNECTION_UPDATE,(e=>{f.connection.sendNotification(c.LanguageClientInterface.CONNECTION_UPDATE,e)})),i.onReady((()=>{m.default.info(h("db2sqlservice.createClient","Db2SqlService:createClient: DSS client ready, sending connection key {0}.",c.EXTENSION_NAME)),i.sendNotification(c.DB2SqlServiceInterface.SET_CONNECTION_KEY,c.EXTENSION_NAME),t(i)})),i.start()}))}}t.default=f,f.serverOptions=l,f.managedDssClient=new u.default},81458:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});class r{constructor(){}static configure(e){r.connection=e}static showErrorWindow(e){0===e.options.length?r.connection.window.showErrorMessage(e.message):r.connection.window.showErrorMessage(e.message,...e.options).then((e=>{e&&r.connection.sendNotification(e.method,e.data)}))}}t.default=r},3120:function(e,t,r){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,t,r,i){void 0===i&&(i=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,i,n)}:function(e,t,r,i){void 0===i&&(i=r),e[i]=t[r]}),n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&i(t,e,r);return n(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.platforms=void 0;const o=a(r(32081)),c=s(r(58398)),d=a(r(71017)),p=a(r(18136)),u=a(r(6320)),m=s(r(3405)),h=p.loadMessageBundle();t.platforms=new Map,t.platforms.set("darwin","config_mac"),t.platforms.set("win32","config_win"),t.platforms.set("linux","config_linux");class l{constructor(){}static initialize(e,t,r){l.connection=e,l.initializationOptions=t,l.hasConfigurationCapability=!(!r.workspace||!r.workspace.configuration),l.hasWorkspaceFolderCapability=!(!r.workspace||!r.workspace.workspaceFolders),l.hasDiagnosticRelatedInformationCapability=!!(r.textDocument&&r.textDocument.publishDiagnostics&&r.textDocument.publishDiagnostics.relatedInformation)}static getPlatform(){return new Promise(((e,r)=>{const i=t.platforms.get(process.platform);i||r(u.createVSCodeDisplayableError(u.VSCodeWindowError.PLATFORM_NOT_FOUND,process.platform)),m.default.info(h("environmentManager.getPlatform","EnvironmentManager:getPlatform: Found platform {0} for {1}.",i,process.platform)),e(i)}))}static async getJavaRuntime(){const e=await l.getJavaHome();return await l.validateJava(e),d.join(e,"bin","java")}static async getJavaHome(){let e=await l.connection.workspace.getConfiguration(`${u.EXTENSION_NAME}.${u.VSCodeConfiguration.JAVA_HOME}`);if(e)return m.default.log(h("environmentManager.getJavaPath","EnvironmentManager:getJavaPath: Found {0}.{1} user setting in Preferences with value: {2}. Will use that to locate a valid Java SDK for language servers.",u.EXTENSION_NAME,u.VSCodeConfiguration.JAVA_HOME,e)),e;const t=await l.connection.workspace.getConfiguration(u.VSCodeConfiguration.JAVA_HOME);return t?(m.default.log(h("environmentManager.getJavaPath","EnvironmentManager:getJavaPath: Found {0} user setting in Preferences with value: {1}. Will use that to locate a valid Java SDK for language servers.",u.VSCodeConfiguration.JAVA_HOME,t)),t):(e=process.env.JAVA_HOME,e?(m.default.log(h("environmentManager.getJavaPath",'EnvironmentManager:getJavaPath: Found "JAVA_HOME" environment variable with value: {0}. Will use that to locate a valid Java SDK for language servers.',e)),e):(e=process.env.JDK_HOME,e?(m.default.log(h("environmentManager.getJavaPath",'EnvironmentManager:getJavaPath: Found "JDK_HOME" environment variable with value: {0}. Will use that to locate a valid Java SDK for language servers.',e)),e):(e=process.env.JRE_HOME,e?(m.default.log(h("environmentManager.getJavaPath",'EnvironmentManager:getJavaPath: Found "JRE_HOME" environment variable with value: {0}. Will use that to locate a valid Java SDK for language servers.',e)),e):(e=await l.getDefaultJavaHome(),e?(m.default.log(h("environmentManager.getJavaPath","EnvironmentManager:getJavaPath: Found a Java environment by searching your system here: {0}. Will try using Java from there.",e)),e):void m.default.log(h("environmentManager.getJavaPath","EnvironmentManager:getJavaPath: No JAVA_HOME setting or JAVA_HOME/JDK_HOME environment variables were found. Will try finding Java in the path and default locations."))))))}static validateJava(e){return e?l.checkValidJavaBits(e):Promise.reject(u.createVSCodeDisplayableError(u.VSCodeWindowError.JAVA_NOT_FOUND))}static async getLogLevelConfiguration(){const e=await l.connection.workspace.getConfiguration(`${u.EXTENSION_NAME}.${u.VSCodeConfiguration.LOG_LEVEL}`);return void 0!==e?e:"off"}static getDefaultJavaHome(){return new Promise((e=>{(0,c.default)({allowJre:!1,registry:"x64"},((t,r)=>{t?(m.default.error(h("environmentManager.findJavaError",'EnvironmentManager:getDefaultJavaHome: Unexpected error when searching for Java: "{0}"',t.message)),e(void 0)):e(r)}))}))}static checkValidJavaBits(e){return new Promise(((t,r)=>{o.execFile(`${e}/bin/java`,["-version"],{},(e=>{e&&r(u.createVSCodeDisplayableError(u.VSCodeWindowError.INVALID_JAVA_PATH)),t()}))}))}}t.default=l,l.hasConfigurationCapability=!1,l.hasWorkspaceFolderCapability=!1,l.hasDiagnosticRelatedInformationCapability=!1},2874:function(e,t,r){"use strict";var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.completionResolveHandler=t.codeCompletionHandler=void 0;const n=i(r(57391));t.codeCompletionHandler=function(e){return n.default.completionItems},t.completionResolveHandler=function(e){const t=e,r=n.default.db2Signatures.get(t.data);let i=`(${r[0].type}) ${t.label}(${r[0].parameters.join(", ")})`;return r[0].specifier&&(i=`${i} ${r[0].specifier}(${r[0].specifierParameters.join(", ")})`),r.length>1&&(i=`${i} (overloads +${r.length-1})`),t.detail=i,t.documentation={kind:"markdown",value:r[0].description},t}},87183:function(e,t,r){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,t,r,i){void 0===i&&(i=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,i,n)}:function(e,t,r,i){void 0===i&&(i=r),e[i]=t[r]}),n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&i(t,e,r);return n(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.signatureHelpHandler=t.getParameterPositions=t.getIdentifierName=t.walkBackwardsToFunctionCall=t.isPositionInString=void 0;const o=a(r(18136)),c=s(r(30032)),d=s(r(57391)),p=s(r(3405)),u=o.loadMessageBundle();function m(e,t){return((t?e.substring(0,t):e).match(/'/g)||[]).length%2==1}function h(e,t){const r=t.position.line,i=t.position.character;let n=0,a=0;for(let t=r;t>=0;t--){const[s,o]=t===r?[e[r].substring(0,i),i]:[e[t],e[t].length-1];for(let e=o;e>=0;e--){const r=!m(s,e);switch(s[e]){case"(":if(r&&a--,a<0)return{openParenPosition:{line:t,character:e},numberOfCommas:n};break;case",":r&&n++;break;case")":r&&a++}}}return null}function l(e,t){var r,i;let n=!1;const a=t.line,s=t.character;for(let t=a;t>=0;t--){const[o,c]=t===a?[e[a].substring(0,s),s]:[e[t],e[t].length-1];for(let e=c;e>=0;e--){if(!n&&(null===(r=o[e])||void 0===r?void 0:r.match(/^[a-z0-9]+$/i))&&(n=!0),n&&("."===o[e]||","===o[e]||"("===o[e]||")"===o[e]||" "===o[e]))return o.substring(e+1,c+1).trim();if(n&&0===e)return o.substring(0,c+1).trim();if(!n&&!(null===(i=o[e])||void 0===i?void 0:i.match(/^\s*$/))&&void 0!==o[e])return null}}return null}function f(e,t){const r=[];let i=e.indexOf("(");return t.forEach((t=>{const n=e.indexOf(t,i);i+=t.length+2,r.push([n,n+t.length])})),r}t.isPositionInString=m,t.walkBackwardsToFunctionCall=h,t.getIdentifierName=l,t.getParameterPositions=f,t.signatureHelpHandler=function(e,t){var r,i,n,a;const s=c.default.getDocuments().get(e.textDocument.uri).getText().split(/\r?\n/g);if(!s)return null;let o=0,m=0;const g=[],R=h(s,e);if(!R)return null;const A=l(s,R.openParenPosition);if(!A)return e.context.isRetrigger?t:null;const b=d.default.db2Signatures.get(A.toLocaleUpperCase());return b?(b.forEach((e=>{let t=`${A.toLocaleUpperCase()}(${e.parameters.join(", ")})`;e.specifier&&(t=`${t} ${e.specifier}(${e.specifierParameters.join(", ")})`),g.push({label:t,documentation:{kind:"markdown",value:e.description},parameters:f(t,e.parameters).map((e=>({label:e})))})})),o=t&&t.signatures[0].label!==g[0].label?0:(null===(i=null===(r=e.context)||void 0===r?void 0:r.activeSignatureHelp)||void 0===i?void 0:i.activeSignature)?null===(a=null===(n=e.context)||void 0===n?void 0:n.activeSignatureHelp)||void 0===a?void 0:a.activeSignature:0,m=R.numberOfCommas,p.default.debug(u("signatureHelpHandler.signatureHelpHandler",'SignatureHelpHandler:signatureHelpHandler: Signature help triggered for identifier "{0}" returned {1} signature(s).',A,g.length)),{signatures:g,activeSignature:o,activeParameter:m}):e.context.isRetrigger?t:null}},47339:function(e,t,r){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,t,r,i){void 0===i&&(i=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,i,n)}:function(e,t,r,i){void 0===i&&(i=r),e[i]=t[r]}),n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&i(t,e,r);return n(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=a(r(18136)),c=r(6320),d=s(r(33586)),p=s(r(3405)),u=o.loadMessageBundle();t.default=async function(e,t,r,i,n){var a,s;const o=await d.default.getClient();return p.default.log(u("textdocumenthandler.deployStoredProcedureHandler","TextDocumentHandler:deployStoredProcedureHandler: Deploy stored procedure settings: {0}",JSON.stringify({db2ConnId:e,query:t,routines:r.routines,config:i,resultFilePath:n}))),6===(null===(s=null===(a=r.routines[0].options)||void 0===a?void 0:a.language)||void 0===s?void 0:s.value)?o.sendRequest(c.DB2SqlServiceInterface.DEPLOY_JAVASP,[c.EXTENSION_ID,e,t,r.routines,i,n]):o.sendRequest(c.DB2SqlServiceInterface.DEPLOY_SPSQL,[c.EXTENSION_ID,e,t,r.routines,i,n])}},79514:function(e,t,r){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,t,r,i){void 0===i&&(i=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,i,n)}:function(e,t,r,i){void 0===i&&(i=r),e[i]=t[r]}),n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&i(t,e,r);return n(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=a(r(18136)),c=r(6320),d=s(r(33586)),p=s(r(3405)),u=o.loadMessageBundle();t.default=async function(e,t,r,i,n,a){const s=n.map((e=>({name:e.variableName,dataType:e.type,inValue:e.value}))),o=await d.default.getClient();return p.default.log(u("textdocumenthandler.executeStoredProcedureHandler","TextDocumentHandler:executeStoredProcedureHandler: Execute stored procedure settings: {0}",JSON.stringify({db2ConnId:e,query:t,routines:r.routines,modifiedVariables:s,resultFilePath:a}))),o.sendRequest(c.DB2SqlServiceInterface.EXECUTE_SPSQL,[c.EXTENSION_ID,e,t,r.routines,i,s,a])}},68407:function(e,t,r){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,t,r,i){void 0===i&&(i=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,i,n)}:function(e,t,r,i){void 0===i&&(i=r),e[i]=t[r]}),n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&i(t,e,r);return n(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=a(r(18136)),c=r(6320),d=s(r(33586)),p=s(r(3405)),u=o.loadMessageBundle();t.default=async function(e,t,r,i,n,a){const s=n.map((e=>({name:e.variableName,dataType:e.type,parmType:"IN",inValue:e.value}))),o=await d.default.getClient();return p.default.log(u("textdocumenthandler.executeQueryHandler","TextDocumentHandler:executeQueryHandler: Execute query settings: {0}",JSON.stringify({connectionName:e,query:t,statements:r.statements,config:i,modifiedVariables:s,resultFilePath:a}))),o.sendRequest(c.DB2SqlServiceInterface.EXECUTE_SQL,[c.EXTENSION_ID,e,t,r.statements,i,s,a])}},68590:function(e,t,r){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,t,r,i){void 0===i&&(i=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,i,n)}:function(e,t,r,i){void 0===i&&(i=r),e[i]=t[r]}),n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&i(t,e,r);return n(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=r(47322),c=a(r(18136)),d=s(r(3120)),p=s(r(33586)),u=s(r(3405)),m=s(r(30032)),h=r(76550),l=r(6320),f=c.loadMessageBundle();t.default=async function(e){var t;u.default.log(f("textdocumenthandler.validateTextDocumentHandler","TextDocumentHandler:validateTextDocumentHandler: Validating text document {0}",e.uri));const r=await m.default.getDocumentSettings(e.uri);u.default.log(f("textdocumenthandler.validateTextDocumentHandler","TextDocumentHandler:validateTextDocumentHandler: Retrieved document settings {0}",JSON.stringify(r)));const i=await m.default.getSqlSettings(e.uri);u.default.log(f("textdocumenthandler.validateTextDocumentHandler","TextDocumentHandler:validateTextDocumentHandler: Retrieved sql settings {0}",JSON.stringify(i)));const n=await m.default.getDb2Version(e.uri);u.default.log(f("textdocumenthandler.validateTextDocumentHandler","TextDocumentHandler:validateTextDocumentHandler: Retrieved Db2 version {0}",JSON.stringify(n)));const a=e.getText(),s=[];if(a.length>0){u.default.log(f("textdocumenthandler.validateTextDocumentHandler","TextDocumentHandler:validateTextDocumentHandler: Waiting on dss client."));const c=await p.default.getClient();u.default.log(f("textdocumenthandler.validateTextDocumentHandler","TextDocumentHandler:validateTextDocumentHandler: Client confirmed, Sending parse request."));const g={collectVarRefs:!!e.uri.endsWith(".spsql"),maxErrorCount:r.maxNumberOfProblems,terminator:(null===(t=null==i?void 0:i.execute)||void 0===t?void 0:t.terminator)||e.uri.endsWith(".spsql")&&"#"||";",version:n||h.Db2zVersion.V13},R=await c.sendRequest(l.DB2SqlServiceInterface.PARSE_SQL,[l.EXTENSION_ID,a,g]);e.uri.endsWith(".spsql")&&m.default.setParseResults(e.uri,R);const A=R.errors,b=Math.min(r.maxNumberOfProblems,A.length);u.default.log(f("textdocumenthandler.validateTextDocumentHandler","TextDocumentHandler:validateTextDocumentHandler: Parse response received, building {0} diagnostic object(s).",b));for(let t=0;t<b;t++){const r=A[t],i={severity:o.DiagnosticSeverity.Error,range:{start:o.Position.create(r.position.startLine-1,r.position.startCharacter-1),end:o.Position.create(r.position.endLine-1,r.position.endCharacter)},message:r.message,source:"Db2SqlService"};d.default.hasDiagnosticRelatedInformationCapability&&(i.relatedInformation=[{location:{uri:e.uri,range:{...i.range}},message:i.message}]),s.push(i)}}return u.default.info(f("textdocumenthandler.validateTextDocumentHandler","TextDocumentHandler:validateTextDocumentHandler: Returning text document diagnostics.")),s}},33828:(e,t)=>{"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.MessageType=void 0,(r=t.MessageType||(t.MessageType={})).Error=1,r.Warning=2,r.Info=3,r.Log=4,r.Debug=5,r.Trace=6},76550:(e,t)=>{"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.Db2zVersion=void 0,(r=t.Db2zVersion||(t.Db2zVersion={})).V11="V11",r.V12="V12",r.V13="V13"},59296:function(e,t,r){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,t,r,i){void 0===i&&(i=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,i,n)}:function(e,t,r,i){void 0===i&&(i=r),e[i]=t[r]}),n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&i(t,e,r);return n(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=r(47322),c=a(r(18136)),d=s(r(3120)),p=s(r(33586)),u=s(r(30032)),m=s(r(57391)),h=s(r(3405)),l=s(r(81458)),f=r(2874),g=r(87183),R=s(r(47339)),A=s(r(68407)),b=s(r(79514)),T=r(6320);c.config({messageFormat:c.MessageFormat.bundle,bundleFormat:c.BundleFormat.standalone})();const E=(0,o.createConnection)(o.ProposedFeatures.all);E.onInitialize((e=>{d.default.initialize(E,e.initializationOptions,e.capabilities);const t={capabilities:{textDocumentSync:o.TextDocumentSyncKind.Incremental,completionProvider:{resolveProvider:!0},signatureHelpProvider:{triggerCharacters:["("]}}};return d.default.hasWorkspaceFolderCapability&&(t.capabilities.workspace={workspaceFolders:{supported:!0}}),t})),E.onInitialized((()=>{h.default.configure(E),l.default.configure(E),d.default.hasConfigurationCapability&&E.client.register(o.DidChangeConfigurationNotification.type,void 0),d.default.hasWorkspaceFolderCapability&&E.workspace.onDidChangeWorkspaceFolders((e=>{h.default.log("Workspace folder change event received.")})),m.default.loadAllDb2Signatures(),p.default.initialize(E)})),E.onDidChangeConfiguration((e=>{u.default.changeConfiguration(e)})),E.onDidChangeWatchedFiles((e=>{h.default.log("We received a file change event")})),E.onCompletion((e=>(0,f.codeCompletionHandler)(e))),E.onCompletionResolve((e=>(0,f.completionResolveHandler)(e))),E.onSignatureHelp((e=>{const t=m.default.previousSignature,r=(0,g.signatureHelpHandler)(e,t);return m.default.previousSignature=r,r})),E.onRequest(T.LanguageClientRequest.DSS_PORT,(async()=>(await p.default.getClient()).port)),E.onRequest(T.LanguageClientRequest.OPEN_CONNECTION,(async(e,t,r,i)=>(i.driverType=4,(await p.default.getClient()).sendRequest(T.DB2SqlServiceInterface.OPEN_CONNECTION,[T.EXTENSION_ID,e,t,r&&[...r],i])))),E.onRequest(T.LanguageClientRequest.CLOSE_CONNECTION,(async e=>(await p.default.getClient()).sendNotification(T.DB2SqlServiceInterface.CLOSE_CONNECTION,e))),E.onRequest(T.LanguageClientRequest.PARSE_SQL,(async(e,t)=>(await p.default.getClient()).sendRequest(T.DB2SqlServiceInterface.PARSE_SQL,[T.EXTENSION_ID,e,t]))),E.onRequest(T.LanguageClientRequest.GET_PARSE_RESULTS,(async e=>u.default.getParseResults(e))),E.onRequest(T.LanguageClientRequest.EXECUTE_SQL,(async(e,t,r,i,n,a)=>(0,A.default)(e,t,r,i,n,a))),E.onRequest(T.LanguageClientRequest.CATALOG_NAVIGATION,(async(e,t,r)=>(await p.default.getClient()).sendRequest(T.DB2SqlServiceInterface.CATALOG_NAVIGATION,[T.EXTENSION_ID,e,t,r]))),E.onRequest(T.LanguageClientRequest.DEPLOY_SPSQL,(async(e,t,r,i,n)=>(0,R.default)(e,t,r,i,n))),E.onRequest(T.LanguageClientRequest.EXECUTE_SPSQL,(async(e,t,r,i,n,a)=>(0,b.default)(e,t,r,i,n,a))),E.onNotification(T.LanguageClientNotification.CHANGE_SQL_SETTINGS,(async e=>{u.default.changeSqlSettings(e)})),E.onNotification(T.LanguageClientNotification.DB2_VERSION_CHANGED,(async e=>{u.default.changeDb2Version(e)})),u.default.listen(E),E.listen()},30032:function(e,t,r){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,t,r,i){void 0===i&&(i=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,i,n)}:function(e,t,r,i){void 0===i&&(i=r),e[i]=t[r]}),n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&i(t,e,r);return n(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=r(47322),c=r(4763),d=a(r(18136)),p=a(r(6320)),u=s(r(3120)),m=s(r(68590)),h=s(r(3405)),l=d.loadMessageBundle(),f={maxNumberOfProblems:1e3};class g{constructor(){}static getDocuments(){return g.documents}static listen(e){g.connection=e,g.documents.onDidChangeContent((e=>{g.validateTextDocument(e.document)})),g.documents.onDidClose((e=>{g.documentSettings.delete(e.document.uri),g.sqlSettings.delete(e.document.uri),g.db2Versions.delete(e.document.uri),g.parseResults.delete(e.document.uri)})),g.documents.listen(e)}static getDocumentSettings(e){if(!u.default.hasConfigurationCapability)return Promise.resolve(g.globalDocumentSettings);let t=g.documentSettings.get(e);return t||(t=g.connection.workspace.getConfiguration({scopeUri:e,section:p.EXTENSION_NAME}),g.documentSettings.set(e,t)),t}static changeConfiguration(e){return h.default.log(l("textdocumentmanager.changeConfiguration","TextDocumentManager:changeConfiguration: Configuration change detected.")),u.default.hasConfigurationCapability?(g.documentSettings.clear(),h.default.info(l("textdocumentmanager.changeConfiguration","TextDocumentManager:changeConfiguration: Document settings cache cleared."))):g.globalDocumentSettings=e.settings.db2forzosdeveloperextension||f,g.validateAll(),Promise.resolve()}static getSqlSettings(e){h.default.trace(l("textdocumentmanager.getSqlSettings","TextDocumentManager:getSqlSettings: Received resource {0}",e));let t=g.sqlSettings.get(e);if(!t){const r=e.lastIndexOf("/")+1,i=e.substring(0,r),n=e.substring(r);h.default.trace(l("textdocumentmanager.getSqlSettings","TextDocumentManager:getSqlSettings: Retrieving sql settings from {0} for {1}",i,n)),t=g.connection.sendRequest(p.LanguageClientInterface.SQL_SETTINGS,[i,n]),g.sqlSettings.set(e,t)}return t}static changeSqlSettings(e){h.default.log(l("textdocumentmanager.changeSqlSettings","TextDocumentManager:changeSqlSettings: Sql settings change detected for {0}.",e)),g.sqlSettings.delete(e);const t=g.documents.get(e);t?(h.default.log(l("textdocumentmanager.changeSqlSettings","TextDocumentManager:changeSqlSettings: Retrieved document {0}.",t.uri)),g.validateTextDocument(t)):h.default.log(l("textdocumentmanager.changeSqlSettings","TextDocumentManager:changeSqlSettings: Doc not found for resource {0}.",e))}static getDb2Version(e){h.default.trace(l("textdocumentmanager.getDb2Version","TextDocumentManager:getDb2Version: Received resource {0}",e));let t=g.db2Versions.get(e);return t||(h.default.trace(l("textdocumentmanager.getDb2Version","TextDocumentManager:getDb2Version: Retrieving Db2 version from {0}",e)),t=g.connection.sendRequest(p.LanguageClientInterface.DB2_VERSION,[e]),g.db2Versions.set(e,t)),t}static changeDb2Version(e){const t=g.documents.get(e);t&&(h.default.log(l("textdocumentmanager.changeDb2Version","TextDocumentManager:changeDb2Version: Db2 version change detected for {0}.",e)),g.db2Versions.delete(e),h.default.log(l("textdocumentmanager.changeDb2Version","TextDocumentManager:changeDb2Version: Retrieved document {0}.",t.uri)),g.validateTextDocument(t))}static setParseResults(e,t){h.default.trace(l("textdocumentmanager.setParseResults","TextDocumentManager:setParseResults: Saving parse results for {0}",e)),g.parseResults.set(e,t)}static getParseResults(e){h.default.trace(l("textdocumentmanager.getParseResults","TextDocumentManager:getParseResults: Received resource {0}",e));let t=g.parseResults.get(e);if(!t){h.default.trace(l("textdocumentmanager.getParseResults","TextDocumentManager:getParseResults: Retrieving parse results from {0}",e));const r=g.documents.get(e);g.validateTextDocument(r),t=g.parseResults.get(e)}return t}static validateAll(){h.default.log(l("textdocumentmanager.validateAll","TextDocumentManager:validateAll: Revalidating all open text documents.")),g.documents.all().forEach(g.validateTextDocument)}static validateTextDocument(e){(0,m.default)(e).then((t=>{g.connection.sendDiagnostics({uri:e.uri,diagnostics:t})})).catch((e=>{}))}}t.default=g,g.globalDocumentSettings=f,g.documentSettings=new Map,g.sqlSettings=new Map,g.db2Versions=new Map,g.parseResults=new Map,g.documents=new o.TextDocuments(c.TextDocument)},45625:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});class r{constructor(e){this.prev=this,this.next=this,this.data=e}}class i{constructor(e,t){this.dummy=e,this.current=e,this.props=t}hasNext(){return this.current.next!==this.dummy}next(){return this.current.next===this.dummy?null:(this.current=this.current.next,this.current.data)}remove(){this.current!==this.dummy&&(this.current.prev.next=this.current.next,this.current.next.prev=this.current.prev,this.current=this.current.prev,this.props.size--)}add(e){const t=new r(e);t.next=this.current.next,t.prev=this.current,this.current.next=t,this.current.next.prev=t,this.props.size++}}class n{constructor(){this.dummy=new r,this.length=0}*[Symbol.iterator](){let e=this.dummy.next;for(;e!==this.dummy;)yield e.data,e=e.next}size(){return this.length}push(e){const t=new r(e);t.next=this.dummy,t.prev=this.dummy.prev,this.dummy.prev.next=t,this.dummy.prev=t,this.length++}shift(){const e=this.dummy.next;if(e!==this.dummy)return this.dummy.next=e.next,e.next.prev=this.dummy,this.length--,e.data}iterator(){const e={};return Object.defineProperty(e,"size",{get:()=>this.length,set:e=>{this.length=e}}),new i(this.dummy,e)}}t.default=n},3405:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(33828),n=r(6320);class a{constructor(){}static configure(e){a.connection=e}static error(e){a.send(i.MessageType.Error,e)}static warn(e){a.send(i.MessageType.Warning,e)}static info(e){a.send(i.MessageType.Info,e)}static debug(e){a.send(i.MessageType.Debug,e)}static trace(e){a.send(i.MessageType.Trace,e)}static log(e){a.send(i.MessageType.Log,e)}static send(e,t){if(void 0!==a.connection){switch(e){case i.MessageType.Error:a.connection.console.error(t);break;case i.MessageType.Warning:a.connection.console.warn(t);break;case i.MessageType.Info:a.connection.console.info(t);break;default:a.connection.console.log(t)}a.connection.sendNotification(n.LanguageClientInterface.LOG,[e,t])}}}t.default=a},7713:function(e,t,r){"use strict";var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=i(r(45625));t.default=class{constructor(e={}){this.manageOptions={validate:e.validate,maxRequests:e.maxRequests},this.queue=new n.default,this.queueTimer=void 0,this.disposed=!1}update(e,t=!0){if(this.disposed)throw new Error("Object is disposed.");this.managedObject=e,t&&this.triggerQueue()}get(){if(this.disposed)throw new Error("Object is disposed.");if(this.valid())return Promise.resolve(this.managedObject);let e;const t=new Promise(((t,r)=>{e={resolve:t,reject:r}}));for(;void 0!==this.manageOptions.maxRequests&&this.queue.size()>=this.manageOptions.maxRequests;){const[e,t]=this.queue.shift();t(new Error("Request expired due to max requests exceeded."))}return this.queue.push([t=>{e.resolve(t)},t=>{e.reject(t)}]),t}forceGet(){return this.managedObject}valid(){return void 0!==this.managedObject&&(void 0===this.manageOptions.validate||this.manageOptions.validate(this.managedObject))}dispose(){for(this.disposed=!0;this.queue.size()>0;){const[e,t]=this.queue.shift();t(new Error("Request expired due to object is disposed."))}return this.managedObject}triggerQueue(){void 0===this.queueTimer&&0!==this.queue.size()&&this.valid()&&(this.queueTimer=setImmediate((()=>{this.queueTimer=void 0,this.processQueue()})))}processQueue(){if(0===this.queue.size()||!this.valid())return;const[e]=this.queue.shift();e(this.managedObject),this.triggerQueue()}}},88804:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parsePorts=t.isNumber=t.isEmpty=t.MAX_ALLOWABLE_PORT=t.MIN_ALLOWABLE_PORT=void 0,t.MIN_ALLOWABLE_PORT=1024,t.MAX_ALLOWABLE_PORT=65535,t.isEmpty=e=>null==e||"boolean"==typeof e||"string"==typeof e&&0===e.trim().length,t.isNumber=e=>!(0,t.isEmpty)(e)&&!Number.isNaN(Number(e)),t.parsePorts=function(e){const r=new Set;for(const i of e.split(",")){const e=i.trim();if((0,t.isNumber)(e)){const i=parseInt(e,10);i>=t.MIN_ALLOWABLE_PORT&&i<=t.MAX_ALLOWABLE_PORT&&r.add(i)}else{const e=i.split("-");let n;for(const i of e){const e=i.trim();if((0,t.isNumber)(e)){const i=parseInt(e,10);if(void 0!==n)if(n<=i){const e=n<t.MIN_ALLOWABLE_PORT?t.MIN_ALLOWABLE_PORT:n,a=i>t.MAX_ALLOWABLE_PORT?t.MAX_ALLOWABLE_PORT:i;for(let t=e;t<=a;t++)r.add(t)}else{const e=i<t.MIN_ALLOWABLE_PORT?t.MIN_ALLOWABLE_PORT:i;for(let i=n>t.MAX_ALLOWABLE_PORT?t.MAX_ALLOWABLE_PORT:n;i>=e;i--)r.add(i)}n=i}else if(void 0===n||e.length>0)break}}}return Array.from(r)}},58398:function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))((function(n,a){function s(e){try{c(i.next(e))}catch(e){a(e)}}function o(e){try{c(i.throw(e))}catch(e){a(e)}}function c(e){e.done?n(e.value):new r((function(t){t(e.value)})).then(s,o)}c((i=i.apply(e,t||[])).next())}))},n=this&&this.__generator||function(e,t){var r,i,n,a,s={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(a){return function(o){return function(a){if(r)throw new TypeError("Generator is already executing.");for(;s;)try{if(r=1,i&&(n=2&a[0]?i.return:a[0]?i.throw||((n=i.return)&&n.call(i),0):i.next)&&!(n=n.call(i,a[1])).done)return n;switch(i=0,n&&(a=[2&a[0],n.value]),a[0]){case 0:case 1:n=a;break;case 4:return s.label++,{value:a[1],done:!1};case 5:s.label++,i=a[1],a=[0];continue;case 7:a=s.ops.pop(),s.trys.pop();continue;default:if(!((n=(n=s.trys).length>0&&n[n.length-1])||6!==a[0]&&2!==a[0])){s=0;continue}if(3===a[0]&&(!n||a[1]>n[0]&&a[1]<n[3])){s.label=a[1];break}if(6===a[0]&&s.label<n[1]){s.label=n[1],n=a;break}if(n&&s.label<n[2]){s.label=n[2],s.ops.push(a);break}n[2]&&s.ops.pop(),s.trys.pop();continue}a=t.call(e,s)}catch(e){a=[6,e],i=0}finally{r=n=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,o])}}},a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}},o=a(r(57147)),c=a(r(71017)),d=a(r(32081)),p=s(r(97974)),u=s(r(79667)),m=r(32081),h=0===process.platform.indexOf("win"),l=["\\SOFTWARE\\JavaSoft\\JDK","\\SOFTWARE\\JavaSoft\\Java Development Kit"],f=["\\SOFTWARE\\JavaSoft\\Java Runtime Environment"];function g(e){return i(this,void 0,void 0,(function(){var t,r,i,a;return n(this,(function(n){switch(n.label){case 0:return t=!(!e||!e.allowJre),r=(t?"java":"javac")+(h?".exe":""),i=e&&e.registry?[e.registry]:["x64","x86"],process.env.JAVA_HOME&&(s=process.env.JAVA_HOME,d=r,o.existsSync(""+s)&&o.statSync(s).isDirectory()&&o.existsSync(c.resolve(s,"bin",d)))?[2,process.env.JAVA_HOME]:h?[4,A(t?l.concat(f):l,i)]:[3,2];case 1:if(a=n.sent())return[2,a];n.label=2;case 2:return[4,R(r)];case 3:return[2,n.sent()]}var s,d}))}))}function R(e){return new Promise((function(t){p.default(e,(function(r,i){if(r||!i)return t(null);if(/\.jenv\/shims/.test(i))try{i=m.execSync("jenv which "+e).toString().trim()}catch(e){console.error(e)}i=T(i),i=c.dirname(i);var n=c.resolve(i,"java_home");if(o.existsSync(n))try{var a=""+d.execSync(n,{cwd:i}).toString().replace(/\n$/,"");return t(a)}catch(e){return t(null)}t(c.dirname(i))}))}))}function A(e,t){return i(this,void 0,void 0,(function(){var r,i,a,s,o,c,d,p,u,m,h,l,f,g;return n(this,(function(n){switch(n.label){case 0:if(!e.length)return[2,null];for(r=[],i=0,a=t;i<a.length;i++)for(s=a[i],o=0,c=e;o<c.length;o++)d=c[o],r.push(b(d,s));return[4,Promise.all(r)];case 1:if(p=n.sent(),!(u=Array.prototype.concat.apply([],p)).length)return[2,null];m=u.sort((function(e,t){var r=parseFloat(e.key);return parseFloat(t.key)-r})),h=0,l=m,n.label=2;case 2:return h<l.length?(f=l[h],[4,(R=f,new Promise((function(e){R.get("JavaHome",(function(t,r){if(t||!r)return e(null);e(r.value)}))})))]):[3,5];case 3:if(g=n.sent())return[2,g];n.label=4;case 4:return h++,[3,2];case 5:return[2,null]}var R}))}))}function b(e,t){return new Promise((function(r){new u.default({hive:u.default.HKLM,key:e,arch:t}).keys((function(e,t){if(e)return r([]);r(t)}))}))}function T(e){return o.lstatSync(e).isSymbolicLink()?T(o.readlinkSync(e)):e}e.exports=function(e,t){return i(this,void 0,void 0,(function(){var r,i,a,s,o;return n(this,(function(n){switch(n.label){case 0:t?(i=e,r=t):(r=e,i=void 0),a=void 0,s=null,n.label=1;case 1:return n.trys.push([1,3,,4]),[4,g(i)];case 2:return a=n.sent(),[3,4];case 3:return o=n.sent(),s=o,[3,4];case 4:return r(s,a),[2]}}))}))}},86580:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(90767),n=r(27223);var a;!function(e){e.None=Object.freeze({isCancellationRequested:!1,onCancellationRequested:i.Event.None}),e.Cancelled=Object.freeze({isCancellationRequested:!0,onCancellationRequested:i.Event.None}),e.is=function(t){let r=t;return r&&(r===e.None||r===e.Cancelled||n.boolean(r.isCancellationRequested)&&!!r.onCancellationRequested)}}(a=t.CancellationToken||(t.CancellationToken={}));const s=Object.freeze((function(e,t){let r=setTimeout(e.bind(t),0);return{dispose(){clearTimeout(r)}}}));class o{constructor(){this._isCancelled=!1}cancel(){this._isCancelled||(this._isCancelled=!0,this._emitter&&(this._emitter.fire(void 0),this.dispose()))}get isCancellationRequested(){return this._isCancelled}get onCancellationRequested(){return this._isCancelled?s:(this._emitter||(this._emitter=new i.Emitter),this._emitter.event)}dispose(){this._emitter&&(this._emitter.dispose(),this._emitter=void 0)}}t.CancellationTokenSource=class{get token(){return this._token||(this._token=new o),this._token}cancel(){this._token?this._token.cancel():this._token=a.Cancelled}dispose(){this._token?this._token instanceof o&&this._token.dispose():this._token=a.None}}},90767:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),(t.Disposable||(t.Disposable={})).create=function(e){return{dispose:e}},function(e){const t={dispose(){}};e.None=function(){return t}}(t.Event||(t.Event={}));class r{add(e,t=null,r){this._callbacks||(this._callbacks=[],this._contexts=[]),this._callbacks.push(e),this._contexts.push(t),Array.isArray(r)&&r.push({dispose:()=>this.remove(e,t)})}remove(e,t=null){if(this._callbacks){for(var r=!1,i=0,n=this._callbacks.length;i<n;i++)if(this._callbacks[i]===e){if(this._contexts[i]===t)return this._callbacks.splice(i,1),void this._contexts.splice(i,1);r=!0}if(r)throw new Error("When adding a listener with a context, you should remove it with the same context")}}invoke(...e){if(!this._callbacks)return[];for(var t=[],r=this._callbacks.slice(0),i=this._contexts.slice(0),n=0,a=r.length;n<a;n++)try{t.push(r[n].apply(i[n],e))}catch(e){console.error(e)}return t}isEmpty(){return!this._callbacks||0===this._callbacks.length}dispose(){this._callbacks=void 0,this._contexts=void 0}}class i{constructor(e){this._options=e}get event(){return this._event||(this._event=(e,t,n)=>{let a;return this._callbacks||(this._callbacks=new r),this._options&&this._options.onFirstListenerAdd&&this._callbacks.isEmpty()&&this._options.onFirstListenerAdd(this),this._callbacks.add(e,t),a={dispose:()=>{this._callbacks.remove(e,t),a.dispose=i._noop,this._options&&this._options.onLastListenerRemove&&this._callbacks.isEmpty()&&this._options.onLastListenerRemove(this)}},Array.isArray(n)&&n.push(a),a}),this._event}fire(e){this._callbacks&&this._callbacks.invoke.call(this._callbacks,e)}dispose(){this._callbacks&&(this._callbacks.dispose(),this._callbacks=void 0)}}t.Emitter=i,i._noop=function(){}},27223:(e,t)=>{"use strict";function r(e){return"string"==typeof e||e instanceof String}function i(e){return Array.isArray(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.boolean=function(e){return!0===e||!1===e},t.string=r,t.number=function(e){return"number"==typeof e||e instanceof Number},t.error=function(e){return e instanceof Error},t.func=function(e){return"function"==typeof e},t.array=i,t.stringArray=function(e){return i(e)&&e.every((e=>r(e)))}},42563:(e,t)=>{"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),function(e){e.None=0,e.First=1,e.Last=2}(r=t.Touch||(t.Touch={})),t.LinkedMap=class{constructor(){this._map=new Map,this._head=void 0,this._tail=void 0,this._size=0}clear(){this._map.clear(),this._head=void 0,this._tail=void 0,this._size=0}isEmpty(){return!this._head&&!this._tail}get size(){return this._size}has(e){return this._map.has(e)}get(e){const t=this._map.get(e);if(t)return t.value}set(e,t,i=r.None){let n=this._map.get(e);if(n)n.value=t,i!==r.None&&this.touch(n,i);else{switch(n={key:e,value:t,next:void 0,previous:void 0},i){case r.None:this.addItemLast(n);break;case r.First:this.addItemFirst(n);break;case r.Last:default:this.addItemLast(n)}this._map.set(e,n),this._size++}}delete(e){const t=this._map.get(e);return!!t&&(this._map.delete(e),this.removeItem(t),this._size--,!0)}shift(){if(!this._head&&!this._tail)return;if(!this._head||!this._tail)throw new Error("Invalid list");const e=this._head;return this._map.delete(e.key),this.removeItem(e),this._size--,e.value}forEach(e,t){let r=this._head;for(;r;)t?e.bind(t)(r.value,r.key,this):e(r.value,r.key,this),r=r.next}forEachReverse(e,t){let r=this._tail;for(;r;)t?e.bind(t)(r.value,r.key,this):e(r.value,r.key,this),r=r.previous}values(){let e=[],t=this._head;for(;t;)e.push(t.value),t=t.next;return e}keys(){let e=[],t=this._head;for(;t;)e.push(t.key),t=t.next;return e}addItemFirst(e){if(this._head||this._tail){if(!this._head)throw new Error("Invalid list");e.next=this._head,this._head.previous=e}else this._tail=e;this._head=e}addItemLast(e){if(this._head||this._tail){if(!this._tail)throw new Error("Invalid list");e.previous=this._tail,this._tail.next=e}else this._head=e;this._tail=e}removeItem(e){if(e===this._head&&e===this._tail)this._head=void 0,this._tail=void 0;else if(e===this._head)this._head=e.next;else if(e===this._tail)this._tail=e.previous;else{const t=e.next,r=e.previous;if(!t||!r)throw new Error("Invalid list");t.previous=r,r.next=t}}touch(e,t){if(!this._head||!this._tail)throw new Error("Invalid list");if(t===r.First||t===r.Last)if(t===r.First){if(e===this._head)return;const t=e.next,r=e.previous;e===this._tail?(r.next=void 0,this._tail=r):(t.previous=r,r.next=t),e.previous=void 0,e.next=this._head,this._head.previous=e,this._head=e}else if(t===r.Last){if(e===this._tail)return;const t=e.next,r=e.previous;e===this._head?(t.previous=void 0,this._head=t):(t.previous=r,r.next=t),e.next=void 0,e.previous=this._tail,this._tail.next=e,this._tail=e}}}},52636:(e,t,r)=>{"use strict";function i(e){for(var r in e)t.hasOwnProperty(r)||(t[r]=e[r])}Object.defineProperty(t,"__esModule",{value:!0});const n=r(27223),a=r(96793);t.RequestType=a.RequestType,t.RequestType0=a.RequestType0,t.RequestType1=a.RequestType1,t.RequestType2=a.RequestType2,t.RequestType3=a.RequestType3,t.RequestType4=a.RequestType4,t.RequestType5=a.RequestType5,t.RequestType6=a.RequestType6,t.RequestType7=a.RequestType7,t.RequestType8=a.RequestType8,t.RequestType9=a.RequestType9,t.ResponseError=a.ResponseError,t.ErrorCodes=a.ErrorCodes,t.NotificationType=a.NotificationType,t.NotificationType0=a.NotificationType0,t.NotificationType1=a.NotificationType1,t.NotificationType2=a.NotificationType2,t.NotificationType3=a.NotificationType3,t.NotificationType4=a.NotificationType4,t.NotificationType5=a.NotificationType5,t.NotificationType6=a.NotificationType6,t.NotificationType7=a.NotificationType7,t.NotificationType8=a.NotificationType8,t.NotificationType9=a.NotificationType9;const s=r(86928);t.MessageReader=s.MessageReader,t.StreamMessageReader=s.StreamMessageReader,t.IPCMessageReader=s.IPCMessageReader,t.SocketMessageReader=s.SocketMessageReader;const o=r(65599);t.MessageWriter=o.MessageWriter,t.StreamMessageWriter=o.StreamMessageWriter,t.IPCMessageWriter=o.IPCMessageWriter,t.SocketMessageWriter=o.SocketMessageWriter;const c=r(90767);t.Disposable=c.Disposable,t.Event=c.Event,t.Emitter=c.Emitter;const d=r(86580);t.CancellationTokenSource=d.CancellationTokenSource,t.CancellationToken=d.CancellationToken;const p=r(42563);var u,m,h,l,f,g,R,A;i(r(72471)),i(r(41071)),function(e){e.type=new a.NotificationType("$/cancelRequest")}(u||(u={})),function(e){e.type=new a.NotificationType("$/progress")}(m||(m={})),t.ProgressType=class{constructor(){}},t.NullLogger=Object.freeze({error:()=>{},warn:()=>{},info:()=>{},log:()=>{}}),function(e){e[e.Off=0]="Off",e[e.Messages=1]="Messages",e[e.Verbose=2]="Verbose"}(h=t.Trace||(t.Trace={})),function(e){e.fromString=function(t){if(!n.string(t))return e.Off;switch(t=t.toLowerCase()){case"off":default:return e.Off;case"messages":return e.Messages;case"verbose":return e.Verbose}},e.toString=function(t){switch(t){case e.Off:return"off";case e.Messages:return"messages";case e.Verbose:return"verbose";default:return"off"}}}(h=t.Trace||(t.Trace={})),function(e){e.Text="text",e.JSON="json"}(t.TraceFormat||(t.TraceFormat={})),function(e){e.fromString=function(t){return"json"===(t=t.toLowerCase())?e.JSON:e.Text}}(l=t.TraceFormat||(t.TraceFormat={})),function(e){e.type=new a.NotificationType("$/setTraceNotification")}(f=t.SetTraceNotification||(t.SetTraceNotification={})),function(e){e.type=new a.NotificationType("$/logTraceNotification")}(g=t.LogTraceNotification||(t.LogTraceNotification={})),function(e){e[e.Closed=1]="Closed",e[e.Disposed=2]="Disposed",e[e.AlreadyListening=3]="AlreadyListening"}(R=t.ConnectionErrors||(t.ConnectionErrors={}));class b extends Error{constructor(e,t){super(t),this.code=e,Object.setPrototypeOf(this,b.prototype)}}function T(e,t,r,i){let s=0,o=0,T=0;const E="2.0";let w,x,C,S,v=Object.create(null),I=Object.create(null),y=new Map,N=new p.LinkedMap,_=Object.create(null),L=Object.create(null),D=h.Off,O=l.Text,M=A.New,P=new c.Emitter,U=new c.Emitter,H=new c.Emitter,B=new c.Emitter,k=new c.Emitter;function q(e){return"req-"+e.toString()}function V(e){}function G(){return M===A.Listening}function z(){return M===A.Closed}function F(){return M===A.Disposed}function X(){M!==A.New&&M!==A.Listening||(M=A.Closed,U.fire(void 0))}function Y(){C||0===N.size||(C=setImmediate((()=>{C=void 0,function(){if(0===N.size)return;let e=N.shift();try{a.isRequestMessage(e)?function(e){if(F())return;function r(r,i,n){let s={jsonrpc:E,id:e.id};r instanceof a.ResponseError?s.error=r.toJson():s.result=void 0===r?null:r,W(s,i,n),t.write(s)}function i(r,i,n){let a={jsonrpc:E,id:e.id,error:r.toJson()};W(a,i,n),t.write(a)}!function(e){if(D!==h.Off&&S)if(O===l.Text){let t;D===h.Verbose&&e.params&&(t=`Params: ${JSON.stringify(e.params,null,4)}\n\n`),S.log(`Received request '${e.method} - (${e.id})'.`,t)}else J("receive-request",e)}(e);let s,o,c=v[e.method];c&&(s=c.type,o=c.handler);let p=Date.now();if(o||w){let c=new d.CancellationTokenSource,u=String(e.id);L[u]=c;try{let d;d=void 0===e.params||void 0!==s&&0===s.numberOfParams?o?o(c.token):w(e.method,c.token):n.array(e.params)&&(void 0===s||s.numberOfParams>1)?o?o(...e.params,c.token):w(e.method,...e.params,c.token):o?o(e.params,c.token):w(e.method,e.params,c.token);let m=d;d?m.then?m.then((t=>{delete L[u],r(t,e.method,p)}),(t=>{delete L[u],t instanceof a.ResponseError?i(t,e.method,p):t&&n.string(t.message)?i(new a.ResponseError(a.ErrorCodes.InternalError,`Request ${e.method} failed with message: ${t.message}`),e.method,p):i(new a.ResponseError(a.ErrorCodes.InternalError,`Request ${e.method} failed unexpectedly without providing any details.`),e.method,p)})):(delete L[u],r(d,e.method,p)):(delete L[u],function(r,i,n){void 0===r&&(r=null);let a={jsonrpc:E,id:e.id,result:r};W(a,i,n),t.write(a)}(d,e.method,p))}catch(t){delete L[u],t instanceof a.ResponseError?r(t,e.method,p):t&&n.string(t.message)?i(new a.ResponseError(a.ErrorCodes.InternalError,`Request ${e.method} failed with message: ${t.message}`),e.method,p):i(new a.ResponseError(a.ErrorCodes.InternalError,`Request ${e.method} failed unexpectedly without providing any details.`),e.method,p)}}else i(new a.ResponseError(a.ErrorCodes.MethodNotFound,`Unhandled method ${e.method}`),e.method,p)}(e):a.isNotificationMessage(e)?function(e){if(F())return;let t,i;if(e.method===u.type.method)i=e=>{let t=e.id,r=L[String(t)];r&&r.cancel()};else{let r=I[e.method];r&&(i=r.handler,t=r.type)}if(i||x)try{!function(e){if(D!==h.Off&&S&&e.method!==g.type.method)if(O===l.Text){let t;D===h.Verbose&&(t=e.params?`Params: ${JSON.stringify(e.params,null,4)}\n\n`:"No parameters provided.\n\n"),S.log(`Received notification '${e.method}'.`,t)}else J("receive-notification",e)}(e),void 0===e.params||void 0!==t&&0===t.numberOfParams?i?i():x(e.method):n.array(e.params)&&(void 0===t||t.numberOfParams>1)?i?i(...e.params):x(e.method,...e.params):i?i(e.params):x(e.method,e.params)}catch(t){t.message?r.error(`Notification handler '${e.method}' failed with message: ${t.message}`):r.error(`Notification handler '${e.method}' failed unexpectedly.`)}else H.fire(e)}(e):a.isResponseMessage(e)?function(e){if(!F())if(null===e.id)e.error?r.error(`Received response message without id: Error is: \n${JSON.stringify(e.error,void 0,4)}`):r.error("Received response message without id. No further error information provided.");else{let t=String(e.id),i=_[t];if(function(e,t){if(D!==h.Off&&S)if(O===l.Text){let r;if(D===h.Verbose&&(e.error&&e.error.data?r=`Error data: ${JSON.stringify(e.error.data,null,4)}\n\n`:e.result?r=`Result: ${JSON.stringify(e.result,null,4)}\n\n`:void 0===e.error&&(r="No result returned.\n\n")),t){let i=e.error?` Request failed: ${e.error.message} (${e.error.code}).`:"";S.log(`Received response '${t.method} - (${e.id})' in ${Date.now()-t.timerStart}ms.${i}`,r)}else S.log(`Received response ${e.id} without active response promise.`,r)}else J("receive-response",e)}(e,i),i){delete _[t];try{if(e.error){let t=e.error;i.reject(new a.ResponseError(t.code,t.message,t.data))}else{if(void 0===e.result)throw new Error("Should never happen.");i.resolve(e.result)}}catch(e){e.message?r.error(`Response handler '${i.method}' failed with message: ${e.message}`):r.error(`Response handler '${i.method}' failed unexpectedly.`)}}}}(e):function(e){if(!e)return void r.error("Received empty message.");r.error(`Received message which is neither a response nor a notification message:\n${JSON.stringify(e,null,4)}`);let t=e;if(n.string(t.id)||n.number(t.id)){let e=String(t.id),r=_[e];r&&r.reject(new Error("The received response has neither a result nor an error property."))}}(e)}finally{Y()}}()})))}e.onClose(X),e.onError((function(e){P.fire([e,void 0,void 0])})),t.onClose(X),t.onError((function(e){P.fire(e)}));let j=e=>{try{if(a.isNotificationMessage(e)&&e.method===u.type.method){let r=q(e.params.id),n=N.get(r);if(a.isRequestMessage(n)){let a=i&&i.cancelUndispatched?i.cancelUndispatched(n,V):void 0;if(a&&(void 0!==a.error||void 0!==a.result))return N.delete(r),a.id=n.id,W(a,e.method,Date.now()),void t.write(a)}}!function(e,t){var r;a.isRequestMessage(t)?e.set(q(t.id),t):a.isResponseMessage(t)?e.set(null===(r=t.id)?"res-unknown-"+(++T).toString():"res-"+r.toString(),t):e.set("not-"+(++o).toString(),t)}(N,e)}finally{Y()}};function W(e,t,r){if(D!==h.Off&&S)if(O===l.Text){let i;D===h.Verbose&&(e.error&&e.error.data?i=`Error data: ${JSON.stringify(e.error.data,null,4)}\n\n`:e.result?i=`Result: ${JSON.stringify(e.result,null,4)}\n\n`:void 0===e.error&&(i="No result returned.\n\n")),S.log(`Sending response '${t} - (${e.id})'. Processing request took ${Date.now()-r}ms`,i)}else J("send-response",e)}function J(e,t){if(!S||D===h.Off)return;const r={isLSPMessage:!0,type:e,message:t,timestamp:Date.now()};S.log(r)}function Q(){if(z())throw new b(R.Closed,"Connection is closed.");if(F())throw new b(R.Disposed,"Connection is disposed.")}function K(e){return void 0===e?null:e}function $(e,t){let r,i=e.numberOfParams;switch(i){case 0:r=null;break;case 1:r=K(t[0]);break;default:r=[];for(let e=0;e<t.length&&e<i;e++)r.push(K(t[e]));if(t.length<i)for(let e=t.length;e<i;e++)r.push(null)}return r}let Z={sendNotification:(e,...r)=>{let i,a;if(Q(),n.string(e))switch(i=e,r.length){case 0:a=null;break;case 1:a=r[0];break;default:a=r}else i=e.method,a=$(e,r);let s={jsonrpc:E,method:i,params:a};!function(e){if(D!==h.Off&&S)if(O===l.Text){let t;D===h.Verbose&&(t=e.params?`Params: ${JSON.stringify(e.params,null,4)}\n\n`:"No parameters provided.\n\n"),S.log(`Sending notification '${e.method}'.`,t)}else J("send-notification",e)}(s),t.write(s)},onNotification:(e,t)=>{Q(),n.func(e)?x=e:t&&(n.string(e)?I[e]={type:void 0,handler:t}:I[e.method]={type:e,handler:t})},onProgress:(e,t,r)=>{if(y.has(t))throw new Error(`Progress handler for token ${t} already registered`);return y.set(t,r),{dispose:()=>{y.delete(t)}}},sendProgress:(e,t,r)=>{Z.sendNotification(m.type,{token:t,value:r})},onUnhandledProgress:B.event,sendRequest:(e,...r)=>{let i,o,c;if(Q(),function(){if(!G())throw new Error("Call listen() first.")}(),n.string(e))switch(i=e,r.length){case 0:o=null;break;case 1:d.CancellationToken.is(r[0])?(o=null,c=r[0]):o=K(r[0]);break;default:const e=r.length-1;d.CancellationToken.is(r[e])?(c=r[e],o=2===r.length?K(r[0]):r.slice(0,e).map((e=>K(e)))):o=r.map((e=>K(e)))}else{i=e.method,o=$(e,r);let t=e.numberOfParams;c=d.CancellationToken.is(r[t])?r[t]:void 0}let p=s++,m=new Promise(((e,r)=>{let n={jsonrpc:E,id:p,method:i,params:o},s={method:i,timerStart:Date.now(),resolve:e,reject:r};!function(e){if(D!==h.Off&&S)if(O===l.Text){let t;D===h.Verbose&&e.params&&(t=`Params: ${JSON.stringify(e.params,null,4)}\n\n`),S.log(`Sending request '${e.method} - (${e.id})'.`,t)}else J("send-request",e)}(n);try{t.write(n)}catch(e){s.reject(new a.ResponseError(a.ErrorCodes.MessageWriteError,e.message?e.message:"Unknown reason")),s=null}s&&(_[String(p)]=s)}));return c&&c.onCancellationRequested((()=>{Z.sendNotification(u.type,{id:p})})),m},onRequest:(e,t)=>{Q(),n.func(e)?w=e:t&&(n.string(e)?v[e]={type:void 0,handler:t}:v[e.method]={type:e,handler:t})},trace:(e,t,r)=>{let i=!1,a=l.Text;void 0!==r&&(n.boolean(r)?i=r:(i=r.sendNotification||!1,a=r.traceFormat||l.Text)),D=e,O=a,S=D===h.Off?void 0:t,!i||z()||F()||Z.sendNotification(f.type,{value:h.toString(e)})},onError:P.event,onClose:U.event,onUnhandledNotification:H.event,onDispose:k.event,dispose:()=>{if(F())return;M=A.Disposed,k.fire(void 0);let r=new Error("Connection got disposed.");Object.keys(_).forEach((e=>{_[e].reject(r)})),_=Object.create(null),L=Object.create(null),N=new p.LinkedMap,n.func(t.dispose)&&t.dispose(),n.func(e.dispose)&&e.dispose()},listen:()=>{Q(),function(){if(G())throw new b(R.AlreadyListening,"Connection is already listening")}(),M=A.Listening,e.listen(j)},inspect:()=>{console.log("inspect")}};return Z.onNotification(g.type,(e=>{D!==h.Off&&S&&S.log(e.message,D===h.Verbose?e.verbose:void 0)})),Z.onNotification(m.type,(e=>{const t=y.get(e.token);t?t(e.value):B.fire(e)})),Z}t.ConnectionError=b,(t.ConnectionStrategy||(t.ConnectionStrategy={})).is=function(e){let t=e;return t&&n.func(t.cancelUndispatched)},function(e){e[e.New=1]="New",e[e.Listening=2]="Listening",e[e.Closed=3]="Closed",e[e.Disposed=4]="Disposed"}(A||(A={})),t.createMessageConnection=function(e,r,i,n){i||(i=t.NullLogger);let a=void 0!==(c=e).listen&&void 0===c.read?e:new s.StreamMessageReader(e);var c;let d=function(e){return void 0!==e.write&&void 0===e.end}(r)?r:new o.StreamMessageWriter(r);return T(a,d,i,n)}},86928:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(90767),n=r(27223);let a=8192,s=Buffer.from("\r","ascii")[0],o=Buffer.from("\n","ascii")[0];class c{constructor(e="utf8"){this.encoding=e,this.index=0,this.buffer=Buffer.allocUnsafe(a)}append(e){var t=e;if("string"==typeof e){var r=e,i=Buffer.byteLength(r,this.encoding);(t=Buffer.allocUnsafe(i)).write(r,0,i,this.encoding)}if(this.buffer.length-this.index>=t.length)t.copy(this.buffer,this.index,0,t.length);else{var n=(Math.ceil((this.index+t.length)/a)+1)*a;0===this.index?(this.buffer=Buffer.allocUnsafe(n),t.copy(this.buffer,0,0,t.length)):this.buffer=Buffer.concat([this.buffer.slice(0,this.index),t],n)}this.index+=t.length}tryReadHeaders(){let e,t=0;for(;t+3<this.index&&(this.buffer[t]!==s||this.buffer[t+1]!==o||this.buffer[t+2]!==s||this.buffer[t+3]!==o);)t++;if(t+3>=this.index)return e;e=Object.create(null),this.buffer.toString("ascii",0,t).split("\r\n").forEach((t=>{let r=t.indexOf(":");if(-1===r)throw new Error("Message header must separate key and value using :");let i=t.substr(0,r),n=t.substr(r+1).trim();e[i]=n}));let r=t+4;return this.buffer=this.buffer.slice(r),this.index=this.index-r,e}tryReadContent(e){if(this.index<e)return null;let t=this.buffer.toString(this.encoding,0,e),r=e;return this.buffer.copy(this.buffer,0,r),this.index=this.index-r,t}get numberOfBytes(){return this.index}}(t.MessageReader||(t.MessageReader={})).is=function(e){let t=e;return t&&n.func(t.listen)&&n.func(t.dispose)&&n.func(t.onError)&&n.func(t.onClose)&&n.func(t.onPartialMessage)};class d{constructor(){this.errorEmitter=new i.Emitter,this.closeEmitter=new i.Emitter,this.partialMessageEmitter=new i.Emitter}dispose(){this.errorEmitter.dispose(),this.closeEmitter.dispose()}get onError(){return this.errorEmitter.event}fireError(e){this.errorEmitter.fire(this.asError(e))}get onClose(){return this.closeEmitter.event}fireClose(){this.closeEmitter.fire(void 0)}get onPartialMessage(){return this.partialMessageEmitter.event}firePartialMessage(e){this.partialMessageEmitter.fire(e)}asError(e){return e instanceof Error?e:new Error(`Reader received error. Reason: ${n.string(e.message)?e.message:"unknown"}`)}}t.AbstractMessageReader=d;class p extends d{constructor(e,t="utf8"){super(),this.readable=e,this.buffer=new c(t),this._partialMessageTimeout=1e4}set partialMessageTimeout(e){this._partialMessageTimeout=e}get partialMessageTimeout(){return this._partialMessageTimeout}listen(e){this.nextMessageLength=-1,this.messageToken=0,this.partialMessageTimer=void 0,this.callback=e,this.readable.on("data",(e=>{this.onData(e)})),this.readable.on("error",(e=>this.fireError(e))),this.readable.on("close",(()=>this.fireClose()))}onData(e){for(this.buffer.append(e);;){if(-1===this.nextMessageLength){let e=this.buffer.tryReadHeaders();if(!e)return;let t=e["Content-Length"];if(!t)throw new Error("Header must provide a Content-Length property.");let r=parseInt(t);if(isNaN(r))throw new Error("Content-Length value must be a number.");this.nextMessageLength=r}var t=this.buffer.tryReadContent(this.nextMessageLength);if(null===t)return void this.setPartialMessageTimer();this.clearPartialMessageTimer(),this.nextMessageLength=-1,this.messageToken++;var r=JSON.parse(t);this.callback(r)}}clearPartialMessageTimer(){this.partialMessageTimer&&(clearTimeout(this.partialMessageTimer),this.partialMessageTimer=void 0)}setPartialMessageTimer(){this.clearPartialMessageTimer(),this._partialMessageTimeout<=0||(this.partialMessageTimer=setTimeout(((e,t)=>{this.partialMessageTimer=void 0,e===this.messageToken&&(this.firePartialMessage({messageToken:e,waitingTime:t}),this.setPartialMessageTimer())}),this._partialMessageTimeout,this.messageToken,this._partialMessageTimeout))}}t.StreamMessageReader=p,t.IPCMessageReader=class extends d{constructor(e){super(),this.process=e;let t=this.process;t.on("error",(e=>this.fireError(e))),t.on("close",(()=>this.fireClose()))}listen(e){this.process.on("message",e)}},t.SocketMessageReader=class extends p{constructor(e,t="utf-8"){super(e,t)}}},65599:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(90767),n=r(27223);let a="Content-Length: ",s="\r\n";(t.MessageWriter||(t.MessageWriter={})).is=function(e){let t=e;return t&&n.func(t.dispose)&&n.func(t.onClose)&&n.func(t.onError)&&n.func(t.write)};class o{constructor(){this.errorEmitter=new i.Emitter,this.closeEmitter=new i.Emitter}dispose(){this.errorEmitter.dispose(),this.closeEmitter.dispose()}get onError(){return this.errorEmitter.event}fireError(e,t,r){this.errorEmitter.fire([this.asError(e),t,r])}get onClose(){return this.closeEmitter.event}fireClose(){this.closeEmitter.fire(void 0)}asError(e){return e instanceof Error?e:new Error(`Writer received error. Reason: ${n.string(e.message)?e.message:"unknown"}`)}}t.AbstractMessageWriter=o,t.StreamMessageWriter=class extends o{constructor(e,t="utf8"){super(),this.writable=e,this.encoding=t,this.errorCount=0,this.writable.on("error",(e=>this.fireError(e))),this.writable.on("close",(()=>this.fireClose()))}write(e){let t=JSON.stringify(e),r=Buffer.byteLength(t,this.encoding),i=[a,r.toString(),s,s];try{this.writable.write(i.join(""),"ascii"),this.writable.write(t,this.encoding),this.errorCount=0}catch(t){this.errorCount++,this.fireError(t,e,this.errorCount)}}},t.IPCMessageWriter=class extends o{constructor(e){super(),this.process=e,this.errorCount=0,this.queue=[],this.sending=!1;let t=this.process;t.on("error",(e=>this.fireError(e))),t.on("close",(()=>this.fireClose))}write(e){this.sending||0!==this.queue.length?this.queue.push(e):this.doWriteMessage(e)}doWriteMessage(e){try{this.process.send&&(this.sending=!0,this.process.send(e,void 0,void 0,(t=>{this.sending=!1,t?(this.errorCount++,this.fireError(t,e,this.errorCount)):this.errorCount=0,this.queue.length>0&&this.doWriteMessage(this.queue.shift())})))}catch(t){this.errorCount++,this.fireError(t,e,this.errorCount)}}},t.SocketMessageWriter=class extends o{constructor(e,t="utf8"){super(),this.socket=e,this.queue=[],this.sending=!1,this.encoding=t,this.errorCount=0,this.socket.on("error",(e=>this.fireError(e))),this.socket.on("close",(()=>this.fireClose()))}dispose(){super.dispose(),this.socket.destroy()}write(e){this.sending||0!==this.queue.length?this.queue.push(e):this.doWriteMessage(e)}doWriteMessage(e){let t=JSON.stringify(e),r=Buffer.byteLength(t,this.encoding),i=[a,r.toString(),s,s];try{this.sending=!0,this.socket.write(i.join(""),"ascii",(r=>{r&&this.handleError(r,e);try{this.socket.write(t,this.encoding,(t=>{this.sending=!1,t?this.handleError(t,e):this.errorCount=0,this.queue.length>0&&this.doWriteMessage(this.queue.shift())}))}catch(r){this.handleError(r,e)}}))}catch(t){this.handleError(t,e)}}handleError(e,t){this.errorCount++,this.fireError(e,t,this.errorCount)}}},96793:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(27223);var n;!function(e){e.ParseError=-32700,e.InvalidRequest=-32600,e.MethodNotFound=-32601,e.InvalidParams=-32602,e.InternalError=-32603,e.serverErrorStart=-32099,e.serverErrorEnd=-32e3,e.ServerNotInitialized=-32002,e.UnknownErrorCode=-32001,e.RequestCancelled=-32800,e.ContentModified=-32801,e.MessageWriteError=1,e.MessageReadError=2}(n=t.ErrorCodes||(t.ErrorCodes={}));class a extends Error{constructor(e,t,r){super(t),this.code=i.number(e)?e:n.UnknownErrorCode,this.data=r,Object.setPrototypeOf(this,a.prototype)}toJson(){return{code:this.code,message:this.message,data:this.data}}}t.ResponseError=a;class s{constructor(e,t){this._method=e,this._numberOfParams=t}get method(){return this._method}get numberOfParams(){return this._numberOfParams}}t.AbstractMessageType=s,t.RequestType0=class extends s{constructor(e){super(e,0)}},t.RequestType=class extends s{constructor(e){super(e,1)}},t.RequestType1=class extends s{constructor(e){super(e,1)}},t.RequestType2=class extends s{constructor(e){super(e,2)}},t.RequestType3=class extends s{constructor(e){super(e,3)}},t.RequestType4=class extends s{constructor(e){super(e,4)}},t.RequestType5=class extends s{constructor(e){super(e,5)}},t.RequestType6=class extends s{constructor(e){super(e,6)}},t.RequestType7=class extends s{constructor(e){super(e,7)}},t.RequestType8=class extends s{constructor(e){super(e,8)}},t.RequestType9=class extends s{constructor(e){super(e,9)}},t.NotificationType=class extends s{constructor(e){super(e,1),this._=void 0}},t.NotificationType0=class extends s{constructor(e){super(e,0)}},t.NotificationType1=class extends s{constructor(e){super(e,1)}},t.NotificationType2=class extends s{constructor(e){super(e,2)}},t.NotificationType3=class extends s{constructor(e){super(e,3)}},t.NotificationType4=class extends s{constructor(e){super(e,4)}},t.NotificationType5=class extends s{constructor(e){super(e,5)}},t.NotificationType6=class extends s{constructor(e){super(e,6)}},t.NotificationType7=class extends s{constructor(e){super(e,7)}},t.NotificationType8=class extends s{constructor(e){super(e,8)}},t.NotificationType9=class extends s{constructor(e){super(e,9)}},t.isRequestMessage=function(e){let t=e;return t&&i.string(t.method)&&(i.string(t.id)||i.number(t.id))},t.isNotificationMessage=function(e){let t=e;return t&&i.string(t.method)&&void 0===e.id},t.isResponseMessage=function(e){let t=e;return t&&(void 0!==t.result||!!t.error)&&(i.string(t.id)||i.number(t.id)||null===t.id)}},72471:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(71017),n=r(22037),a=r(6113),s=r(41808),o=r(86928),c=r(65599);t.generateRandomPipeName=function(){const e=a.randomBytes(21).toString("hex");return"win32"===process.platform?`\\\\.\\pipe\\vscode-jsonrpc-${e}-sock`:i.join(n.tmpdir(),`vscode-${e}.sock`)},t.createClientPipeTransport=function(e,t="utf-8"){let r,i=new Promise(((e,t)=>{r=e}));return new Promise(((n,a)=>{let d=s.createServer((e=>{d.close(),r([new o.SocketMessageReader(e,t),new c.SocketMessageWriter(e,t)])}));d.on("error",a),d.listen(e,(()=>{d.removeListener("error",a),n({onConnected:()=>i})}))}))},t.createServerPipeTransport=function(e,t="utf-8"){const r=s.createConnection(e);return[new o.SocketMessageReader(r,t),new c.SocketMessageWriter(r,t)]}},41071:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(41808),n=r(86928),a=r(65599);t.createClientSocketTransport=function(e,t="utf-8"){let r,s=new Promise(((e,t)=>{r=e}));return new Promise(((o,c)=>{let d=i.createServer((e=>{d.close(),r([new n.SocketMessageReader(e,t),new a.SocketMessageWriter(e,t)])}));d.on("error",c),d.listen(e,"127.0.0.1",(()=>{d.removeListener("error",c),o({onConnected:()=>s})}))}))},t.createServerSocketTransport=function(e,t="utf-8"){const r=i.createConnection(e,"127.0.0.1");return[new n.SocketMessageReader(r,t),new a.SocketMessageWriter(r,t)]}},63078:(e,t,r)=>{"use strict";function i(e){for(var r in e)t.hasOwnProperty(r)||(t[r]=e[r])}Object.defineProperty(t,"__esModule",{value:!0});const n=r(52636);t.ErrorCodes=n.ErrorCodes,t.ResponseError=n.ResponseError,t.CancellationToken=n.CancellationToken,t.CancellationTokenSource=n.CancellationTokenSource,t.Disposable=n.Disposable,t.Event=n.Event,t.Emitter=n.Emitter,t.Trace=n.Trace,t.TraceFormat=n.TraceFormat,t.SetTraceNotification=n.SetTraceNotification,t.LogTraceNotification=n.LogTraceNotification,t.RequestType=n.RequestType,t.RequestType0=n.RequestType0,t.NotificationType=n.NotificationType,t.NotificationType0=n.NotificationType0,t.MessageReader=n.MessageReader,t.MessageWriter=n.MessageWriter,t.ConnectionStrategy=n.ConnectionStrategy,t.StreamMessageReader=n.StreamMessageReader,t.StreamMessageWriter=n.StreamMessageWriter,t.IPCMessageReader=n.IPCMessageReader,t.IPCMessageWriter=n.IPCMessageWriter,t.createClientPipeTransport=n.createClientPipeTransport,t.createServerPipeTransport=n.createServerPipeTransport,t.generateRandomPipeName=n.generateRandomPipeName,t.createClientSocketTransport=n.createClientSocketTransport,t.createServerSocketTransport=n.createServerSocketTransport,t.ProgressType=n.ProgressType,i(r(8871)),i(r(13766));const a=r(38214),s=r(52840);!function(e){let t,r,i,n,o,c;!function(e){e.method=a.CallHierarchyPrepareRequest.method,e.type=a.CallHierarchyPrepareRequest.type}(t=e.CallHierarchyPrepareRequest||(e.CallHierarchyPrepareRequest={})),function(e){e.method=a.CallHierarchyIncomingCallsRequest.method,e.type=a.CallHierarchyIncomingCallsRequest.type}(r=e.CallHierarchyIncomingCallsRequest||(e.CallHierarchyIncomingCallsRequest={})),function(e){e.method=a.CallHierarchyOutgoingCallsRequest.method,e.type=a.CallHierarchyOutgoingCallsRequest.type}(i=e.CallHierarchyOutgoingCallsRequest||(e.CallHierarchyOutgoingCallsRequest={})),e.SemanticTokenTypes=s.SemanticTokenTypes,e.SemanticTokenModifiers=s.SemanticTokenModifiers,e.SemanticTokens=s.SemanticTokens,function(e){e.method=s.SemanticTokensRequest.method,e.type=s.SemanticTokensRequest.type}(n=e.SemanticTokensRequest||(e.SemanticTokensRequest={})),function(e){e.method=s.SemanticTokensEditsRequest.method,e.type=s.SemanticTokensEditsRequest.type}(o=e.SemanticTokensEditsRequest||(e.SemanticTokensEditsRequest={})),function(e){e.method=s.SemanticTokensRangeRequest.method,e.type=s.SemanticTokensRangeRequest.type}(c=e.SemanticTokensRangeRequest||(e.SemanticTokensRangeRequest={}))}(t.Proposed||(t.Proposed={})),t.createProtocolConnection=function(e,t,r,i){return n.createMessageConnection(e,t,r,i)}},55389:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(52636);class n extends i.RequestType0{constructor(e){super(e)}}t.ProtocolRequestType0=n;class a extends i.RequestType{constructor(e){super(e)}}t.ProtocolRequestType=a;class s extends i.NotificationType{constructor(e){super(e)}}t.ProtocolNotificationType=s;class o extends i.NotificationType0{constructor(e){super(e)}}t.ProtocolNotificationType0=o},38214:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(55389);var n,a,s;(s=t.CallHierarchyPrepareRequest||(t.CallHierarchyPrepareRequest={})).method="textDocument/prepareCallHierarchy",s.type=new i.ProtocolRequestType(s.method),(a=t.CallHierarchyIncomingCallsRequest||(t.CallHierarchyIncomingCallsRequest={})).method="callHierarchy/incomingCalls",a.type=new i.ProtocolRequestType(a.method),(n=t.CallHierarchyOutgoingCallsRequest||(t.CallHierarchyOutgoingCallsRequest={})).method="callHierarchy/outgoingCalls",n.type=new i.ProtocolRequestType(n.method)},78275:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(52636),n=r(55389);var a;(a=t.DocumentColorRequest||(t.DocumentColorRequest={})).method="textDocument/documentColor",a.type=new n.ProtocolRequestType(a.method),a.resultType=new i.ProgressType,(t.ColorPresentationRequest||(t.ColorPresentationRequest={})).type=new n.ProtocolRequestType("textDocument/colorPresentation")},21792:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(55389);(t.ConfigurationRequest||(t.ConfigurationRequest={})).type=new i.ProtocolRequestType("workspace/configuration")},80246:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(52636),n=r(55389);var a;(a=t.DeclarationRequest||(t.DeclarationRequest={})).method="textDocument/declaration",a.type=new n.ProtocolRequestType(a.method),a.resultType=new i.ProgressType},15516:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(52636),n=r(55389);var a,s;(s=t.FoldingRangeKind||(t.FoldingRangeKind={})).Comment="comment",s.Imports="imports",s.Region="region",(a=t.FoldingRangeRequest||(t.FoldingRangeRequest={})).method="textDocument/foldingRange",a.type=new n.ProtocolRequestType(a.method),a.resultType=new i.ProgressType},74996:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(52636),n=r(55389);var a;(a=t.ImplementationRequest||(t.ImplementationRequest={})).method="textDocument/implementation",a.type=new n.ProtocolRequestType(a.method),a.resultType=new i.ProgressType},13766:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(94962),n=r(52636),a=r(55389),s=r(74996);t.ImplementationRequest=s.ImplementationRequest;const o=r(89298);t.TypeDefinitionRequest=o.TypeDefinitionRequest;const c=r(47895);t.WorkspaceFoldersRequest=c.WorkspaceFoldersRequest,t.DidChangeWorkspaceFoldersNotification=c.DidChangeWorkspaceFoldersNotification;const d=r(21792);t.ConfigurationRequest=d.ConfigurationRequest;const p=r(78275);t.DocumentColorRequest=p.DocumentColorRequest,t.ColorPresentationRequest=p.ColorPresentationRequest;const u=r(15516);t.FoldingRangeRequest=u.FoldingRangeRequest;const m=r(80246);t.DeclarationRequest=m.DeclarationRequest;const h=r(84939);t.SelectionRangeRequest=h.SelectionRangeRequest;const l=r(13319);var f,g,R,A,b,T,E,w,x,C,S,v,I,y,N,_,L,D,O,M,P,U,H,B,k,q,V,G,z,F,X,Y,j,W,J;t.WorkDoneProgress=l.WorkDoneProgress,t.WorkDoneProgressCreateRequest=l.WorkDoneProgressCreateRequest,t.WorkDoneProgressCancelNotification=l.WorkDoneProgressCancelNotification,function(e){e.is=function(e){const t=e;return i.string(t.language)||i.string(t.scheme)||i.string(t.pattern)}}(f=t.DocumentFilter||(t.DocumentFilter={})),function(e){e.is=function(e){if(!Array.isArray(e))return!1;for(let t of e)if(!i.string(t)&&!f.is(t))return!1;return!0}}(g=t.DocumentSelector||(t.DocumentSelector={})),(t.RegistrationRequest||(t.RegistrationRequest={})).type=new a.ProtocolRequestType("client/registerCapability"),(t.UnregistrationRequest||(t.UnregistrationRequest={})).type=new a.ProtocolRequestType("client/unregisterCapability"),(J=t.ResourceOperationKind||(t.ResourceOperationKind={})).Create="create",J.Rename="rename",J.Delete="delete",(W=t.FailureHandlingKind||(t.FailureHandlingKind={})).Abort="abort",W.Transactional="transactional",W.TextOnlyTransactional="textOnlyTransactional",W.Undo="undo",(t.StaticRegistrationOptions||(t.StaticRegistrationOptions={})).hasId=function(e){const t=e;return t&&i.string(t.id)&&t.id.length>0},(t.TextDocumentRegistrationOptions||(t.TextDocumentRegistrationOptions={})).is=function(e){const t=e;return t&&(null===t.documentSelector||g.is(t.documentSelector))},(j=t.WorkDoneProgressOptions||(t.WorkDoneProgressOptions={})).is=function(e){const t=e;return i.objectLiteral(t)&&(void 0===t.workDoneProgress||i.boolean(t.workDoneProgress))},j.hasWorkDoneProgress=function(e){const t=e;return t&&i.boolean(t.workDoneProgress)},(t.InitializeRequest||(t.InitializeRequest={})).type=new a.ProtocolRequestType("initialize"),(t.InitializeError||(t.InitializeError={})).unknownProtocolVersion=1,(t.InitializedNotification||(t.InitializedNotification={})).type=new a.ProtocolNotificationType("initialized"),(t.ShutdownRequest||(t.ShutdownRequest={})).type=new a.ProtocolRequestType0("shutdown"),(t.ExitNotification||(t.ExitNotification={})).type=new a.ProtocolNotificationType0("exit"),(t.DidChangeConfigurationNotification||(t.DidChangeConfigurationNotification={})).type=new a.ProtocolNotificationType("workspace/didChangeConfiguration"),(Y=t.MessageType||(t.MessageType={})).Error=1,Y.Warning=2,Y.Info=3,Y.Log=4,(t.ShowMessageNotification||(t.ShowMessageNotification={})).type=new a.ProtocolNotificationType("window/showMessage"),(t.ShowMessageRequest||(t.ShowMessageRequest={})).type=new a.ProtocolRequestType("window/showMessageRequest"),(t.LogMessageNotification||(t.LogMessageNotification={})).type=new a.ProtocolNotificationType("window/logMessage"),(t.TelemetryEventNotification||(t.TelemetryEventNotification={})).type=new a.ProtocolNotificationType("telemetry/event"),(X=t.TextDocumentSyncKind||(t.TextDocumentSyncKind={})).None=0,X.Full=1,X.Incremental=2,(F=t.DidOpenTextDocumentNotification||(t.DidOpenTextDocumentNotification={})).method="textDocument/didOpen",F.type=new a.ProtocolNotificationType(F.method),(z=t.DidChangeTextDocumentNotification||(t.DidChangeTextDocumentNotification={})).method="textDocument/didChange",z.type=new a.ProtocolNotificationType(z.method),(G=t.DidCloseTextDocumentNotification||(t.DidCloseTextDocumentNotification={})).method="textDocument/didClose",G.type=new a.ProtocolNotificationType(G.method),(V=t.DidSaveTextDocumentNotification||(t.DidSaveTextDocumentNotification={})).method="textDocument/didSave",V.type=new a.ProtocolNotificationType(V.method),(q=t.TextDocumentSaveReason||(t.TextDocumentSaveReason={})).Manual=1,q.AfterDelay=2,q.FocusOut=3,(k=t.WillSaveTextDocumentNotification||(t.WillSaveTextDocumentNotification={})).method="textDocument/willSave",k.type=new a.ProtocolNotificationType(k.method),(B=t.WillSaveTextDocumentWaitUntilRequest||(t.WillSaveTextDocumentWaitUntilRequest={})).method="textDocument/willSaveWaitUntil",B.type=new a.ProtocolRequestType(B.method),(t.DidChangeWatchedFilesNotification||(t.DidChangeWatchedFilesNotification={})).type=new a.ProtocolNotificationType("workspace/didChangeWatchedFiles"),(H=t.FileChangeType||(t.FileChangeType={})).Created=1,H.Changed=2,H.Deleted=3,(U=t.WatchKind||(t.WatchKind={})).Create=1,U.Change=2,U.Delete=4,(t.PublishDiagnosticsNotification||(t.PublishDiagnosticsNotification={})).type=new a.ProtocolNotificationType("textDocument/publishDiagnostics"),(P=t.CompletionTriggerKind||(t.CompletionTriggerKind={})).Invoked=1,P.TriggerCharacter=2,P.TriggerForIncompleteCompletions=3,(M=t.CompletionRequest||(t.CompletionRequest={})).method="textDocument/completion",M.type=new a.ProtocolRequestType(M.method),M.resultType=new n.ProgressType,(O=t.CompletionResolveRequest||(t.CompletionResolveRequest={})).method="completionItem/resolve",O.type=new a.ProtocolRequestType(O.method),(D=t.HoverRequest||(t.HoverRequest={})).method="textDocument/hover",D.type=new a.ProtocolRequestType(D.method),(L=t.SignatureHelpTriggerKind||(t.SignatureHelpTriggerKind={})).Invoked=1,L.TriggerCharacter=2,L.ContentChange=3,(_=t.SignatureHelpRequest||(t.SignatureHelpRequest={})).method="textDocument/signatureHelp",_.type=new a.ProtocolRequestType(_.method),(N=t.DefinitionRequest||(t.DefinitionRequest={})).method="textDocument/definition",N.type=new a.ProtocolRequestType(N.method),N.resultType=new n.ProgressType,(y=t.ReferencesRequest||(t.ReferencesRequest={})).method="textDocument/references",y.type=new a.ProtocolRequestType(y.method),y.resultType=new n.ProgressType,(I=t.DocumentHighlightRequest||(t.DocumentHighlightRequest={})).method="textDocument/documentHighlight",I.type=new a.ProtocolRequestType(I.method),I.resultType=new n.ProgressType,(v=t.DocumentSymbolRequest||(t.DocumentSymbolRequest={})).method="textDocument/documentSymbol",v.type=new a.ProtocolRequestType(v.method),v.resultType=new n.ProgressType,(S=t.CodeActionRequest||(t.CodeActionRequest={})).method="textDocument/codeAction",S.type=new a.ProtocolRequestType(S.method),S.resultType=new n.ProgressType,(C=t.WorkspaceSymbolRequest||(t.WorkspaceSymbolRequest={})).method="workspace/symbol",C.type=new a.ProtocolRequestType(C.method),C.resultType=new n.ProgressType,(x=t.CodeLensRequest||(t.CodeLensRequest={})).type=new a.ProtocolRequestType("textDocument/codeLens"),x.resultType=new n.ProgressType,(t.CodeLensResolveRequest||(t.CodeLensResolveRequest={})).type=new a.ProtocolRequestType("codeLens/resolve"),(w=t.DocumentLinkRequest||(t.DocumentLinkRequest={})).method="textDocument/documentLink",w.type=new a.ProtocolRequestType(w.method),w.resultType=new n.ProgressType,(t.DocumentLinkResolveRequest||(t.DocumentLinkResolveRequest={})).type=new a.ProtocolRequestType("documentLink/resolve"),(E=t.DocumentFormattingRequest||(t.DocumentFormattingRequest={})).method="textDocument/formatting",E.type=new a.ProtocolRequestType(E.method),(T=t.DocumentRangeFormattingRequest||(t.DocumentRangeFormattingRequest={})).method="textDocument/rangeFormatting",T.type=new a.ProtocolRequestType(T.method),(b=t.DocumentOnTypeFormattingRequest||(t.DocumentOnTypeFormattingRequest={})).method="textDocument/onTypeFormatting",b.type=new a.ProtocolRequestType(b.method),(A=t.RenameRequest||(t.RenameRequest={})).method="textDocument/rename",A.type=new a.ProtocolRequestType(A.method),(R=t.PrepareRenameRequest||(t.PrepareRenameRequest={})).method="textDocument/prepareRename",R.type=new a.ProtocolRequestType(R.method),(t.ExecuteCommandRequest||(t.ExecuteCommandRequest={})).type=new a.ProtocolRequestType("workspace/executeCommand"),(t.ApplyWorkspaceEditRequest||(t.ApplyWorkspaceEditRequest={})).type=new a.ProtocolRequestType("workspace/applyEdit")},13319:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(52636),n=r(55389);(t.WorkDoneProgress||(t.WorkDoneProgress={})).type=new i.ProgressType,(t.WorkDoneProgressCreateRequest||(t.WorkDoneProgressCreateRequest={})).type=new n.ProtocolRequestType("window/workDoneProgress/create"),(t.WorkDoneProgressCancelNotification||(t.WorkDoneProgressCancelNotification={})).type=new n.ProtocolNotificationType("window/workDoneProgress/cancel")},84939:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(52636),n=r(55389);var a;(a=t.SelectionRangeRequest||(t.SelectionRangeRequest={})).method="textDocument/selectionRange",a.type=new n.ProtocolRequestType(a.method),a.resultType=new i.ProgressType},52840:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(55389);var n,a,s,o,c;(c=t.SemanticTokenTypes||(t.SemanticTokenTypes={})).comment="comment",c.keyword="keyword",c.string="string",c.number="number",c.regexp="regexp",c.operator="operator",c.namespace="namespace",c.type="type",c.struct="struct",c.class="class",c.interface="interface",c.enum="enum",c.typeParameter="typeParameter",c.function="function",c.member="member",c.property="property",c.macro="macro",c.variable="variable",c.parameter="parameter",c.label="label",(o=t.SemanticTokenModifiers||(t.SemanticTokenModifiers={})).documentation="documentation",o.declaration="declaration",o.definition="definition",o.reference="reference",o.static="static",o.abstract="abstract",o.deprecated="deprecated",o.async="async",o.volatile="volatile",o.readonly="readonly",(t.SemanticTokens||(t.SemanticTokens={})).is=function(e){const t=e;return void 0!==t&&(void 0===t.resultId||"string"==typeof t.resultId)&&Array.isArray(t.data)&&(0===t.data.length||"number"==typeof t.data[0])},(s=t.SemanticTokensRequest||(t.SemanticTokensRequest={})).method="textDocument/semanticTokens",s.type=new i.ProtocolRequestType(s.method),(a=t.SemanticTokensEditsRequest||(t.SemanticTokensEditsRequest={})).method="textDocument/semanticTokens/edits",a.type=new i.ProtocolRequestType(a.method),(n=t.SemanticTokensRangeRequest||(t.SemanticTokensRangeRequest={})).method="textDocument/semanticTokens/range",n.type=new i.ProtocolRequestType(n.method)},89298:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(52636),n=r(55389);var a;(a=t.TypeDefinitionRequest||(t.TypeDefinitionRequest={})).method="textDocument/typeDefinition",a.type=new n.ProtocolRequestType(a.method),a.resultType=new i.ProgressType},47895:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(55389);(t.WorkspaceFoldersRequest||(t.WorkspaceFoldersRequest={})).type=new i.ProtocolRequestType0("workspace/workspaceFolders"),(t.DidChangeWorkspaceFoldersNotification||(t.DidChangeWorkspaceFoldersNotification={})).type=new i.ProtocolNotificationType("workspace/didChangeWorkspaceFolders")},94962:(e,t)=>{"use strict";function r(e){return"string"==typeof e||e instanceof String}function i(e){return Array.isArray(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.boolean=function(e){return!0===e||!1===e},t.string=r,t.number=function(e){return"number"==typeof e||e instanceof Number},t.error=function(e){return e instanceof Error},t.func=function(e){return"function"==typeof e},t.array=i,t.stringArray=function(e){return i(e)&&e.every((e=>r(e)))},t.typedArray=function(e,t){return Array.isArray(e)&&e.every(t)},t.objectLiteral=function(e){return null!==e&&"object"==typeof e}},4763:(e,t,r)=>{"use strict";r.r(t),r.d(t,{TextDocument:()=>i});var i,n=function(){function e(e,t,r,i){this._uri=e,this._languageId=t,this._version=r,this._content=i,this._lineOffsets=void 0}return Object.defineProperty(e.prototype,"uri",{get:function(){return this._uri},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"languageId",{get:function(){return this._languageId},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"version",{get:function(){return this._version},enumerable:!0,configurable:!0}),e.prototype.getText=function(e){if(e){var t=this.offsetAt(e.start),r=this.offsetAt(e.end);return this._content.substring(t,r)}return this._content},e.prototype.update=function(t,r){for(var i=0,n=t;i<n.length;i++){var a=n[i];if(e.isIncremental(a)){var c=o(a.range),d=this.offsetAt(c.start),p=this.offsetAt(c.end);this._content=this._content.substring(0,d)+a.text+this._content.substring(p,this._content.length);var u=Math.max(c.start.line,0),m=Math.max(c.end.line,0),h=this._lineOffsets,l=s(a.text,!1,d);if(m-u===l.length)for(var f=0,g=l.length;f<g;f++)h[f+u+1]=l[f];else l.length<1e4?h.splice.apply(h,[u+1,m-u].concat(l)):this._lineOffsets=h=h.slice(0,u+1).concat(l,h.slice(m+1));var R=a.text.length-(p-d);if(0!==R)for(f=u+1+l.length,g=h.length;f<g;f++)h[f]=h[f]+R}else{if(!e.isFull(a))throw new Error("Unknown change event received");this._content=a.text,this._lineOffsets=void 0}}this._version=r},e.prototype.getLineOffsets=function(){return void 0===this._lineOffsets&&(this._lineOffsets=s(this._content,!0)),this._lineOffsets},e.prototype.positionAt=function(e){e=Math.max(Math.min(e,this._content.length),0);var t=this.getLineOffsets(),r=0,i=t.length;if(0===i)return{line:0,character:e};for(;r<i;){var n=Math.floor((r+i)/2);t[n]>e?i=n:r=n+1}var a=r-1;return{line:a,character:e-t[a]}},e.prototype.offsetAt=function(e){var t=this.getLineOffsets();if(e.line>=t.length)return this._content.length;if(e.line<0)return 0;var r=t[e.line],i=e.line+1<t.length?t[e.line+1]:this._content.length;return Math.max(Math.min(r+e.character,i),r)},Object.defineProperty(e.prototype,"lineCount",{get:function(){return this.getLineOffsets().length},enumerable:!0,configurable:!0}),e.isIncremental=function(e){var t=e;return null!=t&&"string"==typeof t.text&&void 0!==t.range&&(void 0===t.rangeLength||"number"==typeof t.rangeLength)},e.isFull=function(e){var t=e;return null!=t&&"string"==typeof t.text&&void 0===t.range&&void 0===t.rangeLength},e}();function a(e,t){if(e.length<=1)return e;var r=e.length/2|0,i=e.slice(0,r),n=e.slice(r);a(i,t),a(n,t);for(var s=0,o=0,c=0;s<i.length&&o<n.length;){var d=t(i[s],n[o]);e[c++]=d<=0?i[s++]:n[o++]}for(;s<i.length;)e[c++]=i[s++];for(;o<n.length;)e[c++]=n[o++];return e}function s(e,t,r){void 0===r&&(r=0);for(var i=t?[r]:[],n=0;n<e.length;n++){var a=e.charCodeAt(n);13!==a&&10!==a||(13===a&&n+1<e.length&&10===e.charCodeAt(n+1)&&n++,i.push(r+n+1))}return i}function o(e){var t=e.start,r=e.end;return t.line>r.line||t.line===r.line&&t.character>r.character?{start:r,end:t}:e}function c(e){var t=o(e.range);return t!==e.range?{newText:e.newText,range:t}:e}!function(e){e.create=function(e,t,r,i){return new n(e,t,r,i)},e.update=function(e,t,r){if(e instanceof n)return e.update(t,r),e;throw new Error("TextDocument.update: document must be created by TextDocument.create")},e.applyEdits=function(e,t){for(var r=e.getText(),i=0,n=[],s=0,o=a(t.map(c),(function(e,t){var r=e.range.start.line-t.range.start.line;return 0===r?e.range.start.character-t.range.start.character:r}));s<o.length;s++){var d=o[s],p=e.offsetAt(d.range.start);if(p<i)throw new Error("Overlapping edit");p>i&&n.push(r.substring(i,p)),d.newText.length&&n.push(d.newText),i=e.offsetAt(d.range.end)}return n.push(r.substr(i)),n.join("")}}(i||(i={}))},8871:(e,t,r)=>{"use strict";var i,n,a,s,o,c,d,p,u,m,h,l,f,g,R,A,b,T,E,w;r.r(t),r.d(t,{CodeAction:()=>X,CodeActionContext:()=>F,CodeActionKind:()=>z,CodeLens:()=>Y,Color:()=>o,ColorInformation:()=>c,ColorPresentation:()=>d,Command:()=>g,CompletionItem:()=>L,CompletionItemKind:()=>y,CompletionItemTag:()=>_,CompletionList:()=>D,CreateFile:()=>b,DeleteFile:()=>E,Diagnostic:()=>f,DiagnosticRelatedInformation:()=>m,DiagnosticSeverity:()=>h,DiagnosticTag:()=>l,DocumentHighlight:()=>B,DocumentHighlightKind:()=>H,DocumentLink:()=>W,DocumentSymbol:()=>G,EOL:()=>Z,FoldingRange:()=>u,FoldingRangeKind:()=>p,FormattingOptions:()=>j,Hover:()=>M,InsertTextFormat:()=>N,Location:()=>a,LocationLink:()=>s,MarkedString:()=>O,MarkupContent:()=>I,MarkupKind:()=>v,ParameterInformation:()=>P,Position:()=>i,Range:()=>n,RenameFile:()=>T,SelectionRange:()=>J,SignatureInformation:()=>U,SymbolInformation:()=>V,SymbolKind:()=>k,SymbolTag:()=>q,TextDocument:()=>$,TextDocumentEdit:()=>A,TextDocumentIdentifier:()=>x,TextDocumentItem:()=>S,TextEdit:()=>R,VersionedTextDocumentIdentifier:()=>C,WorkspaceChange:()=>K,WorkspaceEdit:()=>w}),function(e){e.create=function(e,t){return{line:e,character:t}},e.is=function(e){var t=e;return ee.objectLiteral(t)&&ee.number(t.line)&&ee.number(t.character)}}(i||(i={})),function(e){e.create=function(e,t,r,n){if(ee.number(e)&&ee.number(t)&&ee.number(r)&&ee.number(n))return{start:i.create(e,t),end:i.create(r,n)};if(i.is(e)&&i.is(t))return{start:e,end:t};throw new Error("Range#create called with invalid arguments["+e+", "+t+", "+r+", "+n+"]")},e.is=function(e){var t=e;return ee.objectLiteral(t)&&i.is(t.start)&&i.is(t.end)}}(n||(n={})),function(e){e.create=function(e,t){return{uri:e,range:t}},e.is=function(e){var t=e;return ee.defined(t)&&n.is(t.range)&&(ee.string(t.uri)||ee.undefined(t.uri))}}(a||(a={})),function(e){e.create=function(e,t,r,i){return{targetUri:e,targetRange:t,targetSelectionRange:r,originSelectionRange:i}},e.is=function(e){var t=e;return ee.defined(t)&&n.is(t.targetRange)&&ee.string(t.targetUri)&&(n.is(t.targetSelectionRange)||ee.undefined(t.targetSelectionRange))&&(n.is(t.originSelectionRange)||ee.undefined(t.originSelectionRange))}}(s||(s={})),function(e){e.create=function(e,t,r,i){return{red:e,green:t,blue:r,alpha:i}},e.is=function(e){var t=e;return ee.number(t.red)&&ee.number(t.green)&&ee.number(t.blue)&&ee.number(t.alpha)}}(o||(o={})),function(e){e.create=function(e,t){return{range:e,color:t}},e.is=function(e){var t=e;return n.is(t.range)&&o.is(t.color)}}(c||(c={})),function(e){e.create=function(e,t,r){return{label:e,textEdit:t,additionalTextEdits:r}},e.is=function(e){var t=e;return ee.string(t.label)&&(ee.undefined(t.textEdit)||R.is(t))&&(ee.undefined(t.additionalTextEdits)||ee.typedArray(t.additionalTextEdits,R.is))}}(d||(d={})),function(e){e.Comment="comment",e.Imports="imports",e.Region="region"}(p||(p={})),function(e){e.create=function(e,t,r,i,n){var a={startLine:e,endLine:t};return ee.defined(r)&&(a.startCharacter=r),ee.defined(i)&&(a.endCharacter=i),ee.defined(n)&&(a.kind=n),a},e.is=function(e){var t=e;return ee.number(t.startLine)&&ee.number(t.startLine)&&(ee.undefined(t.startCharacter)||ee.number(t.startCharacter))&&(ee.undefined(t.endCharacter)||ee.number(t.endCharacter))&&(ee.undefined(t.kind)||ee.string(t.kind))}}(u||(u={})),function(e){e.create=function(e,t){return{location:e,message:t}},e.is=function(e){var t=e;return ee.defined(t)&&a.is(t.location)&&ee.string(t.message)}}(m||(m={})),function(e){e.Error=1,e.Warning=2,e.Information=3,e.Hint=4}(h||(h={})),function(e){e.Unnecessary=1,e.Deprecated=2}(l||(l={})),function(e){e.create=function(e,t,r,i,n,a){var s={range:e,message:t};return ee.defined(r)&&(s.severity=r),ee.defined(i)&&(s.code=i),ee.defined(n)&&(s.source=n),ee.defined(a)&&(s.relatedInformation=a),s},e.is=function(e){var t=e;return ee.defined(t)&&n.is(t.range)&&ee.string(t.message)&&(ee.number(t.severity)||ee.undefined(t.severity))&&(ee.number(t.code)||ee.string(t.code)||ee.undefined(t.code))&&(ee.string(t.source)||ee.undefined(t.source))&&(ee.undefined(t.relatedInformation)||ee.typedArray(t.relatedInformation,m.is))}}(f||(f={})),function(e){e.create=function(e,t){for(var r=[],i=2;i<arguments.length;i++)r[i-2]=arguments[i];var n={title:e,command:t};return ee.defined(r)&&r.length>0&&(n.arguments=r),n},e.is=function(e){var t=e;return ee.defined(t)&&ee.string(t.title)&&ee.string(t.command)}}(g||(g={})),function(e){e.replace=function(e,t){return{range:e,newText:t}},e.insert=function(e,t){return{range:{start:e,end:e},newText:t}},e.del=function(e){return{range:e,newText:""}},e.is=function(e){var t=e;return ee.objectLiteral(t)&&ee.string(t.newText)&&n.is(t.range)}}(R||(R={})),function(e){e.create=function(e,t){return{textDocument:e,edits:t}},e.is=function(e){var t=e;return ee.defined(t)&&C.is(t.textDocument)&&Array.isArray(t.edits)}}(A||(A={})),function(e){e.create=function(e,t){var r={kind:"create",uri:e};return void 0===t||void 0===t.overwrite&&void 0===t.ignoreIfExists||(r.options=t),r},e.is=function(e){var t=e;return t&&"create"===t.kind&&ee.string(t.uri)&&(void 0===t.options||(void 0===t.options.overwrite||ee.boolean(t.options.overwrite))&&(void 0===t.options.ignoreIfExists||ee.boolean(t.options.ignoreIfExists)))}}(b||(b={})),function(e){e.create=function(e,t,r){var i={kind:"rename",oldUri:e,newUri:t};return void 0===r||void 0===r.overwrite&&void 0===r.ignoreIfExists||(i.options=r),i},e.is=function(e){var t=e;return t&&"rename"===t.kind&&ee.string(t.oldUri)&&ee.string(t.newUri)&&(void 0===t.options||(void 0===t.options.overwrite||ee.boolean(t.options.overwrite))&&(void 0===t.options.ignoreIfExists||ee.boolean(t.options.ignoreIfExists)))}}(T||(T={})),function(e){e.create=function(e,t){var r={kind:"delete",uri:e};return void 0===t||void 0===t.recursive&&void 0===t.ignoreIfNotExists||(r.options=t),r},e.is=function(e){var t=e;return t&&"delete"===t.kind&&ee.string(t.uri)&&(void 0===t.options||(void 0===t.options.recursive||ee.boolean(t.options.recursive))&&(void 0===t.options.ignoreIfNotExists||ee.boolean(t.options.ignoreIfNotExists)))}}(E||(E={})),function(e){e.is=function(e){var t=e;return t&&(void 0!==t.changes||void 0!==t.documentChanges)&&(void 0===t.documentChanges||t.documentChanges.every((function(e){return ee.string(e.kind)?b.is(e)||T.is(e)||E.is(e):A.is(e)})))}}(w||(w={}));var x,C,S,v,I,y,N,_,L,D,O,M,P,U,H,B,k,q,V,G,z,F,X,Y,j,W,J,Q=function(){function e(e){this.edits=e}return e.prototype.insert=function(e,t){this.edits.push(R.insert(e,t))},e.prototype.replace=function(e,t){this.edits.push(R.replace(e,t))},e.prototype.delete=function(e){this.edits.push(R.del(e))},e.prototype.add=function(e){this.edits.push(e)},e.prototype.all=function(){return this.edits},e.prototype.clear=function(){this.edits.splice(0,this.edits.length)},e}(),K=function(){function e(e){var t=this;this._textEditChanges=Object.create(null),e&&(this._workspaceEdit=e,e.documentChanges?e.documentChanges.forEach((function(e){if(A.is(e)){var r=new Q(e.edits);t._textEditChanges[e.textDocument.uri]=r}})):e.changes&&Object.keys(e.changes).forEach((function(r){var i=new Q(e.changes[r]);t._textEditChanges[r]=i})))}return Object.defineProperty(e.prototype,"edit",{get:function(){return this._workspaceEdit},enumerable:!0,configurable:!0}),e.prototype.getTextEditChange=function(e){if(C.is(e)){if(this._workspaceEdit||(this._workspaceEdit={documentChanges:[]}),!this._workspaceEdit.documentChanges)throw new Error("Workspace edit is not configured for document changes.");var t=e;if(!(i=this._textEditChanges[t.uri])){var r={textDocument:t,edits:n=[]};this._workspaceEdit.documentChanges.push(r),i=new Q(n),this._textEditChanges[t.uri]=i}return i}if(this._workspaceEdit||(this._workspaceEdit={changes:Object.create(null)}),!this._workspaceEdit.changes)throw new Error("Workspace edit is not configured for normal text edit changes.");var i;if(!(i=this._textEditChanges[e])){var n=[];this._workspaceEdit.changes[e]=n,i=new Q(n),this._textEditChanges[e]=i}return i},e.prototype.createFile=function(e,t){this.checkDocumentChanges(),this._workspaceEdit.documentChanges.push(b.create(e,t))},e.prototype.renameFile=function(e,t,r){this.checkDocumentChanges(),this._workspaceEdit.documentChanges.push(T.create(e,t,r))},e.prototype.deleteFile=function(e,t){this.checkDocumentChanges(),this._workspaceEdit.documentChanges.push(E.create(e,t))},e.prototype.checkDocumentChanges=function(){if(!this._workspaceEdit||!this._workspaceEdit.documentChanges)throw new Error("Workspace edit is not configured for document changes.")},e}();!function(e){e.create=function(e){return{uri:e}},e.is=function(e){var t=e;return ee.defined(t)&&ee.string(t.uri)}}(x||(x={})),function(e){e.create=function(e,t){return{uri:e,version:t}},e.is=function(e){var t=e;return ee.defined(t)&&ee.string(t.uri)&&(null===t.version||ee.number(t.version))}}(C||(C={})),function(e){e.create=function(e,t,r,i){return{uri:e,languageId:t,version:r,text:i}},e.is=function(e){var t=e;return ee.defined(t)&&ee.string(t.uri)&&ee.string(t.languageId)&&ee.number(t.version)&&ee.string(t.text)}}(S||(S={})),function(e){e.PlainText="plaintext",e.Markdown="markdown"}(v||(v={})),function(e){e.is=function(t){var r=t;return r===e.PlainText||r===e.Markdown}}(v||(v={})),function(e){e.is=function(e){var t=e;return ee.objectLiteral(e)&&v.is(t.kind)&&ee.string(t.value)}}(I||(I={})),function(e){e.Text=1,e.Method=2,e.Function=3,e.Constructor=4,e.Field=5,e.Variable=6,e.Class=7,e.Interface=8,e.Module=9,e.Property=10,e.Unit=11,e.Value=12,e.Enum=13,e.Keyword=14,e.Snippet=15,e.Color=16,e.File=17,e.Reference=18,e.Folder=19,e.EnumMember=20,e.Constant=21,e.Struct=22,e.Event=23,e.Operator=24,e.TypeParameter=25}(y||(y={})),function(e){e.PlainText=1,e.Snippet=2}(N||(N={})),function(e){e.Deprecated=1}(_||(_={})),function(e){e.create=function(e){return{label:e}}}(L||(L={})),function(e){e.create=function(e,t){return{items:e||[],isIncomplete:!!t}}}(D||(D={})),function(e){e.fromPlainText=function(e){return e.replace(/[\\`*_{}[\]()#+\-.!]/g,"\\$&")},e.is=function(e){var t=e;return ee.string(t)||ee.objectLiteral(t)&&ee.string(t.language)&&ee.string(t.value)}}(O||(O={})),function(e){e.is=function(e){var t=e;return!!t&&ee.objectLiteral(t)&&(I.is(t.contents)||O.is(t.contents)||ee.typedArray(t.contents,O.is))&&(void 0===e.range||n.is(e.range))}}(M||(M={})),function(e){e.create=function(e,t){return t?{label:e,documentation:t}:{label:e}}}(P||(P={})),function(e){e.create=function(e,t){for(var r=[],i=2;i<arguments.length;i++)r[i-2]=arguments[i];var n={label:e};return ee.defined(t)&&(n.documentation=t),ee.defined(r)?n.parameters=r:n.parameters=[],n}}(U||(U={})),function(e){e.Text=1,e.Read=2,e.Write=3}(H||(H={})),function(e){e.create=function(e,t){var r={range:e};return ee.number(t)&&(r.kind=t),r}}(B||(B={})),function(e){e.File=1,e.Module=2,e.Namespace=3,e.Package=4,e.Class=5,e.Method=6,e.Property=7,e.Field=8,e.Constructor=9,e.Enum=10,e.Interface=11,e.Function=12,e.Variable=13,e.Constant=14,e.String=15,e.Number=16,e.Boolean=17,e.Array=18,e.Object=19,e.Key=20,e.Null=21,e.EnumMember=22,e.Struct=23,e.Event=24,e.Operator=25,e.TypeParameter=26}(k||(k={})),function(e){e.Deprecated=1}(q||(q={})),function(e){e.create=function(e,t,r,i,n){var a={name:e,kind:t,location:{uri:i,range:r}};return n&&(a.containerName=n),a}}(V||(V={})),function(e){e.create=function(e,t,r,i,n,a){var s={name:e,detail:t,kind:r,range:i,selectionRange:n};return void 0!==a&&(s.children=a),s},e.is=function(e){var t=e;return t&&ee.string(t.name)&&ee.number(t.kind)&&n.is(t.range)&&n.is(t.selectionRange)&&(void 0===t.detail||ee.string(t.detail))&&(void 0===t.deprecated||ee.boolean(t.deprecated))&&(void 0===t.children||Array.isArray(t.children))}}(G||(G={})),function(e){e.Empty="",e.QuickFix="quickfix",e.Refactor="refactor",e.RefactorExtract="refactor.extract",e.RefactorInline="refactor.inline",e.RefactorRewrite="refactor.rewrite",e.Source="source",e.SourceOrganizeImports="source.organizeImports",e.SourceFixAll="source.fixAll"}(z||(z={})),function(e){e.create=function(e,t){var r={diagnostics:e};return null!=t&&(r.only=t),r},e.is=function(e){var t=e;return ee.defined(t)&&ee.typedArray(t.diagnostics,f.is)&&(void 0===t.only||ee.typedArray(t.only,ee.string))}}(F||(F={})),function(e){e.create=function(e,t,r){var i={title:e};return g.is(t)?i.command=t:i.edit=t,void 0!==r&&(i.kind=r),i},e.is=function(e){var t=e;return t&&ee.string(t.title)&&(void 0===t.diagnostics||ee.typedArray(t.diagnostics,f.is))&&(void 0===t.kind||ee.string(t.kind))&&(void 0!==t.edit||void 0!==t.command)&&(void 0===t.command||g.is(t.command))&&(void 0===t.isPreferred||ee.boolean(t.isPreferred))&&(void 0===t.edit||w.is(t.edit))}}(X||(X={})),function(e){e.create=function(e,t){var r={range:e};return ee.defined(t)&&(r.data=t),r},e.is=function(e){var t=e;return ee.defined(t)&&n.is(t.range)&&(ee.undefined(t.command)||g.is(t.command))}}(Y||(Y={})),function(e){e.create=function(e,t){return{tabSize:e,insertSpaces:t}},e.is=function(e){var t=e;return ee.defined(t)&&ee.number(t.tabSize)&&ee.boolean(t.insertSpaces)}}(j||(j={})),function(e){e.create=function(e,t,r){return{range:e,target:t,data:r}},e.is=function(e){var t=e;return ee.defined(t)&&n.is(t.range)&&(ee.undefined(t.target)||ee.string(t.target))}}(W||(W={})),function(e){e.create=function(e,t){return{range:e,parent:t}},e.is=function(t){var r=t;return void 0!==r&&n.is(r.range)&&(void 0===r.parent||e.is(r.parent))}}(J||(J={}));var $,Z=["\n","\r\n","\r"];!function(e){function t(e,r){if(e.length<=1)return e;var i=e.length/2|0,n=e.slice(0,i),a=e.slice(i);t(n,r),t(a,r);for(var s=0,o=0,c=0;s<n.length&&o<a.length;){var d=r(n[s],a[o]);e[c++]=d<=0?n[s++]:a[o++]}for(;s<n.length;)e[c++]=n[s++];for(;o<a.length;)e[c++]=a[o++];return e}e.create=function(e,t,r,i){return new te(e,t,r,i)},e.is=function(e){var t=e;return!!(ee.defined(t)&&ee.string(t.uri)&&(ee.undefined(t.languageId)||ee.string(t.languageId))&&ee.number(t.lineCount)&&ee.func(t.getText)&&ee.func(t.positionAt)&&ee.func(t.offsetAt))},e.applyEdits=function(e,r){for(var i=e.getText(),n=t(r,(function(e,t){var r=e.range.start.line-t.range.start.line;return 0===r?e.range.start.character-t.range.start.character:r})),a=i.length,s=n.length-1;s>=0;s--){var o=n[s],c=e.offsetAt(o.range.start),d=e.offsetAt(o.range.end);if(!(d<=a))throw new Error("Overlapping edit");i=i.substring(0,c)+o.newText+i.substring(d,i.length),a=c}return i}}($||($={}));var ee,te=function(){function e(e,t,r,i){this._uri=e,this._languageId=t,this._version=r,this._content=i,this._lineOffsets=void 0}return Object.defineProperty(e.prototype,"uri",{get:function(){return this._uri},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"languageId",{get:function(){return this._languageId},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"version",{get:function(){return this._version},enumerable:!0,configurable:!0}),e.prototype.getText=function(e){if(e){var t=this.offsetAt(e.start),r=this.offsetAt(e.end);return this._content.substring(t,r)}return this._content},e.prototype.update=function(e,t){this._content=e.text,this._version=t,this._lineOffsets=void 0},e.prototype.getLineOffsets=function(){if(void 0===this._lineOffsets){for(var e=[],t=this._content,r=!0,i=0;i<t.length;i++){r&&(e.push(i),r=!1);var n=t.charAt(i);r="\r"===n||"\n"===n,"\r"===n&&i+1<t.length&&"\n"===t.charAt(i+1)&&i++}r&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},e.prototype.positionAt=function(e){e=Math.max(Math.min(e,this._content.length),0);var t=this.getLineOffsets(),r=0,n=t.length;if(0===n)return i.create(0,e);for(;r<n;){var a=Math.floor((r+n)/2);t[a]>e?n=a:r=a+1}var s=r-1;return i.create(s,e-t[s])},e.prototype.offsetAt=function(e){var t=this.getLineOffsets();if(e.line>=t.length)return this._content.length;if(e.line<0)return 0;var r=t[e.line],i=e.line+1<t.length?t[e.line+1]:this._content.length;return Math.max(Math.min(r+e.character,i),r)},Object.defineProperty(e.prototype,"lineCount",{get:function(){return this.getLineOffsets().length},enumerable:!0,configurable:!0}),e}();!function(e){var t=Object.prototype.toString;e.defined=function(e){return void 0!==e},e.undefined=function(e){return void 0===e},e.boolean=function(e){return!0===e||!1===e},e.string=function(e){return"[object String]"===t.call(e)},e.number=function(e){return"[object Number]"===t.call(e)},e.func=function(e){return"[object Function]"===t.call(e)},e.objectLiteral=function(e){return null!==e&&"object"==typeof e},e.typedArray=function(e,t){return Array.isArray(e)&&e.every(t)}}(ee||(ee={}))},32896:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(63078);t.CallHierarchyFeature=e=>class extends e{get callHierarchy(){return{onPrepare:e=>{this.connection.onRequest(i.Proposed.CallHierarchyPrepareRequest.type,((t,r)=>e(t,r,this.attachWorkDoneProgress(t),void 0)))},onIncomingCalls:e=>{const t=i.Proposed.CallHierarchyIncomingCallsRequest.type;this.connection.onRequest(t,((r,i)=>e(r,i,this.attachWorkDoneProgress(r),this.attachPartialResultProgress(t,r))))},onOutgoingCalls:e=>{const t=i.Proposed.CallHierarchyOutgoingCallsRequest.type;this.connection.onRequest(t,((r,i)=>e(r,i,this.attachWorkDoneProgress(r),this.attachPartialResultProgress(t,r))))}}}}},29127:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(63078),n=r(78278);t.ConfigurationFeature=e=>class extends e{getConfiguration(e){return e?n.string(e)?this._getConfiguration({section:e}):this._getConfiguration(e):this._getConfiguration({})}_getConfiguration(e){let t={items:Array.isArray(e)?e:[e]};return this.connection.sendRequest(i.ConfigurationRequest.type,t).then((t=>Array.isArray(e)?t:t[0]))}}},9602:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(57310),n=r(71017),a=r(57147),s=r(32081);function o(){return"win32"===process.platform}function c(e,t,r,i){const o=["var p = process;","p.on('message',function(m){","if(m.c==='e'){","p.exit(0);","}","else if(m.c==='rs'){","try{","var r=require.resolve(m.a);","p.send({c:'r',s:true,r:r});","}","catch(err){","p.send({c:'r',s:false});","}","}","});"].join("");return new Promise(((c,d)=>{let p=process.env,u=Object.create(null);Object.keys(p).forEach((e=>u[e]=p[e])),t&&a.existsSync(t)&&(u.NODE_PATH?u.NODE_PATH=t+n.delimiter+u.NODE_PATH:u.NODE_PATH=t,i&&i(`NODE_PATH value is: ${u.NODE_PATH}`)),u.ELECTRON_RUN_AS_NODE="1";try{let t=s.fork("",[],{cwd:r,env:u,execArgv:["-e",o]});if(void 0===t.pid)return void d(new Error(`Starting process to resolve node module  ${e} failed`));t.on("error",(e=>{d(e)})),t.on("message",(r=>{"r"===r.c&&(t.send({c:"e"}),r.s?c(r.r):d(new Error(`Failed to resolve module: ${e}`)))}));let i={c:"rs",a:e};t.send(i)}catch(e){d(e)}}))}function d(e){let t="npm";const r=Object.create(null);Object.keys(process.env).forEach((e=>r[e]=process.env[e])),r.NO_UPDATE_NOTIFIER="true";const i={encoding:"utf8",env:r};o()&&(t="npm.cmd",i.shell=!0);let a=()=>{};try{process.on("SIGPIPE",a);let r=s.spawnSync(t,["config","get","prefix"],i).stdout;if(!r)return void(e&&e("'npm config get prefix' didn't return a value."));let c=r.trim();return e&&e(`'npm config get prefix' value is: ${c}`),c.length>0?o()?n.join(c,"node_modules"):n.join(c,"lib","node_modules"):void 0}catch(e){return}finally{process.removeListener("SIGPIPE",a)}}var p;t.uriToFilePath=function(e){let t=i.parse(e);if("file:"!==t.protocol||!t.path)return;let r=t.path.split("/");for(var a=0,s=r.length;a<s;a++)r[a]=decodeURIComponent(r[a]);if("win32"===process.platform&&r.length>1){let e=r[0],t=r[1];0===e.length&&t.length>1&&":"===t[1]&&r.shift()}return n.normalize(r.join("/"))},t.resolve=c,t.resolveGlobalNodePath=d,t.resolveGlobalYarnPath=function(e){let t="yarn",r={encoding:"utf8"};o()&&(t="yarn.cmd",r.shell=!0);let i=()=>{};try{process.on("SIGPIPE",i);let a=s.spawnSync(t,["global","dir","--json"],r),o=a.stdout;if(!o)return void(e&&(e("'yarn global dir' didn't return a value."),a.stderr&&e(a.stderr)));let c=o.trim().split(/\r?\n/);for(let e of c)try{let t=JSON.parse(e);if("log"===t.type)return n.join(t.data,"node_modules")}catch(e){}return}catch(e){return}finally{process.removeListener("SIGPIPE",i)}},function(e){let t;function r(){return void 0!==t||(t=!("win32"===process.platform||a.existsSync(__filename.toUpperCase())&&a.existsSync(__filename.toLowerCase()))),t}e.isCaseSensitive=r,e.isParent=function(e,t){return r()?0===n.normalize(t).indexOf(n.normalize(e)):0===n.normalize(t).toLowerCase().indexOf(n.normalize(e).toLowerCase())}}(p=t.FileSystem||(t.FileSystem={})),t.resolveModulePath=function(e,t,r,i){return r?(n.isAbsolute(r)||(r=n.join(e,r)),c(t,r,r,i).then((e=>p.isParent(r,e)?e:Promise.reject(new Error(`Failed to load ${t} from node path location.`)))).then(void 0,(r=>c(t,d(i),e,i)))):c(t,d(i),e,i)}},47322:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(63078);t.Event=i.Event;const n=r(29127),a=r(73122),s=r(3547),o=r(78278),c=r(52818);!function(e){for(var r in e)t.hasOwnProperty(r)||(t[r]=e[r])}(r(63078));const d=r(9602);var p;(p=t.Files||(t.Files={})).uriToFilePath=d.uriToFilePath,p.resolveGlobalNodePath=d.resolveGlobalNodePath,p.resolveGlobalYarnPath=d.resolveGlobalYarnPath,p.resolve=d.resolve,p.resolveModulePath=d.resolveModulePath;let u,m=!1;function h(e){if(null!==e)return e}!function(){const e="--clientProcessId";function t(e){try{let t=parseInt(e);isNaN(t)||(u=setInterval((()=>{try{process.kill(t,0)}catch(e){process.exit(m?0:1)}}),3e3))}catch(e){}}for(let r=2;r<process.argv.length;r++){let i=process.argv[r];if(i===e&&r+1<process.argv.length)return void t(process.argv[r+1]);{let r=i.split("=");r[0]===e&&t(r[1])}}}(),t.TextDocuments=class{constructor(e){this._documents=Object.create(null),this._configuration=e,this._onDidChangeContent=new i.Emitter,this._onDidOpen=new i.Emitter,this._onDidClose=new i.Emitter,this._onDidSave=new i.Emitter,this._onWillSave=new i.Emitter}get onDidChangeContent(){return this._onDidChangeContent.event}get onDidOpen(){return this._onDidOpen.event}get onWillSave(){return this._onWillSave.event}onWillSaveWaitUntil(e){this._willSaveWaitUntil=e}get onDidSave(){return this._onDidSave.event}get onDidClose(){return this._onDidClose.event}get(e){return this._documents[e]}all(){return Object.keys(this._documents).map((e=>this._documents[e]))}keys(){return Object.keys(this._documents)}listen(e){e.__textDocumentSync=i.TextDocumentSyncKind.Full,e.onDidOpenTextDocument((e=>{let t=e.textDocument,r=this._configuration.create(t.uri,t.languageId,t.version,t.text);this._documents[t.uri]=r;let i=Object.freeze({document:r});this._onDidOpen.fire(i),this._onDidChangeContent.fire(i)})),e.onDidChangeTextDocument((e=>{let t=e.textDocument,r=e.contentChanges;if(0===r.length)return;let i=this._documents[t.uri];const{version:n}=t;if(null==n)throw new Error(`Received document change event for ${t.uri} without valid version identifier`);i=this._configuration.update(i,r,n),this._documents[t.uri]=i,this._onDidChangeContent.fire(Object.freeze({document:i}))})),e.onDidCloseTextDocument((e=>{let t=this._documents[e.textDocument.uri];t&&(delete this._documents[e.textDocument.uri],this._onDidClose.fire(Object.freeze({document:t})))})),e.onWillSaveTextDocument((e=>{let t=this._documents[e.textDocument.uri];t&&this._onWillSave.fire(Object.freeze({document:t,reason:e.reason}))})),e.onWillSaveTextDocumentWaitUntil(((e,t)=>{let r=this._documents[e.textDocument.uri];return r&&this._willSaveWaitUntil?this._willSaveWaitUntil(Object.freeze({document:r,reason:e.reason}),t):[]})),e.onDidSaveTextDocument((e=>{let t=this._documents[e.textDocument.uri];t&&this._onDidSave.fire(Object.freeze({document:t}))}))}},t.ErrorMessageTracker=class{constructor(){this._messages=Object.create(null)}add(e){let t=this._messages[e];t||(t=0),t++,this._messages[e]=t}sendErrors(e){Object.keys(this._messages).forEach((t=>{e.window.showErrorMessage(t)}))}};class l{constructor(){}rawAttach(e){this._rawConnection=e}attach(e){this._connection=e}get connection(){if(!this._connection)throw new Error("Remote is not attached to a connection yet.");return this._connection}fillServerCapabilities(e){}initialize(e){}error(e){this.send(i.MessageType.Error,e)}warn(e){this.send(i.MessageType.Warning,e)}info(e){this.send(i.MessageType.Info,e)}log(e){this.send(i.MessageType.Log,e)}send(e,t){this._rawConnection&&this._rawConnection.sendNotification(i.LogMessageNotification.type,{type:e,message:t})}}const f=s.ProgressFeature(class{constructor(){}attach(e){this._connection=e}get connection(){if(!this._connection)throw new Error("Remote is not attached to a connection yet.");return this._connection}initialize(e){}fillServerCapabilities(e){}showErrorMessage(e,...t){let r={type:i.MessageType.Error,message:e,actions:t};return this._connection.sendRequest(i.ShowMessageRequest.type,r).then(h)}showWarningMessage(e,...t){let r={type:i.MessageType.Warning,message:e,actions:t};return this._connection.sendRequest(i.ShowMessageRequest.type,r).then(h)}showInformationMessage(e,...t){let r={type:i.MessageType.Info,message:e,actions:t};return this._connection.sendRequest(i.ShowMessageRequest.type,r).then(h)}});(t.BulkRegistration||(t.BulkRegistration={})).create=function(){return new g};class g{constructor(){this._registrations=[],this._registered=new Set}add(e,t){const r=o.string(e)?e:e.method;if(this._registered.has(r))throw new Error(`${r} is already added to this registration`);const i=c.generateUuid();this._registrations.push({id:i,method:r,registerOptions:t||{}}),this._registered.add(r)}asRegistrationParams(){return{registrations:this._registrations}}}(t.BulkUnregistration||(t.BulkUnregistration={})).create=function(){return new R(void 0,[])};class R{constructor(e,t){this._connection=e,this._unregistrations=new Map,t.forEach((e=>{this._unregistrations.set(e.method,e)}))}get isAttached(){return!!this._connection}attach(e){this._connection=e}add(e){this._unregistrations.set(e.method,e)}dispose(){let e=[];for(let t of this._unregistrations.values())e.push(t);let t={unregisterations:e};this._connection.sendRequest(i.UnregistrationRequest.type,t).then(void 0,(e=>{this._connection.console.info("Bulk unregistration failed.")}))}disposeSingle(e){const t=o.string(e)?e:e.method,r=this._unregistrations.get(t);if(!r)return!1;let n={unregisterations:[r]};return this._connection.sendRequest(i.UnregistrationRequest.type,n).then((()=>{this._unregistrations.delete(t)}),(e=>{this._connection.console.info(`Unregistering request handler for ${r.id} failed.`)})),!0}}class A{attach(e){this._connection=e}get connection(){if(!this._connection)throw new Error("Remote is not attached to a connection yet.");return this._connection}initialize(e){}fillServerCapabilities(e){}register(e,t,r){return e instanceof g?this.registerMany(e):e instanceof R?this.registerSingle1(e,t,r):this.registerSingle2(e,t)}registerSingle1(e,t,r){const n=o.string(t)?t:t.method,a=c.generateUuid();let s={registrations:[{id:a,method:n,registerOptions:r||{}}]};return e.isAttached||e.attach(this._connection),this._connection.sendRequest(i.RegistrationRequest.type,s).then((t=>(e.add({id:a,method:n}),e)),(e=>(this.connection.console.info(`Registering request handler for ${n} failed.`),Promise.reject(e))))}registerSingle2(e,t){const r=o.string(e)?e:e.method,n=c.generateUuid();let a={registrations:[{id:n,method:r,registerOptions:t||{}}]};return this._connection.sendRequest(i.RegistrationRequest.type,a).then((e=>i.Disposable.create((()=>{this.unregisterSingle(n,r)}))),(e=>(this.connection.console.info(`Registering request handler for ${r} failed.`),Promise.reject(e))))}unregisterSingle(e,t){let r={unregisterations:[{id:e,method:t}]};return this._connection.sendRequest(i.UnregistrationRequest.type,r).then(void 0,(t=>{this.connection.console.info(`Unregistering request handler for ${e} failed.`)}))}registerMany(e){let t=e.asRegistrationParams();return this._connection.sendRequest(i.RegistrationRequest.type,t).then((()=>new R(this._connection,t.registrations.map((e=>({id:e.id,method:e.method}))))),(e=>(this.connection.console.info("Bulk registration failed."),Promise.reject(e))))}}const b=a.WorkspaceFoldersFeature(n.ConfigurationFeature(class{constructor(){}attach(e){this._connection=e}get connection(){if(!this._connection)throw new Error("Remote is not attached to a connection yet.");return this._connection}initialize(e){}fillServerCapabilities(e){}applyEdit(e){let t=(r=e)&&r.edit?e:{edit:e};var r;return this._connection.sendRequest(i.ApplyWorkspaceEditRequest.type,t)}}));class T{constructor(){}attach(e){this._connection=e}get connection(){if(!this._connection)throw new Error("Remote is not attached to a connection yet.");return this._connection}initialize(e){}fillServerCapabilities(e){}logEvent(e){this._connection.sendNotification(i.TelemetryEventNotification.type,e)}}class E{constructor(){this._trace=i.Trace.Off}attach(e){this._connection=e}get connection(){if(!this._connection)throw new Error("Remote is not attached to a connection yet.");return this._connection}initialize(e){}fillServerCapabilities(e){}set trace(e){this._trace=e}log(e,t){this._trace!==i.Trace.Off&&this._connection.sendNotification(i.LogTraceNotification.type,{message:e,verbose:this._trace===i.Trace.Verbose?t:void 0})}}class w{constructor(){}attach(e){this._connection=e}get connection(){if(!this._connection)throw new Error("Remote is not attached to a connection yet.");return this._connection}initialize(e){}fillServerCapabilities(e){}attachWorkDoneProgress(e){return s.attachWorkDone(this.connection,e)}attachPartialResultProgress(e,t){return s.attachPartialResult(this.connection,t)}}function x(e,t){return function(r){return t(e(r))}}function C(e,t){return function(r){return t(e(r))}}function S(e,t){return function(r){return t(e(r))}}function v(e,t){return function(r){return t(e(r))}}function I(e,t){return function(r){return t(e(r))}}function y(e,t){return function(r){return t(e(r))}}function N(e,t){return function(r){return t(e(r))}}t.LanguagesImpl=w,t.combineConsoleFeatures=x,t.combineTelemetryFeatures=C,t.combineTracerFeatures=S,t.combineClientFeatures=v,t.combineWindowFeatures=I,t.combineWorkspaceFeatures=y,t.combineLanguagesFeatures=N,t.combineFeatures=function(e,t){function r(e,t,r){return e&&t?r(e,t):e||t}return{__brand:"features",console:r(e.console,t.console,x),tracer:r(e.tracer,t.tracer,S),telemetry:r(e.telemetry,t.telemetry,C),client:r(e.client,t.client,v),window:r(e.window,t.window,I),workspace:r(e.workspace,t.workspace,y)}},t.createConnection=function(e,t,r,n){let a,c,d,p;return void 0!==e&&"features"===e.__brand&&(a=e,e=t,t=r,r=n),i.ConnectionStrategy.is(e)?p=e:(c=e,d=t,p=r),function(e,t,r,n){if(!e&&!t&&process.argv.length>2){let r,n,s=process.argv.slice(2);for(let o=0;o<s.length;o++){let c=s[o];if("--node-ipc"===c){e=new i.IPCMessageReader(process),t=new i.IPCMessageWriter(process);break}if("--stdio"===c){e=process.stdin,t=process.stdout;break}if("--socket"===c){r=parseInt(s[o+1]);break}if("--pipe"===c){n=s[o+1];break}var a=c.split("=");if("--socket"===a[0]){r=parseInt(a[1]);break}if("--pipe"===a[0]){n=a[1];break}}if(r){let n=i.createServerSocketTransport(r);e=n[0],t=n[1]}else if(n){let r=i.createServerPipeTransport(n);e=r[0],t=r[1]}}var c="Use arguments of createConnection or set command line parameters: '--node-ipc', '--stdio' or '--socket={number}'";if(!e)throw new Error("Connection input stream is not set. "+c);if(!t)throw new Error("Connection output stream is not set. "+c);if(o.func(e.read)&&o.func(e.on)){let t=e;t.on("end",(()=>{process.exit(m?0:1)})),t.on("close",(()=>{process.exit(m?0:1)}))}const d=n&&n.console?new(n.console(l)):new l,p=i.createProtocolConnection(e,t,d,r);d.rawAttach(p);const h=n&&n.tracer?new(n.tracer(E)):new E,g=n&&n.telemetry?new(n.telemetry(T)):new T,R=n&&n.client?new(n.client(A)):new A,x=n&&n.window?new(n.window(f)):new f,C=n&&n.workspace?new(n.workspace(b)):new b,S=n&&n.languages?new(n.languages(w)):new w,v=[d,h,g,R,x,C,S];function I(e){return e instanceof Promise?e:o.thenable(e)?new Promise(((t,r)=>{e.then((e=>t(e)),(e=>r(e)))})):Promise.resolve(e)}let y,N,_,L={listen:()=>p.listen(),sendRequest:(e,...t)=>p.sendRequest(o.string(e)?e:e.method,...t),onRequest:(e,t)=>p.onRequest(e,t),sendNotification:(e,t)=>{const r=o.string(e)?e:e.method;1===arguments.length?p.sendNotification(r):p.sendNotification(r,t)},onNotification:(e,t)=>p.onNotification(e,t),onProgress:p.onProgress,sendProgress:p.sendProgress,onInitialize:e=>N=e,onInitialized:e=>p.onNotification(i.InitializedNotification.type,e),onShutdown:e=>y=e,onExit:e=>_=e,get console(){return d},get telemetry(){return g},get tracer(){return h},get client(){return R},get window(){return x},get workspace(){return C},get languages(){return S},onDidChangeConfiguration:e=>p.onNotification(i.DidChangeConfigurationNotification.type,e),onDidChangeWatchedFiles:e=>p.onNotification(i.DidChangeWatchedFilesNotification.type,e),__textDocumentSync:void 0,onDidOpenTextDocument:e=>p.onNotification(i.DidOpenTextDocumentNotification.type,e),onDidChangeTextDocument:e=>p.onNotification(i.DidChangeTextDocumentNotification.type,e),onDidCloseTextDocument:e=>p.onNotification(i.DidCloseTextDocumentNotification.type,e),onWillSaveTextDocument:e=>p.onNotification(i.WillSaveTextDocumentNotification.type,e),onWillSaveTextDocumentWaitUntil:e=>p.onRequest(i.WillSaveTextDocumentWaitUntilRequest.type,e),onDidSaveTextDocument:e=>p.onNotification(i.DidSaveTextDocumentNotification.type,e),sendDiagnostics:e=>p.sendNotification(i.PublishDiagnosticsNotification.type,e),onHover:e=>p.onRequest(i.HoverRequest.type,((t,r)=>e(t,r,s.attachWorkDone(p,t),void 0))),onCompletion:e=>p.onRequest(i.CompletionRequest.type,((t,r)=>e(t,r,s.attachWorkDone(p,t),s.attachPartialResult(p,t)))),onCompletionResolve:e=>p.onRequest(i.CompletionResolveRequest.type,e),onSignatureHelp:e=>p.onRequest(i.SignatureHelpRequest.type,((t,r)=>e(t,r,s.attachWorkDone(p,t),void 0))),onDeclaration:e=>p.onRequest(i.DeclarationRequest.type,((t,r)=>e(t,r,s.attachWorkDone(p,t),s.attachPartialResult(p,t)))),onDefinition:e=>p.onRequest(i.DefinitionRequest.type,((t,r)=>e(t,r,s.attachWorkDone(p,t),s.attachPartialResult(p,t)))),onTypeDefinition:e=>p.onRequest(i.TypeDefinitionRequest.type,((t,r)=>e(t,r,s.attachWorkDone(p,t),s.attachPartialResult(p,t)))),onImplementation:e=>p.onRequest(i.ImplementationRequest.type,((t,r)=>e(t,r,s.attachWorkDone(p,t),s.attachPartialResult(p,t)))),onReferences:e=>p.onRequest(i.ReferencesRequest.type,((t,r)=>e(t,r,s.attachWorkDone(p,t),s.attachPartialResult(p,t)))),onDocumentHighlight:e=>p.onRequest(i.DocumentHighlightRequest.type,((t,r)=>e(t,r,s.attachWorkDone(p,t),s.attachPartialResult(p,t)))),onDocumentSymbol:e=>p.onRequest(i.DocumentSymbolRequest.type,((t,r)=>e(t,r,s.attachWorkDone(p,t),s.attachPartialResult(p,t)))),onWorkspaceSymbol:e=>p.onRequest(i.WorkspaceSymbolRequest.type,((t,r)=>e(t,r,s.attachWorkDone(p,t),s.attachPartialResult(p,t)))),onCodeAction:e=>p.onRequest(i.CodeActionRequest.type,((t,r)=>e(t,r,s.attachWorkDone(p,t),s.attachPartialResult(p,t)))),onCodeLens:e=>p.onRequest(i.CodeLensRequest.type,((t,r)=>e(t,r,s.attachWorkDone(p,t),s.attachPartialResult(p,t)))),onCodeLensResolve:e=>p.onRequest(i.CodeLensResolveRequest.type,((t,r)=>e(t,r))),onDocumentFormatting:e=>p.onRequest(i.DocumentFormattingRequest.type,((t,r)=>e(t,r,s.attachWorkDone(p,t),void 0))),onDocumentRangeFormatting:e=>p.onRequest(i.DocumentRangeFormattingRequest.type,((t,r)=>e(t,r,s.attachWorkDone(p,t),void 0))),onDocumentOnTypeFormatting:e=>p.onRequest(i.DocumentOnTypeFormattingRequest.type,((t,r)=>e(t,r))),onRenameRequest:e=>p.onRequest(i.RenameRequest.type,((t,r)=>e(t,r,s.attachWorkDone(p,t),void 0))),onPrepareRename:e=>p.onRequest(i.PrepareRenameRequest.type,((t,r)=>e(t,r))),onDocumentLinks:e=>p.onRequest(i.DocumentLinkRequest.type,((t,r)=>e(t,r,s.attachWorkDone(p,t),s.attachPartialResult(p,t)))),onDocumentLinkResolve:e=>p.onRequest(i.DocumentLinkResolveRequest.type,((t,r)=>e(t,r))),onDocumentColor:e=>p.onRequest(i.DocumentColorRequest.type,((t,r)=>e(t,r,s.attachWorkDone(p,t),s.attachPartialResult(p,t)))),onColorPresentation:e=>p.onRequest(i.ColorPresentationRequest.type,((t,r)=>e(t,r,s.attachWorkDone(p,t),s.attachPartialResult(p,t)))),onFoldingRanges:e=>p.onRequest(i.FoldingRangeRequest.type,((t,r)=>e(t,r,s.attachWorkDone(p,t),s.attachPartialResult(p,t)))),onSelectionRanges:e=>p.onRequest(i.SelectionRangeRequest.type,((t,r)=>e(t,r,s.attachWorkDone(p,t),s.attachPartialResult(p,t)))),onExecuteCommand:e=>p.onRequest(i.ExecuteCommandRequest.type,((t,r)=>e(t,r,s.attachWorkDone(p,t),void 0))),dispose:()=>p.dispose()};for(let e of v)e.attach(L);return p.onRequest(i.InitializeRequest.type,(e=>{const t=e.processId;o.number(t)&&void 0===u&&setInterval((()=>{try{process.kill(t,0)}catch(e){process.exit(m?0:1)}}),3e3),o.string(e.trace)&&(h.trace=i.Trace.fromString(e.trace));for(let t of v)t.initialize(e.capabilities);if(N)return I(N(e,(new i.CancellationTokenSource).token,s.attachWorkDone(p,e),void 0)).then((e=>{if(e instanceof i.ResponseError)return e;let t=e;t||(t={capabilities:{}});let r=t.capabilities;r||(r={},t.capabilities=r),void 0===r.textDocumentSync||null===r.textDocumentSync?r.textDocumentSync=o.number(L.__textDocumentSync)?L.__textDocumentSync:i.TextDocumentSyncKind.None:o.number(r.textDocumentSync)||o.number(r.textDocumentSync.change)||(r.textDocumentSync.change=o.number(L.__textDocumentSync)?L.__textDocumentSync:i.TextDocumentSyncKind.None);for(let e of v)e.fillServerCapabilities(r);return t}));{let e={capabilities:{textDocumentSync:i.TextDocumentSyncKind.None}};for(let t of v)t.fillServerCapabilities(e.capabilities);return e}})),p.onRequest(i.ShutdownRequest.type,(()=>(m=!0,y?y((new i.CancellationTokenSource).token):void 0))),p.onNotification(i.ExitNotification.type,(()=>{try{_&&_()}finally{m?process.exit(0):process.exit(1)}})),p.onNotification(i.SetTraceNotification.type,(e=>{h.trace=i.Trace.fromString(e.value)})),L}(c,d,p,a)};const _=r(32896),L=r(75540);var D;(D=t.ProposedFeatures||(t.ProposedFeatures={})).all={__brand:"features",languages:N(_.CallHierarchyFeature,L.SemanticTokensFeature)},D.SemanticTokensBuilder=L.SemanticTokensBuilder},3547:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(63078),n=r(52818);class a{constructor(e,t){this._connection=e,this._token=t,a.Instances.set(this._token,this),this._source=new i.CancellationTokenSource}get token(){return this._source.token}begin(e,t,r,n){let a={kind:"begin",title:e,percentage:t,message:r,cancellable:n};this._connection.sendProgress(i.WorkDoneProgress.type,this._token,a)}report(e,t){let r={kind:"report"};"number"==typeof e?(r.percentage=e,void 0!==t&&(r.message=t)):r.message=e,this._connection.sendProgress(i.WorkDoneProgress.type,this._token,r)}done(){a.Instances.delete(this._token),this._source.dispose(),this._connection.sendProgress(i.WorkDoneProgress.type,this._token,{kind:"end"})}cancel(){this._source.cancel()}}a.Instances=new Map;class s{constructor(){this._source=new i.CancellationTokenSource}get token(){return this._source.token}begin(){}report(){}done(){}}var o;t.attachWorkDone=function(e,t){if(void 0===t||void 0===t.workDoneToken)return new s;const r=t.workDoneToken;return delete t.workDoneToken,new a(e,r)},t.ProgressFeature=e=>class extends e{initialize(e){var t;!0===(null===(t=null==e?void 0:e.window)||void 0===t?void 0:t.workDoneProgress)&&(this._progressSupported=!0,this.connection.onNotification(i.WorkDoneProgressCancelNotification.type,(e=>{let t=a.Instances.get(e.token);void 0!==t&&t.cancel()})))}attachWorkDoneProgress(e){return void 0===e?new s:new a(this.connection,e)}createWorkDoneProgress(){if(this._progressSupported){const e=n.generateUuid();return this.connection.sendRequest(i.WorkDoneProgressCreateRequest.type,{token:e}).then((()=>new a(this.connection,e)))}return Promise.resolve(new s)}},function(e){e.type=new i.ProgressType}(o||(o={}));class c{constructor(e,t){this._connection=e,this._token=t}report(e){this._connection.sendProgress(o.type,this._token,e)}}t.attachPartialResult=function(e,t){if(void 0===t||void 0===t.partialResultToken)return;const r=t.partialResultToken;return delete t.partialResultToken,new c(e,r)}},75540:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(63078);t.SemanticTokensFeature=e=>class extends e{get semanticTokens(){return{on:e=>{const t=i.Proposed.SemanticTokensRequest.type;this.connection.onRequest(t,((r,i)=>e(r,i,this.attachWorkDoneProgress(r),this.attachPartialResultProgress(t,r))))},onEdits:e=>{const t=i.Proposed.SemanticTokensEditsRequest.type;this.connection.onRequest(t,((r,i)=>e(r,i,this.attachWorkDoneProgress(r),this.attachPartialResultProgress(t,r))))},onRange:e=>{const t=i.Proposed.SemanticTokensRangeRequest.type;this.connection.onRequest(t,((r,i)=>e(r,i,this.attachWorkDoneProgress(r),this.attachPartialResultProgress(t,r))))}}}},t.SemanticTokensBuilder=class{constructor(){this._prevData=void 0,this.initialize()}initialize(){this._id=Date.now(),this._prevLine=0,this._prevChar=0,this._data=[],this._dataLen=0}push(e,t,r,i,n){let a=e,s=t;this._dataLen>0&&(a-=this._prevLine,0===a&&(s-=this._prevChar)),this._data[this._dataLen++]=a,this._data[this._dataLen++]=s,this._data[this._dataLen++]=r,this._data[this._dataLen++]=i,this._data[this._dataLen++]=n,this._prevLine=e,this._prevChar=t}get id(){return this._id.toString()}previousResult(e){this.id===e&&(this._prevData=this._data),this.initialize()}build(){return this._prevData=void 0,{resultId:this.id,data:this._data}}canBuildEdits(){return void 0!==this._prevData}buildEdits(){if(void 0!==this._prevData){const e=this._prevData.length,t=this._data.length;let r=0;for(;r<t&&r<e&&this._prevData[r]===this._data[r];)r++;if(r<t&&r<e){let i=0;for(;i<t&&i<e&&this._prevData[e-1-i]===this._data[t-1-i];)i++;const n=this._data.slice(r,t-i);return{resultId:this.id,edits:[{start:r,deleteCount:e-i-r,data:n}]}}return r<t?{resultId:this.id,edits:[{start:r,deleteCount:0,data:this._data.slice(r)}]}:r<e?{resultId:this.id,edits:[{start:r,deleteCount:e-r}]}:{resultId:this.id,edits:[]}}return this.build()}}},78278:(e,t)=>{"use strict";function r(e){return"string"==typeof e||e instanceof String}function i(e){return"function"==typeof e}function n(e){return Array.isArray(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.boolean=function(e){return!0===e||!1===e},t.string=r,t.number=function(e){return"number"==typeof e||e instanceof Number},t.error=function(e){return e instanceof Error},t.func=i,t.array=n,t.stringArray=function(e){return n(e)&&e.every((e=>r(e)))},t.typedArray=function(e,t){return Array.isArray(e)&&e.every(t)},t.thenable=function(e){return e&&i(e.then)}},52818:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});class r{constructor(e){this._value=e}asHex(){return this._value}equals(e){return this.asHex()===e.asHex()}}class i extends r{constructor(){super([i._randomHex(),i._randomHex(),i._randomHex(),i._randomHex(),i._randomHex(),i._randomHex(),i._randomHex(),i._randomHex(),"-",i._randomHex(),i._randomHex(),i._randomHex(),i._randomHex(),"-","4",i._randomHex(),i._randomHex(),i._randomHex(),"-",i._oneOf(i._timeHighBits),i._randomHex(),i._randomHex(),i._randomHex(),"-",i._randomHex(),i._randomHex(),i._randomHex(),i._randomHex(),i._randomHex(),i._randomHex(),i._randomHex(),i._randomHex(),i._randomHex(),i._randomHex(),i._randomHex(),i._randomHex()].join(""))}static _oneOf(e){return e[Math.floor(e.length*Math.random())]}static _randomHex(){return i._oneOf(i._chars)}}function n(){return new i}i._chars=["0","1","2","3","4","5","6","6","7","8","9","a","b","c","d","e","f"],i._timeHighBits=["8","9","a","b"],t.empty=new r("00000000-0000-0000-0000-000000000000"),t.v4=n;const a=/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;function s(e){return a.test(e)}t.isUUID=s,t.parse=function(e){if(!s(e))throw new Error("invalid uuid");return new r(e)},t.generateUuid=function(){return n().asHex()}},73122:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(63078);t.WorkspaceFoldersFeature=e=>class extends e{initialize(e){let t=e.workspace;t&&t.workspaceFolders&&(this._onDidChangeWorkspaceFolders=new i.Emitter,this.connection.onNotification(i.DidChangeWorkspaceFoldersNotification.type,(e=>{this._onDidChangeWorkspaceFolders.fire(e.event)})))}getWorkspaceFolders(){return this.connection.sendRequest(i.WorkspaceFoldersRequest.type)}get onDidChangeWorkspaceFolders(){if(!this._onDidChangeWorkspaceFolders)throw new Error("Client doesn't support sending workspace folder change events.");return this._unregistration||(this._unregistration=this.connection.client.register(i.DidChangeWorkspaceFoldersNotification.type)),this._onDidChangeWorkspaceFolders.event}}},53939:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.config=t.loadMessageBundle=t.localize=t.format=t.setPseudo=t.isPseudo=t.isDefined=t.BundleFormat=t.MessageFormat=void 0;var i,n,a,s=r(29124);function o(e){return void 0!==e}function c(e,r){return t.isPseudo&&(e="［"+e.replace(/[aouei]/g,"$&$&")+"］"),0===r.length?e:e.replace(/\{(\d+)\}/g,(function(e,t){var i=t[0],n=r[i],a=e;return"string"==typeof n?a=n:"number"!=typeof n&&"boolean"!=typeof n&&null!=n||(a=String(n)),a}))}(a=t.MessageFormat||(t.MessageFormat={})).file="file",a.bundle="bundle",a.both="both",(n=t.BundleFormat||(t.BundleFormat={})).standalone="standalone",n.languagePack="languagePack",function(e){e.is=function(e){var t=e;return t&&o(t.key)&&o(t.comment)}}(i||(i={})),t.isDefined=o,t.isPseudo=!1,t.setPseudo=function(e){t.isPseudo=e},t.format=c,t.localize=function(e,t){for(var r=[],i=2;i<arguments.length;i++)r[i-2]=arguments[i];return c(t,r)},t.loadMessageBundle=function(e){return s.default().loadMessageBundle(e)},t.config=function(e){return s.default().config(e)}},29124:(e,t)=>{"use strict";var r;function i(){if(void 0===r)throw new Error("No runtime abstraction layer installed");return r}Object.defineProperty(t,"__esModule",{value:!0}),function(e){e.install=function(e){if(void 0===e)throw new Error("No runtime abstraction layer provided");r=e}}(i||(i={})),t.default=i},18136:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.config=t.loadMessageBundle=void 0;var i=r(71017),n=r(57147),a=r(29124),s=r(53939),o=r(53939);Object.defineProperty(t,"MessageFormat",{enumerable:!0,get:function(){return o.MessageFormat}}),Object.defineProperty(t,"BundleFormat",{enumerable:!0,get:function(){return o.BundleFormat}});var c,d,p=Object.prototype.toString;function u(e){return"[object Number]"===p.call(e)}function m(e){return"[object String]"===p.call(e)}function h(e){return JSON.parse(n.readFileSync(e,"utf8"))}function l(e){return function(t,r){for(var i=[],n=2;n<arguments.length;n++)i[n-2]=arguments[n];return u(t)?t>=e.length?void console.error("Broken localize call found. Index out of bounds. Stacktrace is\n: "+new Error("").stack):s.format(e[t],i):m(r)?(console.warn("Message "+r+" didn't get externalized correctly."),s.format(r,i)):void console.error("Broken localize call found. Stacktrace is\n: "+new Error("").stack)}}function f(e,t){return c[e]=t,t}function g(e){try{return function(e){var t=h(i.join(e,"nls.metadata.json")),r=Object.create(null);for(var n in t){var a=t[n];r[n]=a.messages}return r}(e)}catch(e){return void console.log("Generating default bundle from meta data failed.",e)}}function R(e,t){var r;if(!0===d.languagePackSupport&&void 0!==d.cacheRoot&&void 0!==d.languagePackId&&void 0!==d.translationsConfigFile&&void 0!==d.translationsConfig)try{r=function(e,t){var r,a,s,o=i.join(d.cacheRoot,e.id+"-"+e.hash+".json"),c=!1,p=!1;try{return r=JSON.parse(n.readFileSync(o,{encoding:"utf8",flag:"r"})),a=o,s=new Date,n.utimes(a,s,s,(function(){})),r}catch(e){if("ENOENT"===e.code)p=!0;else{if(!(e instanceof SyntaxError))throw e;console.log("Syntax error parsing message bundle: "+e.message+"."),n.unlink(o,(function(e){e&&console.error("Deleting corrupted bundle "+o+" failed.")})),c=!0}}if(r=function(e,t){var r=d.translationsConfig[e.id];if(r){var n=h(r).contents,a=h(i.join(t,"nls.metadata.json")),s=Object.create(null);for(var o in a){var c=a[o],p=n[e.outDir+"/"+o];if(p){for(var u=[],l=0;l<c.keys.length;l++){var f=c.keys[l],g=p[m(f)?f:f.key];void 0===g&&(g=c.messages[l]),u.push(g)}s[o]=u}else s[o]=c.messages}return s}}(e,t),!r||c)return r;if(p)try{n.writeFileSync(o,JSON.stringify(r),{encoding:"utf8",flag:"wx"})}catch(e){if("EEXIST"===e.code)return r;throw e}return r}(e,t)}catch(e){console.log("Load or create bundle failed ",e)}if(!r){if(d.languagePackSupport)return g(t);var a=function(e){for(var t=d.language;t;){var r=i.join(e,"nls.bundle."+t+".json");if(n.existsSync(r))return r;var a=t.lastIndexOf("-");t=a>0?t.substring(0,a):void 0}if(void 0===t&&(r=i.join(e,"nls.bundle.json"),n.existsSync(r)))return r}(t);if(a)try{return h(a)}catch(e){console.log("Loading in the box message bundle failed.",e)}r=g(t)}return r}function A(e){if(!e)return s.localize;var t=i.extname(e);if(t&&(e=e.substr(0,e.length-t.length)),d.messageFormat===s.MessageFormat.both||d.messageFormat===s.MessageFormat.bundle){var r=function(e){for(var t,r=i.dirname(e);t=i.join(r,"nls.metadata.header.json"),!n.existsSync(t);){var a=i.dirname(r);if(a===r){t=void 0;break}r=a}return t}(e);if(r){var a=i.dirname(r),o=c[a];if(void 0===o)try{var p=JSON.parse(n.readFileSync(r,"utf8"));try{var u=R(p,a);o=f(a,u?{header:p,nlsBundle:u}:null)}catch(e){console.error("Failed to load nls bundle",e),o=f(a,null)}}catch(e){console.error("Failed to read header file",e),o=f(a,null)}if(o){var m=e.substr(a.length+1).replace(/\\/g,"/"),g=o.nlsBundle[m];return void 0===g?(console.error("Messages for file "+e+" not found. See console for details."),function(){return"Messages not found."}):l(g)}}}if(d.messageFormat===s.MessageFormat.both||d.messageFormat===s.MessageFormat.file)try{var A=h(function(e){var t;if(d.cacheLanguageResolution&&t);else{if(s.isPseudo||!d.language)t=".nls.json";else for(var r=d.language;r;){var i=".nls."+r+".json";if(n.existsSync(e+i)){t=i;break}var a=r.lastIndexOf("-");a>0?r=r.substring(0,a):(t=".nls.json",r=null)}d.cacheLanguageResolution}return e+t}(e));return Array.isArray(A)?l(A):s.isDefined(A.messages)&&s.isDefined(A.keys)?l(A.messages):(console.error("String bundle '"+e+"' uses an unsupported format."),function(){return"File bundle has unsupported format. See console for details"})}catch(e){"ENOENT"!==e.code&&console.error("Failed to load single file bundle",e)}return console.error("Failed to load message bundle for file "+e),function(){return"Failed to load message bundle. See console for details."}}function b(e){return e&&(m(e.locale)&&(d.locale=e.locale.toLowerCase(),d.language=d.locale,c=Object.create(null)),void 0!==e.messageFormat&&(d.messageFormat=e.messageFormat),e.bundleFormat===s.BundleFormat.standalone&&!0===d.languagePackSupport&&(d.languagePackSupport=!1)),s.setPseudo("pseudo"===d.locale),A}!function(){if(d={locale:void 0,language:void 0,languagePackSupport:!1,cacheLanguageResolution:!0,messageFormat:s.MessageFormat.bundle},m(process.env.VSCODE_NLS_CONFIG))try{var e=JSON.parse(process.env.VSCODE_NLS_CONFIG),t=void 0;if(e.availableLanguages){var r=e.availableLanguages["*"];m(r)&&(t=r)}if(m(e.locale)&&(d.locale=e.locale.toLowerCase()),void 0===t?d.language=d.locale:"en"!==t&&(d.language=t),function(e){return!0===e||!1===e}(e._languagePackSupport)&&(d.languagePackSupport=e._languagePackSupport),m(e._cacheRoot)&&(d.cacheRoot=e._cacheRoot),m(e._languagePackId)&&(d.languagePackId=e._languagePackId),m(e._translationsConfigFile)){d.translationsConfigFile=e._translationsConfigFile;try{d.translationsConfig=h(d.translationsConfigFile)}catch(t){if(e._corruptedFile){var a=i.dirname(e._corruptedFile);n.exists(a,(function(t){t&&n.writeFile(e._corruptedFile,"corrupted","utf8",(function(e){console.error(e)}))}))}}}}catch(e){}s.setPseudo("pseudo"===d.locale),c=Object.create(null)}(),t.loadMessageBundle=A,t.config=b,a.default.install(Object.freeze({loadMessageBundle:A,config:b}))},97974:(e,t,r)=>{e.exports=o,o.sync=function(e){if(c(e))return e;var t=(process.env.PATH||"").split(a),r=[""];"win32"===process.platform&&(t.push(process.cwd()),r=(process.env.PATHEXT||".EXE").split(a),-1!==e.indexOf(".")&&r.unshift(""));for(var o=0,d=t.length;o<d;o++)for(var p=n.join(t[o],e),u=0,m=r.length;u<m;u++){var h,l=p+r[u];try{h=s.statSync(l)}catch(e){}if(h&&h.isFile()&&i(h.mode,h.uid,h.gid))return l}throw new Error("not found: "+e)};var i,n=r(71017),a="win32"===process.platform?";":":",s=r(57147);function o(e,t){if(c(e))return t(null,e);var r=(process.env.PATH||"").split(a),o=[""];"win32"===process.platform&&(r.push(process.cwd()),o=(process.env.PATHEXT||".EXE").split(a),-1!==e.indexOf(".")&&o.unshift("")),function a(c,d){if(c===d)return t(new Error("not found: "+e));var p=n.resolve(r[c],e);!function e(r,n){if(r===n)return a(c+1,d);var u=o[r];s.stat(p+u,(function(a,s){return!a&&s&&s.isFile()&&i(s.mode,s.uid,s.gid)?t(null,p+u):e(r+1,n)}))}(0,o.length)}(0,r.length)}i="win32"==process.platform?function(){return!0}:function(e,t,r){return 1&e||8&e&&process.getgid&&r===process.getgid()||8&e&&process.getuid&&0===process.getuid()||64&e&&process.getuid&&t===process.getuid()||64&e&&process.getuid&&0===process.getuid()};var c="win32"===process.platform?function(e){if(d(e))return!0;var t=/^([a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/][^\\\/]+)?([\\\/])?/.exec(e),r=t[1]||"",i=r&&":"!==r.charAt(1);return!!t[2]||i}:d;function d(e){return"/"===e.charAt(0)||""===e}},79667:(e,t,r)=>{var i=r(73837),n=r(71017),a=r(32081).spawn,s="HKLM",o="HKCU",c="HKCR",d="HKCC",p=[s,o,c,"HKU",d],u="REG_SZ",m="REG_MULTI_SZ",h="REG_EXPAND_SZ",l="REG_DWORD",f="REG_QWORD",g="REG_BINARY",R="REG_NONE",A=[u,m,h,l,f,g,R],b=/(\\[a-zA-Z0-9_\s]+)*/,T=/^(HKEY_LOCAL_MACHINE|HKEY_CURRENT_USER|HKEY_CLASSES_ROOT|HKEY_USERS|HKEY_CURRENT_CONFIG)(.*)$/,E=/^(.*)\s(REG_SZ|REG_MULTI_SZ|REG_EXPAND_SZ|REG_DWORD|REG_QWORD|REG_BINARY|REG_NONE)\s+([^\s].*)$/;function w(e,t){if(!(this instanceof w))return new w(e,t);Error.captureStackTrace(this,w),this.__defineGetter__("name",(function(){return w.name})),this.__defineGetter__("message",(function(){return e})),this.__defineGetter__("code",(function(){return t}))}function x(e){var t={stdout:"",stderr:""};return e.stdout.on("data",(function(e){t.stdout+=e.toString()})),e.stderr.on("data",(function(e){t.stderr+=e.toString()})),t}function C(e,t,r){var n=r.stdout.trim(),a=r.stderr.trim();return new w(i.format("%s command exited with code %d:\n%s\n%s",e,t,n,a),t)}function S(e,t){t&&e.push("/reg:"+function(e){if("x64"==e)return"64";if("x86"==e)return"32";throw new Error("illegal architecture: "+e+" (use x86 or x64)")}(t))}function v(){return"win32"===process.platform?n.join(process.env.windir,"system32","reg.exe"):"REG"}function I(e,t,r,i,n,a,s){if(!(this instanceof I))return new I(e,t,r,i,n,a,s);var o=e,c=t,d=r,p=i,u=n,m=a,h=s;this.__defineGetter__("host",(function(){return o})),this.__defineGetter__("hive",(function(){return c})),this.__defineGetter__("key",(function(){return d})),this.__defineGetter__("name",(function(){return p})),this.__defineGetter__("type",(function(){return u})),this.__defineGetter__("value",(function(){return m})),this.__defineGetter__("arch",(function(){return h}))}function y(e){if(!(this instanceof y))return new y(e);var t=e||{},r=""+(t.host||""),i=""+(t.hive||s),n=""+(t.key||""),a=t.arch||null;if(this.__defineGetter__("host",(function(){return r})),this.__defineGetter__("hive",(function(){return i})),this.__defineGetter__("key",(function(){return n})),this.__defineGetter__("path",(function(){return(0==r.length?"":"\\\\"+r+"\\")+i+n})),this.__defineGetter__("arch",(function(){return a})),this.__defineGetter__("parent",(function(){var e=n.lastIndexOf("\\");return new y({host:this.host,hive:this.hive,key:-1==e?"":n.substring(0,e),arch:this.arch})})),-1==p.indexOf(i))throw new Error("illegal hive specified.");if(!b.test(n))throw new Error("illegal key specified.");if(a&&"x64"!=a&&"x86"!=a)throw new Error("illegal architecture specified (use x86 or x64)")}i.inherits(w,Error),i.inherits(I,Object),y.HKLM=s,y.HKCU=o,y.HKCR=c,y.HKU="HKU",y.HKCC=d,y.HIVES=p,y.REG_SZ=u,y.REG_MULTI_SZ=m,y.REG_EXPAND_SZ=h,y.REG_DWORD=l,y.REG_QWORD=f,y.REG_BINARY=g,y.REG_NONE=R,y.REG_TYPES=A,y.DEFAULT_VALUE="",y.prototype.values=function(e){if("function"!=typeof e)throw new TypeError("must specify a callback");var t=["QUERY",this.path];S(t,this.arch);var r=a(v(),t,{cwd:void 0,env:process.env,stdio:["ignore","pipe","pipe"]}),i="",n=this,s=null,o=x(r);return r.on("close",(function(t){if(!s)if(0!==t)e(C("QUERY",t,o),null);else{for(var r=[],a=[],c=i.split("\n"),d=0,p=0,u=c.length;p<u;p++){var m=c[p].trim();m.length>0&&(0!=d&&r.push(m),++d)}for(p=0,u=r.length;p<u;p++){var h,l,f,g=E.exec(r[p]);g&&(h=g[1].trim(),l=g[2].trim(),f=g[3],a.push(new I(n.host,n.hive,n.key,h,l,f,n.arch)))}e(null,a)}})),r.stdout.on("data",(function(e){i+=e.toString()})),r.on("error",(function(t){s=t,e(t)})),this},y.prototype.keys=function(e){if("function"!=typeof e)throw new TypeError("must specify a callback");var t=["QUERY",this.path];S(t,this.arch);var r=a(v(),t,{cwd:void 0,env:process.env,stdio:["ignore","pipe","pipe"]}),i="",n=this,s=null,o=x(r);return r.on("close",(function(t){s||0!==t&&e(C("QUERY",t,o),null)})),r.stdout.on("data",(function(e){i+=e.toString()})),r.stdout.on("end",(function(){for(var t=[],r=[],a=i.split("\n"),s=0,o=a.length;s<o;s++){var c=a[s].trim();c.length>0&&t.push(c)}for(s=0,o=t.length;s<o;s++){var d,p=T.exec(t[s]);p&&(p[1],(d=p[2])&&d!==n.key&&r.push(new y({host:n.host,hive:n.hive,key:d,arch:n.arch})))}e(null,r)})),r.on("error",(function(t){s=t,e(t)})),this},y.prototype.get=function(e,t){if("function"!=typeof t)throw new TypeError("must specify a callback");var r=["QUERY",this.path];""==e?r.push("/ve"):r=r.concat(["/v",e]),S(r,this.arch);var i=a(v(),r,{cwd:void 0,env:process.env,stdio:["ignore","pipe","pipe"]}),n="",s=this,o=null,c=x(i);return i.on("close",(function(e){if(!o)if(0!==e)t(C("QUERY",e,c),null);else{for(var r=[],i=null,a=n.split("\n"),d=0,p=0,u=a.length;p<u;p++){var m=a[p].trim();m.length>0&&(0!=d&&r.push(m),++d)}var h,l,f,g=r[r.length-1]||"",R=E.exec(g);R&&(h=R[1].trim(),l=R[2].trim(),f=R[3],i=new I(s.host,s.hive,s.key,h,l,f,s.arch)),t(null,i)}})),i.stdout.on("data",(function(e){n+=e.toString()})),i.on("error",(function(e){o=e,t(e)})),this},y.prototype.set=function(e,t,r,i){if("function"!=typeof i)throw new TypeError("must specify a callback");if(-1==A.indexOf(t))throw Error("illegal type specified.");var n=["ADD",this.path];""==e?n.push("/ve"):n=n.concat(["/v",e]),S(n=n.concat(["/t",t,"/d",r,"/f"]),this.arch);var s=a(v(),n,{cwd:void 0,env:process.env,stdio:["ignore","pipe","pipe"]}),o=null,c=x(s);return s.on("close",(function(e){o||i(0!==e?C("ADD",e,c):null)})),s.stdout.on("data",(function(e){})),s.on("error",(function(e){o=e,i(e)})),this},y.prototype.remove=function(e,t){if("function"!=typeof t)throw new TypeError("must specify a callback");var r=e?["DELETE",this.path,"/f","/v",e]:["DELETE",this.path,"/f","/ve"];S(r,this.arch);var i=a(v(),r,{cwd:void 0,env:process.env,stdio:["ignore","pipe","pipe"]}),n=null,s=x(i);return i.on("close",(function(e){n||(0!==e?t(C("DELETE",e,s),null):t(null))})),i.stdout.on("data",(function(e){})),i.on("error",(function(e){n=e,t(e)})),this},y.prototype.clear=function(e){if("function"!=typeof e)throw new TypeError("must specify a callback");var t=["DELETE",this.path,"/f","/va"];S(t,this.arch);var r=a(v(),t,{cwd:void 0,env:process.env,stdio:["ignore","pipe","pipe"]}),i=null,n=x(r);return r.on("close",(function(t){i||(0!==t?e(C("DELETE",t,n),null):e(null))})),r.stdout.on("data",(function(e){})),r.on("error",(function(t){i=t,e(t)})),this},y.prototype.erase=y.prototype.clear,y.prototype.destroy=function(e){if("function"!=typeof e)throw new TypeError("must specify a callback");var t=["DELETE",this.path,"/f"];S(t,this.arch);var r=a(v(),t,{cwd:void 0,env:process.env,stdio:["ignore","pipe","pipe"]}),i=null,n=x(r);return r.on("close",(function(t){i||(0!==t?e(C("DELETE",t,n),null):e(null))})),r.stdout.on("data",(function(e){})),r.on("error",(function(t){i=t,e(t)})),this},y.prototype.create=function(e){if("function"!=typeof e)throw new TypeError("must specify a callback");var t=["ADD",this.path,"/f"];S(t,this.arch);var r=a(v(),t,{cwd:void 0,env:process.env,stdio:["ignore","pipe","pipe"]}),i=null,n=x(r);return r.on("close",(function(t){i||(0!==t?e(C("ADD",t,n),null):e(null))})),r.stdout.on("data",(function(e){})),r.on("error",(function(t){i=t,e(t)})),this},y.prototype.keyExists=function(e){return this.values((function(t,r){if(t)return 1==t.code?e(null,!1):e(t);e(null,!0)})),this},y.prototype.valueExists=function(e,t){return this.get(e,(function(e,r){if(e)return 1==e.code?t(null,!1):t(e);t(null,!0)})),this},e.exports=y},32081:e=>{"use strict";e.exports=require("child_process")},6113:e=>{"use strict";e.exports=require("crypto")},57147:e=>{"use strict";e.exports=require("fs")},41808:e=>{"use strict";e.exports=require("net")},22037:e=>{"use strict";e.exports=require("os")},71017:e=>{"use strict";e.exports=require("path")},57310:e=>{"use strict";e.exports=require("url")},73837:e=>{"use strict";e.exports=require("util")},85413:e=>{"use strict";e.exports=JSON.parse('{"items":[{"identifier":"ABS","text":{"description":["Returns the absolute value of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-abs-absval"],"parameters":["@param numeric-expression — An expression that returns a value of any built-in numeric data type."]},"id":"ABS-1"},{"identifier":"ABSVAL","text":{"description":["Returns the absolute value of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-abs-absval"],"parameters":["@param numeric-expression — An expression that returns a value of any built-in numeric data type."]},"id":"ABSVAL-1"},{"identifier":"ACOS","text":{"description":["Returns the arc cosine of the argument as an angle, expressed in radians.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-acos"],"parameters":["@param numeric-expression — An expression that returns the value of any built-in numeric data type except for DECFLOAT."]},"id":"ACOS-1"},{"identifier":"ADD_DAYS","text":{"description":["Returns a datetime value that represents the first argument plus a specified number of days.","This function is passthrough-only and cannot run on Db2 for z/OS without acceleration.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-add-days"],"parameters":["@param expression — An expression that specifies the starting date.","@param numeric-expression — An expression that specifies the number of days to add to the starting date specified by expression."]},"id":"ADD_DAYS-1"},{"identifier":"ADD_MONTHS","text":{"description":["Returns a date that represents the date argument plus the number of months argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-add-months"],"parameters":["@param expression — An expression that specifies the starting date.","@param numeric-expression — An expression that returns a value of any built-in numeric data type."]},"id":"ADD_MONTHS-1"},{"identifier":"ADMIN_TASK_LIST","text":{"description":["Returns a table with one row for each of the tasks that are defined in the administrative task scheduler task list.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-admin-task-list"],"parameters":[]},"id":"ADMIN_TASK_LIST-1"},{"identifier":"ADMIN_TASK_OUTPUT","text":{"description":["Returns the output parameter values and result sets, if available.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-admin-task-output"],"parameters":["@param task-name — The unique name of the task whose execution output you want returned.","@param num-invocations — The execution number of the task whose output you want returned."]},"id":"ADMIN_TASK_OUTPUT-1"},{"identifier":"ADMIN_TASK_STATUS","text":{"description":["Returns a table with one row for each task in the administrative task scheduler task list that contains the status for the last time the task was run.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-admin-task-status"],"parameters":["@param max-history — The maximum number of execution statuses per task to be returned."]},"id":"ADMIN_TASK_STATUS-1"},{"identifier":"AI_ANALOGY","text":{"description":["Computes an analogy score between two sets of values.","SQL Data Insights must be configured in Db2 to use this function.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-ai-analogy"],"parameters":["@param source-1 — An expression that specifies the first source value for the analogy.","@param target-1 — An expression that specifies the first target value for the analogy.","@param source-2 — An expression that specifies the second source value for the analogy.","@param target-2 — An expression that specifies the second target value for the analogy."]},"id":"AI_ANALOGY-1"},{"identifier":"AI_SEMANTIC_CLUSTER","text":{"description":["Computes a semantic clustering score of a member argument against a set of clustering arguments.","SQL Data Insights must be configured in Db2 to use this function.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-ai-semantic-cluster"],"parameters":["@param member-expr — An expression that specifies the value to be scored against the rest of the cluster.","@param clustering-expression — An expression that specifies the values returned by the set of clustering expressions form a cluster against which the member expression is scored."]},"id":"AI_SEMANTIC_CLUSTER-1"},{"identifier":"AI_SIMILARITY","text":{"description":["Computes a similarity score using the values returned by the specified expressions.","SQL Data Insights must be configured in Db2 to use this function.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-ai-similarity"],"parameters":["@param expression-1 — An expression that specifies the first value on which the similarity score is computed.","@param expression-2 — An expression that specifies the second value on which the similarity score is computed."]},"id":"AI_SIMILARITY-1"},{"identifier":"AI_SIMILARITY","text":{"description":["Computes a similarity score using the values returned by the specified expressions.","SQL Data Insights must be configured in Db2 to use this function.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-ai-similarity"],"parameters":["@param expression-1 — An expression that specifies the first value on which the similarity score is computed.","@param expression-2 — An expression that specifies the second value on which the similarity score is computed.","@param column-name — An identifier that specifies a column to be used as the model column, which determines the machine learning model used to evaluate the function."]},"id":"AI_SIMILARITY-2"},{"identifier":"ARRAY_AGG","text":{"description":["Returns an array in which each value of the input set is assigned to an element of the array.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-array-agg"],"parameters":["@param expression — An expression that returns a value with a data type that is valid for an array element.","@param sort-key-expression — Specifies a sort key value that is either a column name or an expression."]},"id":"ARRAY_AGG-1"},{"identifier":"ARRAY_AGG","text":{"description":["Returns an array in which each value of the input set is assigned to an element of the array.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-array-agg"],"parameters":["@param index-expression — An expression for the index of the associative array.","@param expression — An expression that returns a value with a data type that is valid for an array element."]},"id":"ARRAY_AGG-2"},{"identifier":"ARRAY_DELETE","text":{"description":["Returns an array with the requested elements deleted.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-array-delete"],"parameters":["@param array-expression — An SQL variable, SQL parameter, or global variable of an array type, or a CAST specification that specifies an SQL variable, SQL parameter, global variable, or parameter marker as the source value.","@param array-index1 — An expression that results in a value that is castable to the data type of the array index.","@param array-index2 — An expression that results in a value that is castable to the data type of the array index."]},"id":"ARRAY_DELETE-1"},{"identifier":"ARRAY_FIRST","text":{"description":["Returns the minimum array index value of an array.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-array-first"],"parameters":["@param array-expression — An SQL variable, SQL parameter, or global variable of an array type, or a CAST specification that specifies an SQL variable, SQL parameter, global variable, or parameter marker as the source value."]},"id":"ARRAY_FIRST-1"},{"identifier":"ARRAY_LAST","text":{"description":["Returns the maximum array index value of an array.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-array-last"],"parameters":["@param array-expression — An SQL variable, SQL parameter, or global variable of an array type, or a CAST specification that specifies an SQL variable, SQL parameter, global variable, or parameter marker as the source value."]},"id":"ARRAY_LAST-1"},{"identifier":"ARRAY_NEXT","text":{"description":["Returns the next larger array index value for an array, relative to a specified array index argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-array-next"],"parameters":["@param array-expression — An SQL variable, SQL parameter, or global variable of an array type, or a CAST specification that specifies an SQL variable, SQL parameter, global variable, or parameter marker as the source value.","@param array-index — An expression that results in a value that is castable to the data type of the array index."]},"id":"ARRAY_NEXT-1"},{"identifier":"ARRAY_PRIOR","text":{"description":["Returns the next smaller array index value for an array, relative to a specified array index argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-array-prior"],"parameters":["@param array-expression — An SQL variable, SQL parameter, or global variable of an array type, or a CAST specification that specifies an SQL variable, SQL parameter, global variable, or parameter marker as the source value.","@param array-index — An expression that results in a value that is castable to the data type of the array index."]},"id":"ARRAY_PRIOR-1"},{"identifier":"ARRAY_TRIM","text":{"description":["Returns an array after removing elements from the end of an ordinary array.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-array-trim"],"parameters":["@param array-expression — An SQL variable, SQL parameter, or global variable of an array type, or a CAST specification that specifies an SQL variable, SQL parameter, global variable, or parameter marker as the source value.","@param numeric-expression — Specifies the number of elements that are trimmed from the end of the array."]},"id":"ARRAY_TRIM-1"},{"identifier":"ASCII","text":{"description":["Returns the ASCII code value of the leftmost character of the argument as an integer.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-ascii"],"parameters":["@param string-expression — Any built-in character or graphic string data type, except for CLOB or DBCLOB."]},"id":"ASCII-1"},{"identifier":"ASCII_CHR","text":{"description":["Returns the character that corresponds to the ASCII code value that is specified by the argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-ascii-chr"],"parameters":["@param expression — An expression that returns a built-in data type of BIGINT, INTEGER, or SMALLINT."]},"id":"ASCII_CHR-1"},{"identifier":"ASCII_STR","text":{"description":["Returns an ASCII version of the character or graphic string argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-ascii-str-asciistr"],"parameters":["@param string-expression — An expression that returns a value of a built-in character or graphic string."]},"id":"ASCII_STR-1"},{"identifier":"ASCIISTR","text":{"description":["Returns an ASCII version of the character or graphic string argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-ascii-str-asciistr"],"parameters":["@param string-expression — An expression that returns a value of a built-in character or graphic string."]},"id":"ASCIISTR-1"},{"identifier":"ASIN","text":{"description":["Returns the arc sine of an argument as an angle, expressed in radians.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-asin"],"parameters":["@param numeric-expression — An expression that returns the value of any built-in numeric data type except for DECFLOAT."]},"id":"ASIN-1"},{"identifier":"ATAN","text":{"description":["Returns the arc tangent of an argument as an angle, expressed in radians.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-atan"],"parameters":["@param numeric-expression — An expression that returns the value of any built-in numeric data type except for DECFLOAT."]},"id":"ATAN-1"},{"identifier":"ATANH","text":{"description":["Returns the hyperbolic arc tangent of an argument as an angle, expressed in radians.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-atanh"],"parameters":["@param numeric-expression — An expression that returns the value of any built-in numeric data type except for DECFLOAT."]},"id":"ATANH-1"},{"identifier":"ATAN2","text":{"description":["Returns the arc tangent of x and y coordinates as an angle, expressed in radians.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-atan2"],"parameters":["@param numeric-expression-1 — An expression that returns the value of any built-in numeric data type except for DECFLOAT.","@param numeric-expression-2 — An expression that returns the value of any built-in numeric data type except for DECFLOAT."]},"id":"ATAN2-1"},{"identifier":"AVG","text":{"description":["Returns the average of a set of numbers.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-avg"],"parameters":["@param numeric-expression — The argument values can be of any built-in numeric data type, and their sum must be within the range of the data type of the result."]},"id":"AVG-1"},{"identifier":"BLOB","text":{"description":["Returns a BLOB representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-blob"],"parameters":["@param string-expression — An expression that returns a value that is a built-in character string, graphic string, binary string, or a row ID type.","@param integer — An integer value that specifies the length attribute of the resulting binary string."]},"id":"BLOB-1"},{"identifier":"BLOCKING_THREADS","text":{"description":["Returns a table with one row for each lock or claim that threads hold against the databases that are specified in the input parameter.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-blocking-threads"],"parameters":["@param dbname — An expression that returns a value that is a built-in character string or graphic string data type that is not a LOB."]},"id":"BLOCKING_THREADS-1"},{"identifier":"BIGINT","text":{"description":["Returns a big integer representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-bigint"],"parameters":["@param numeric-expression — A value of any built-in numeric data type."]},"id":"BIGINT-1"},{"identifier":"BIGINT","text":{"description":["Returns a big integer representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-bigint"],"parameters":["@param string-expression — A value of any built-in numeric data type."]},"id":"BIGINT-2"},{"identifier":"BITAND","text":{"description":["Performs a bitwise AND operation.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-bitand-bitandnot-bitor-bitxor-bitnot"],"parameters":["@param expression1 — Integer value represented by the data types SMALLINT, INTEGER, BIGINT, or DECFLOAT.","@param expression2 — Integer value represented by the data types SMALLINT, INTEGER, BIGINT, or DECFLOAT."]},"id":"BITAND-1"},{"identifier":"BITANDNOT","text":{"description":["Clears any bit in the first argument that is in the second argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-bitand-bitandnot-bitor-bitxor-bitnot"],"parameters":["@param expression1 — Integer value represented by the data types SMALLINT, INTEGER, BIGINT, or DECFLOAT.","@param expression2 — Integer value represented by the data types SMALLINT, INTEGER, BIGINT, or DECFLOAT."]},"id":"BITANDNOT-1"},{"identifier":"BITOR","text":{"description":["Performs a bitwise OR operation.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-bitand-bitandnot-bitor-bitxor-bitnot"],"parameters":["@param expression1 — Integer value represented by the data types SMALLINT, INTEGER, BIGINT, or DECFLOAT.","@param expression2 — Integer value represented by the data types SMALLINT, INTEGER, BIGINT, or DECFLOAT."]},"id":"BITOR-1"},{"identifier":"BITXOR","text":{"description":["Performs a bitwise exclusive OR operation.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-bitand-bitandnot-bitor-bitxor-bitnot"],"parameters":["@param expression1 — Integer value represented by the data types SMALLINT, INTEGER, BIGINT, or DECFLOAT.","@param expression2 — Integer value represented by the data types SMALLINT, INTEGER, BIGINT, or DECFLOAT."]},"id":"BITXOR-1"},{"identifier":"BITNOT","text":{"description":["Performs a bitwise NOT operation.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-bitand-bitandnot-bitor-bitxor-bitnot"],"parameters":["@param expression1 — Integer value represented by the data types SMALLINT, INTEGER, BIGINT, or DECFLOAT."]},"id":"BITNOT-1"},{"identifier":"BINARY","text":{"description":["Returns a fixed-length binary string representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-binary"],"parameters":["@param string-expression — An expression that returns a value that is a built-in character string, graphic string, binary string, or a row ID type.","@param integer — An integer value that specifies the length attribute of the resulting binary string."]},"id":"BINARY-1"},{"identifier":"BTRIM","text":{"description":["Removes the characters that are specified in a trim string from the beginning and end of a source string.","This function is passthrough-only and cannot run on Db2 for z/OS without acceleration.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-btrim"],"parameters":["@param source-string — An expression that specifies the string from which characters are to be removed.","@param trim-string — An expression that specifies the characters that are to be removed from the beginning and end of the source string."]},"id":"BTRIM-1"},{"identifier":"CARDINALITY","text":{"description":["Returns a value of that represents the number of elements of an array.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-cardinality"],"parameters":["@param array-expression — An SQL variable, SQL parameter, or global variable of an array type, or a CAST specification that specifies an SQL variable, SQL parameter, global variable, or parameter marker as the source value."]},"id":"CARDINALITY-1"},{"identifier":"CCSID_ENCODING","text":{"description":["Returns the encoding scheme of a CCSID with a value of ASCII, EBCDIC, UNICODE, or UNKNOWN.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-ccsid-encoding"],"parameters":["@param expression — An expression that returns a value of a built-in numeric, character, or graphic string data type that is not a LOB."]},"id":"CCSID_ENCODING-1"},{"identifier":"CEIL","text":{"description":["Returns the smallest integer greater than or equal to the argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-ceiling-ceil"],"parameters":["@param numeric-expression — An expression that returns a value of any built-in numeric data type."]},"id":"CEIL-1"},{"identifier":"CEILING","text":{"description":["Returns the smallest integer greater than or equal to the argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-ceiling-ceil"],"parameters":["@param numeric-expression — An expression that returns a value of any built-in numeric data type."]},"id":"CEILING-1"},{"identifier":"CHAR","text":{"description":["Returns a fixed-length character string representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-char"],"parameters":["@param integer-expression — A value that is a built-in integer data type (SMALLINT, INTEGER, or BIGINT)."]},"id":"CHAR-1"},{"identifier":"CHAR","text":{"description":["Returns a fixed-length character string representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-char"],"parameters":["@param decimal-expression — A value that is a built-in decimal data type.","@param decimal-character — The single-byte character constant that is used to delimit the decimal digits in the result character string."]},"id":"CHAR-2"},{"identifier":"CHAR","text":{"description":["Returns a fixed-length character string representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-char"],"parameters":["@param floating-point-expression — A value that is a built-in floating-point data type (DOUBLE or REAL)."]},"id":"CHAR-3"},{"identifier":"CHAR","text":{"description":["Returns a fixed-length character string representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-char"],"parameters":["@param decimal-floating-point-expression — A value that is a built-in decimal floating-point data type (DECFLOAT)."]},"id":"CHAR-4"},{"identifier":"CHAR","text":{"description":["Returns a fixed-length character string representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-char"],"parameters":["@param character-expression — A value of a built-in character string.","@param integer — The length attribute for the resulting fixed-length character string."]},"id":"CHAR-5"},{"identifier":"CHAR","text":{"description":["Returns a fixed-length character string representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-char"],"parameters":["@param graphic-expression — A value of a a built-in graphic string.","@param integer — The length attribute for the resulting fixed-length character string."]},"id":"CHAR-6"},{"identifier":"CHAR","text":{"description":["Returns a fixed-length character string representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-char"],"parameters":["@param datetime-expression — One of the following built-in data types: DATE, TIME, TIMESTAMP WITHOUT TIME ZONE, or TIMESTAMP WITH TIME ZONE."]},"id":"CHAR-7"},{"identifier":"CHAR","text":{"description":["Returns a fixed-length character string representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-char"],"parameters":["@param row-ID-expression — A value that is a built-in row ID data type."]},"id":"CHAR-8"},{"identifier":"CHAR_LENGTH","text":{"description":["Returns the length of its argument in the number of string units that are specified.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-character-length-char-length"],"parameters":["@param character-expression — A value of a built-in character string."]},"id":"CHAR_LENGTH-1"},{"identifier":"CHAR_LENGTH","text":{"description":["Returns the length of its argument in the number of string units that are specified.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-character-length-char-length"],"parameters":["@param graphic-expression — A value of a built-in graphic string."]},"id":"CHAR_LENGTH-2"},{"identifier":"CHARACTER_LENGTH","text":{"description":["Returns the length of its argument in the number of string units that are specified.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-character-length-char-length"],"parameters":["@param character-expression — A value of a built-in character string."]},"id":"CHARACTER_LENGTH-1"},{"identifier":"CHARACTER_LENGTH","text":{"description":["Returns the length of its argument in the number of string units that are specified.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-character-length-char-length"],"parameters":["@param graphic-expression — A value of a built-in graphic string."]},"id":"CHARACTER_LENGTH-2"},{"identifier":"CHR","text":{"description":["Returns the character that corresponds to the ASCII code value that is specified by the argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-chr"],"parameters":["@param expression — An expression that returns a built-in data type of BIGINT, INTEGER, or SMALLINT."]},"id":"CHR-1"},{"identifier":"CLOB","text":{"description":["Returns a CLOB representation of the first argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-clob"],"parameters":["@param character-expression — A value of a character string.","@param integer — The length attribute of the resulting CLOB data type."]},"id":"CLOB-1"},{"identifier":"CLOB","text":{"description":["Returns a CLOB representation of the first argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-clob"],"parameters":["@param graphic-expression — A value of a graphic string.","@param integer — The length attribute of the resulting CLOB data type."]},"id":"CLOB-2"},{"identifier":"COALESCE","text":{"description":["Returns the first argument in a set of arguments that is not null.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-coalesce"],"parameters":["@param expression — Arguments must be compatible and can be of either a built-in or user-defined data type."]},"id":"COALESCE-1"},{"identifier":"COLLATION_KEY","text":{"description":["Returns a string that represents the collation key of the argument in the specified collation.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-collation-key"],"parameters":["@param string-expression — An expression that returns a character or graphic string that is not a LOB for which the collation key is to be determined.","@param collation-name — Specifies the collation to use when determining the collation key.","@param integer — Specifies the length attribute of the result."]},"id":"COLLATION_KEY-1"},{"identifier":"COMPARE_DECFLOAT","text":{"description":["Returns a SMALLINT value that indicates whether two arguments are equal, or unordered, or whether one argument is greater than the other.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-compare-decfloat"],"parameters":["@param decfloat-expression1 — An expression that returns a DECFLOAT value.","@param decfloat-expression2 — An expression that returns a DECFLOAT value."]},"id":"COMPARE_DECFLOAT-1"},{"identifier":"CONCAT","text":{"description":["Returns the concatenation of two strings.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-concat"],"parameters":["@param string-expression-1 — Arguments must be compatible strings.","@param string-expression-2 — Arguments must be compatible strings."]},"id":"CONCAT-1"},{"identifier":"CONTAINS","text":{"description":["Returns a result about whether or not a match was found during a search of a text search index.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-contains"],"parameters":["@param column-name — A qualified or unqualified name of a column that has a text search index that is to be searched.","@param search-argument — An expression that returns a value that is a string value (except a LOB) that contains the terms to be searched for and must not be all blanks or the empty string.","@param string-constant — A string constant that specifies the search argument options that are in effect for the function."]},"id":"CONTAINS-1"},{"identifier":"CORR","text":{"description":["Returns the coefficient of the correlation of a set of number pairs.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-corr-correlation"],"parameters":["@param expression-1 — The value of any built-in numeric data type.","@param expression-2 — The value of any built-in numeric data type."]},"id":"CORR-1"},{"identifier":"CORRELATION","text":{"description":["Returns the coefficient of the correlation of a set of number pairs.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-corr-correlation"],"parameters":["@param expression-1 — The value of any built-in numeric data type.","@param expression-2 — The value of any built-in numeric data type."]},"id":"CORRELATION-1"},{"identifier":"COS","text":{"description":["Returns the cosine of an argument that is expressed as an angle in radians.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-cos"],"parameters":["@param numeric-expression — An expression that returns the value of any built-in numeric data type that is not DECFLOAT."]},"id":"COS-1"},{"identifier":"COSH","text":{"description":["Returns the hyperbolic cosine of an argument that is expressed as an angle in radians.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-cosh"],"parameters":["@param numeric-expression — An expression that returns the value of any built-in numeric data type except for DECFLOAT."]},"id":"COSH-1"},{"identifier":"COUNT","text":{"description":["Returns the number of rows or values in a set of rows or values.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-count"],"parameters":["@param expression — Any built-in data type other than a BLOB, CLOB, DBCLOB, or XML."]},"id":"COUNT-1"},{"identifier":"COUNT_BIG","text":{"description":["Same as COUNT, except the result can be greater than the maximum value of an integer.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-count-big"],"parameters":["@param expression — Any built-in data type other than a BLOB, CLOB, DBCLOB, or XML."]},"id":"COUNT_BIG-1"},{"identifier":"COVAR","text":{"description":["Returns the population covariance of a set of number pairs.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-covar-pop-covariance-covar"],"parameters":["@param expression-1 — Any built-in numeric data type.","@param expression-2 — Any built-in numeric data type."]},"id":"COVAR-1"},{"identifier":"COVAR_POP","text":{"description":["Returns the population covariance of a set of number pairs.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-covar-pop-covariance-covar"],"parameters":["@param expression-1 — Any built-in numeric data type.","@param expression-2 — Any built-in numeric data type."]},"id":"COVAR_POP-1"},{"identifier":"COVARIANCE","text":{"description":["Returns the population covariance of a set of number pairs.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-covar-pop-covariance-covar"],"parameters":["@param expression-1 — Any built-in numeric data type.","@param expression-2 — Any built-in numeric data type."]},"id":"COVARIANCE-1"},{"identifier":"COVAR_SAMP","text":{"description":["Returns unbiased sample covariance (n-1) of a set of number pairs.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-covar-samp-covariance-samp"],"parameters":["@param expression-1 — Any built-in numeric data type.","@param expression-2 — Any built-in numeric data type."]},"id":"COVAR_SAMP-1"},{"identifier":"COVARIANCE_SAMP","text":{"description":["Returns unbiased sample covariance (n-1) of a set of number pairs.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-covar-samp-covariance-samp"],"parameters":["@param expression-1 — Any built-in numeric data type.","@param expression-2 — Any built-in numeric data type."]},"id":"COVARIANCE_SAMP-1"},{"identifier":"CUME_DIST","text":{"description":["Returns the cumulative distribution of a row that is hypothetically inserted into a group of rows.","This function is passthrough-only and cannot run on Db2 for z/OS without acceleration.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-cume-dist"],"parameters":["@param expression — A row that is hypothetically inserted into a group of rows.","@param order-by-clause — The order of the rows from the same grouping set that are processed in the aggregation."]},"id":"CUME_DIST-1"},{"identifier":"CUME_DIST","text":{"description":["Returns a cumulative distribution of a row in an OLAP window.","This function is passthrough-only and cannot run on Db2 for z/OS without acceleration.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=expressions-olap-specification"],"parameters":["@param window-partition-clause — The partition within which the OLAP operation is applied.","@param window-order-clause — The ordering of rows within a partition that is used to determine the value of the OLAP specification."]},"id":"CUME_DIST-2"},{"identifier":"DATE","text":{"description":["Returns a date derived from its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-date"],"parameters":["@param expression — An expression that returns one of the following built-in data types: a date, a timestamp, a character string, a graphic string, or any numeric data type."]},"id":"DATE-1"},{"identifier":"DAY","text":{"description":["Returns the day part of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-day"],"parameters":["@param expression — An expression that returns one of the following built-in data types: a date, a timestamp, a character string, a graphic string, or any numeric data type."]},"id":"DAY-1"},{"identifier":"DAYOFMONTH","text":{"description":["Returns the day part of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-dayofmonth"],"parameters":["@param expression — An expression that returns a value of a date, a timestamp, a character string, or a graphic string built-in data type."]},"id":"DAYOFMONTH-1"},{"identifier":"DAYOFWEEK","text":{"description":["Returns an integer in the range 1 - 7, where 1 represents Sunday.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-dayofweek"],"parameters":["@param expression — An expression that returns a value of one of the following built-in data types: a date, a timestamp, a character string, or a graphic string."]},"id":"DAYOFWEEK-1"},{"identifier":"DAYOFWEEK_ISO","text":{"description":["Returns an integer in the range 1 - 7, where 1 represents Monday.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-dayofweek-iso"],"parameters":["@param expression — An expression that returns a value of one of the following built-in data types: a date, a timestamp, a character string, or graphic string."]},"id":"DAYOFWEEK_ISO-1"},{"identifier":"DAYOFYEAR","text":{"description":["Returns an integer in the range 1 - 366, where 1 represents January 1.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-dayofyear"],"parameters":["@param expression — An expression that returns a value of one of the following built-in data types: a date, a timestamp, a character string, or a graphic string."]},"id":"DAYOFYEAR-1"},{"identifier":"DAYS","text":{"description":["Returns an integer representation of a date.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-days"],"parameters":["@param expression — An expression that returns a value of one of the following built-in data types: a date, a timestamp, a character string, or a graphic string."]},"id":"DAYS-1"},{"identifier":"DAYS_BETWEEN","text":{"description":["Returns the number of full days between the specified arguments.","This function is passthrough-only and cannot run on Db2 for z/OS without acceleration.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-days-between"],"parameters":["@param expression1 — The first datetime value to compute the number of full days between two datetime values.","@param expression2 — The second datetime value to compute the number of full days between two datetime values."]},"id":"DAYS_BETWEEN-1"},{"identifier":"DBCLOB","text":{"description":["Returns a DBCLOB representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-dbclob"],"parameters":["@param character-expression — A value that is an EBCDIC-encoded or Unicode-encoded character string.","@param integer — The length attribute of the resulting DBCLOB."]},"id":"DBCLOB-1"},{"identifier":"DBCLOB","text":{"description":["Returns a DBCLOB representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-dbclob"],"parameters":["@param graphic-expression — A value that is an EBCDIC-encoded or Unicode-encoded graphic string.","@param integer — The length attribute of the resulting DBCLOB."]},"id":"DBCLOB-2"},{"identifier":"DEC","text":{"description":["Returns a decimal representation of its argument","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-decimal-dec"],"parameters":["@param numeric-expression — A value of any built-in numeric data type.","@param precision — An integer constant with a value greater than or equal to 1 and less than or equal to 31.","@param scale — An integer constant that is greater than or equal to zero and less than or equal to precision."]},"id":"DEC-1"},{"identifier":"DEC","text":{"description":["Returns a decimal representation of its argument","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-decimal-dec"],"parameters":["@param string-expression — A value of a character or graphic string (except a CLOB or DBCLOB) with a length attribute that is not greater than 255 bytes.","@param precision — An integer constant with a value in the range 1 to 31.","@param scale — An integer constant that is greater than or equal to zero and less than or equal to precision.","@param decimal-character — A single-byte character constant used to delimit the decimal digits in string-expression from the whole part of the number."]},"id":"DEC-2"},{"identifier":"DECIMAL","text":{"description":["Returns a decimal representation of its argument","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-decimal-dec"],"parameters":["@param numeric-expression — A value of any built-in numeric data type.","@param precision — An integer constant with a value greater than or equal to 1 and less than or equal to 31.","@param scale — An integer constant that is greater than or equal to zero and less than or equal to precision."]},"id":"DECIMAL-1"},{"identifier":"DECIMAL","text":{"description":["Returns a decimal representation of its argument","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-decimal-dec"],"parameters":["@param string-expression — A value of a character or graphic string (except a CLOB or DBCLOB) with a length attribute that is not greater than 255 bytes.","@param precision — An integer constant with a value in the range 1 to 31.","@param scale — An integer constant that is greater than or equal to zero and less than or equal to precision.","@param decimal-character — A single-byte character constant used to delimit the decimal digits in string-expression from the whole part of the number."]},"id":"DECIMAL-2"},{"identifier":"DECFLOAT","text":{"description":["Returns a DECFLOAT representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-decfloat"],"parameters":["@param numeric-expression — A value of any built-in numeric data type."]},"id":"DECFLOAT-1"},{"identifier":"DECFLOAT","text":{"description":["Returns a DECFLOAT representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-decfloat"],"parameters":["@param string-expression — A value of a character or graphic string (except a CLOB or DBCLOB) with a length attribute that is not greater than 255 bytes."]},"id":"DECFLOAT-2"},{"identifier":"DECFLOAT_FORMAT","text":{"description":["Returns a DECFLOAT(34) value that is based on the interpretation of the input string using the specified format.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-decfloat-format"],"parameters":["@param string-expression — An expression that returns a value that is a CHAR and VARCHAR data type.","@param format-string — An expression that returns a value that is a built-in character string data type."]},"id":"DECFLOAT_FORMAT-1"},{"identifier":"DECFLOAT_SORTKEY","text":{"description":["Returns a binary value that can be used when sorting DECFLOAT values.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-decfloat-sortkey"],"parameters":["@param decfloat-expression — An expression that returns a DECFLOAT value."]},"id":"DECFLOAT_SORTKEY-1"},{"identifier":"DECODE","text":{"description":["Returns a specified result-expression based on a comparison of input expressions (similar to the CASE expression).","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-decode"],"parameters":["@param expression1 — Must not represent an array value.","@param expression2 — Must not represent an array value.","@param result-expression — Expression based on comparison of expression1 and expression2."]},"id":"DECODE-1"},{"identifier":"DECRYPT_BINARY","text":{"description":["Returns the decrypted value of an encrypted argument that was encrypted using the ENCRYPT_TDES function.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=sf-decrypt-binary-decrypt-bit-decrypt-char-decrypt-db"],"parameters":["@param encrypted-data — An expression that returns a complete, encrypted data value of a CHAR FOR BIT DATA, VARCHAR FOR BIT DATA, BINARY, or VARBINARY data type.","@param password-string — An expression that returns a CHAR or VARCHAR value with at least 6 bytes and no more than 127 bytes.","@param ccsid-constant — A integer constant that specifies the CCSID in which the data should be returned by the decryption function."]},"id":"DECRYPT_BINARY-1"},{"identifier":"DECRYPT_BIT","text":{"description":["Returns the decrypted value of an encrypted argument that was encrypted using the ENCRYPT_TDES function.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=sf-decrypt-binary-decrypt-bit-decrypt-char-decrypt-db"],"parameters":["@param encrypted-data — An expression that returns a complete, encrypted data value of a CHAR FOR BIT DATA, VARCHAR FOR BIT DATA, BINARY, or VARBINARY data type.","@param password-string — An expression that returns a CHAR or VARCHAR value with at least 6 bytes and no more than 127 bytes.","@param ccsid-constant — A integer constant that specifies the CCSID in which the data should be returned by the decryption function."]},"id":"DECRYPT_BIT-1"},{"identifier":"DECRYPT_CHAR","text":{"description":["Returns the decrypted value of an encrypted argument that was encrypted using the ENCRYPT_TDES function.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=sf-decrypt-binary-decrypt-bit-decrypt-char-decrypt-db"],"parameters":["@param encrypted-data — An expression that returns a complete, encrypted data value of a CHAR FOR BIT DATA, VARCHAR FOR BIT DATA, BINARY, or VARBINARY data type.","@param password-string — An expression that returns a CHAR or VARCHAR value with at least 6 bytes and no more than 127 bytes.","@param ccsid-constant — A integer constant that specifies the CCSID in which the data should be returned by the decryption function."]},"id":"DECRYPT_CHAR-1"},{"identifier":"DECRYPT_DB","text":{"description":["Returns the decrypted value of an encrypted argument that was encrypted using the ENCRYPT_TDES function.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=sf-decrypt-binary-decrypt-bit-decrypt-char-decrypt-db"],"parameters":["@param encrypted-data — An expression that returns a complete, encrypted data value of a CHAR FOR BIT DATA, VARCHAR FOR BIT DATA, BINARY, or VARBINARY data type.","@param password-string — An expression that returns a CHAR or VARCHAR value with at least 6 bytes and no more than 127 bytes.","@param ccsid-constant — A integer constant that specifies the CCSID in which the data should be returned by the decryption function."]},"id":"DECRYPT_DB-1"},{"identifier":"DECRYPT_DATAKEY_INTEGER","text":{"description":["Returns the decrypted value of an encrypted argument that was encrypted using the algorithm that was specified when the data was encrypted.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-decrypt-datakey-type"],"parameters":["@param encrypted-data — An expression that returns a built-in VARBINARY or BLOB value."]},"id":"DECRYPT_DATAKEY_INTEGER-1"},{"identifier":"DECRYPT_DATAKEY_BIGINT","text":{"description":["Returns the decrypted value of an encrypted argument that was encrypted using the algorithm that was specified when the data was encrypted.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-decrypt-datakey-type"],"parameters":["@param encrypted-data — An expression that returns a built-in VARBINARY or BLOB value."]},"id":"DECRYPT_DATAKEY_BIGINT-1"},{"identifier":"DECRYPT_DATAKEY_DECIMAL","text":{"description":["Returns the decrypted value of an encrypted argument that was encrypted using the algorithm that was specified when the data was encrypted.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-decrypt-datakey-type"],"parameters":["@param encrypted-data — An expression that returns a built-in VARBINARY or BLOB value.","@param precision — An integer constant with a value greater than or equal to 1 and less than or equal to 31.","@param scale — An integer constant that is greater than or equal to zero and less than or equal to precision."]},"id":"DECRYPT_DATAKEY_DECIMAL-1"},{"identifier":"DECRYPT_DATAKEY_VARCHAR","text":{"description":["Returns the decrypted value of an encrypted argument that was encrypted using the algorithm that was specified when the data was encrypted.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-decrypt-datakey-type"],"parameters":["@param encrypted-data — An expression that returns a built-in VARBINARY or BLOB value.","@param ccsid-constant — An integer constant that specifies the CCSID in which the data should be returned by the decryption function."]},"id":"DECRYPT_DATAKEY_VARCHAR-1"},{"identifier":"DECRYPT_DATAKEY_CLOB","text":{"description":["Returns the decrypted value of an encrypted argument that was encrypted using the algorithm that was specified when the data was encrypted.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-decrypt-datakey-type"],"parameters":["@param encrypted-data — An expression that returns a built-in VARBINARY or BLOB value.","@param ccsid-constant — An integer constant that specifies the CCSID in which the data should be returned by the decryption function."]},"id":"DECRYPT_DATAKEY_CLOB-1"},{"identifier":"DECRYPT_DATAKEY_VARGRAPHIC","text":{"description":["Returns the decrypted value of an encrypted argument that was encrypted using the algorithm that was specified when the data was encrypted.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-decrypt-datakey-type"],"parameters":["@param encrypted-data — An expression that returns a built-in VARBINARY or BLOB value.","@param ccsid-constant — An integer constant that specifies the CCSID in which the data should be returned by the decryption function."]},"id":"DECRYPT_DATAKEY_VARGRAPHIC-1"},{"identifier":"DECRYPT_DATAKEY_DBCLOB","text":{"description":["Returns the decrypted value of an encrypted argument that was encrypted using the algorithm that was specified when the data was encrypted.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-decrypt-datakey-type"],"parameters":["@param encrypted-data — An expression that returns a built-in VARBINARY or BLOB value.","@param ccsid-constant — An integer constant that specifies the CCSID in which the data should be returned by the decryption function."]},"id":"DECRYPT_DATAKEY_DBCLOB-1"},{"identifier":"DECRYPT_DATAKEY_BIT","text":{"description":["Returns the decrypted value of an encrypted argument that was encrypted using the algorithm that was specified when the data was encrypted.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-decrypt-datakey-type"],"parameters":["@param encrypted-data — An expression that returns a built-in VARBINARY or BLOB value."]},"id":"DECRYPT_DATAKEY_BIT-1"},{"identifier":"DEGREES","text":{"description":["Returns the number of degrees for an argument that is expressed in radians.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-degrees"],"parameters":["@param numeric-expression — An expression that returns the value of any built-in numeric data type that is not DECFLOAT."]},"id":"DEGREES-1"},{"identifier":"DIFFERENCE","text":{"description":["Returns a value that represents the difference between the sounds of two strings based on applying the SOUNDEX function to the strings.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-difference"],"parameters":["@param expression-1 — A value that is a built-in numeric, character string, or graphic string data type that is not a LOB.","@param expression-2 — A value that is a built-in numeric, character string, or graphic string data type that is not a LOB."]},"id":"DIFFERENCE-1"},{"identifier":"DIGITS","text":{"description":["Returns a character string representation of a number.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-digits"],"parameters":["@param numeric-expression — An expression that returns a value that is a SMALLINT, INTEGER, BIGINT, or DECIMAL built-in numeric data type."]},"id":"DIGITS-1"},{"identifier":"DOUBLE","text":{"description":["Returns a double precision floating-point representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-double-precision-double"],"parameters":["@param numeric-expression — A value of any built-in numeric data type."]},"id":"DOUBLE-1"},{"identifier":"DOUBLE","text":{"description":["Returns a double precision floating-point representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-double-precision-double"],"parameters":["@param string-expression — A value of a character or graphic string (except a CLOB or DBCLOB) with a length attribute that is not greater than 255 bytes."]},"id":"DOUBLE-2"},{"identifier":"DOUBLE_PRECISION","text":{"description":["Returns a double precision floating-point representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-double-precision-double"],"parameters":["@param numeric-expression — A value of any built-in numeric data type."]},"id":"DOUBLE_PRECISION-1"},{"identifier":"DOUBLE_PRECISION","text":{"description":["Returns a double precision floating-point representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-double-precision-double"],"parameters":["@param string-expression — A value of a character or graphic string (except a CLOB or DBCLOB) with a length attribute that is not greater than 255 bytes."]},"id":"DOUBLE_PRECISION-2"},{"identifier":"DSN_XMLVALIDATE","text":{"description":["Returns an XML value that is the result of applying XML schema validation to the first argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-dsn-xmlvalidate"],"parameters":["@param string-expression — An expression that returns a built-in character, graphic, or binary string.","@param xml-expression — An expression that returns an XML value in the XML data type.","@param schema-name-string — An expression that returns a built-in varying length character string that is not a CLOB.","@param target-namespace-uri-string — An expression that returns a built-in varying length character string that is not a CLOB, with a length attribute that is not greater than 1000.","@param schema-location-string — An expression that returns a built-in varying length character string that is not a CLOB, with a length attribute that is not greater than 1000."]},"id":"DSN_XMLVALIDATE-1"},{"identifier":"EBCDIC_CHR","text":{"description":["Returns the character that corresponds to the EBCDIC code value that is specified by the argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-ebcdic-chr"],"parameters":["@param expression — An expression that returns a BIGINT, INTEGER, or SMALLINT built-in data type value."]},"id":"EBCDIC_CHR-1"},{"identifier":"EBCDIC_STR","text":{"description":["Returns an EBCDIC version of the string argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-ebcdic-str"],"parameters":["@param string-expression — An expression that returns a value of a built-in character or graphic string."]},"id":"EBCDIC_STR-1"},{"identifier":"ENCRYPT_DATAKEY","text":{"description":["Returns the argument as an encrypted value using the specified key label and algorithm.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-encrypt-datakey"],"parameters":["@param expression — An expression that contains the data to be encrypted.","@param key-label-name — An expression that contains the ICSF key label name."]},"id":"ENCRYPT_DATAKEY-1"},{"identifier":"ENCRYPT_TDES","text":{"description":["Returns the argument as an encrypted value using the Triple DES encryption algorithm.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-encrypt-tdes-encrypt"],"parameters":["@param data-string — An expression that returns the string value to be encrypted.","@param password-string — An expression that returns a CHAR or VARCHAR value with at least 6 bytes and no more than 127 bytes.","@param hint-string — An expression that returns a CHAR or VARCHAR value up to 32 bytes that is to help data owners remember passwords."]},"id":"ENCRYPT_TDES-1"},{"identifier":"EXP","text":{"description":["Returns the exponential function of an argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-exp"],"parameters":["@param numeric-expression — The argument must be an expression that returns the value of any built-in numeric data type that is not DECFLOAT."]},"id":"EXP-1"},{"identifier":"EXTRACT","text":{"description":["Returns a portion of a date or timestamp based on its arguments.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-extract"],"parameters":[]},"id":"EXTRACT-1"},{"identifier":"FIRST_VALUE","text":{"description":["Returns the expression value for the first row in an OLAP window.","This function is passthrough-only and cannot run on Db2 for z/OS without acceleration.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=expressions-olap-specification"],"parameters":["@param expression — The expression value."]},"id":"FIRST_VALUE-1"},{"identifier":"FLOAT","text":{"description":["Returns a floating-point representation of either a number or a string representation of a number.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-float"],"parameters":["@param numeric-expression — A number or a string representation of a number."]},"id":"FLOAT-1"},{"identifier":"FLOOR","text":{"description":["Returns the largest integer that is less than or equal to the argument","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-floor"],"parameters":["@param numeric-expression — The argument must be an expression that returns a value of any built-in numeric data type."]},"id":"FLOOR-1"},{"identifier":"GENERATE_UNIQUE","text":{"description":["Returns a character string of bit data that is unique compared to any other execution of the function.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-generate-unique-generate-unique-binary"],"parameters":[]},"id":"GENERATE_UNIQUE-1"},{"identifier":"GENERATE_UNIQUE_BINARY","text":{"description":["Returns a character string of bit data that is unique compared to any other execution of the function.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-generate-unique-generate-unique-binary"],"parameters":[]},"id":"GENERATE_UNIQUE_BINARY-1"},{"identifier":"GETHINT","text":{"description":["Returns the embedded password hint from encrypted data, if one exists.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-gethint"],"parameters":["@param encrypted-data — An expression that returns a string that contains a complete, encrypted data string."]},"id":"GETHINT-1"},{"identifier":"GETVARIABLE","text":{"description":["Returns a varying-length character string representation of the value of a session variable.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-getvariable"],"parameters":["@param string-constant — A string constant that contains the name of the session variable whose value is to be returned.","@param default-value — A string constant that contains the value to be returned if the specified variable does not exist or is not supported by Db2."]},"id":"GETVARIABLE-1"},{"identifier":"GRAPHIC","text":{"description":["Returns a fixed-length graphic string representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-graphic"],"parameters":["@param integer-expression — A value that is an integer data type (either SMALLINT, INTEGER, or BIGINT)."]},"id":"GRAPHIC-1"},{"identifier":"GRAPHIC","text":{"description":["Returns a fixed-length graphic string representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-graphic"],"parameters":["@param decimal-expression — A value that is a built-in decimal data type.","@param decimal-character — The single-byte character constant that is used to delimit the decimal digits in the result graphic string."]},"id":"GRAPHIC-2"},{"identifier":"GRAPHIC","text":{"description":["Returns a fixed-length graphic string representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-graphic"],"parameters":["@param floating-point-expression — A value that is a floating-point data type (DOUBLE or REAL)."]},"id":"GRAPHIC-3"},{"identifier":"GRAPHIC","text":{"description":["Returns a fixed-length graphic string representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-graphic"],"parameters":["@param decimal-floating-point-expression — A value that is a built-in decimal floating-point data type (DECFLOAT)."]},"id":"GRAPHIC-4"},{"identifier":"GRAPHIC","text":{"description":["Returns a fixed-length graphic string representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-graphic"],"parameters":["@param character-expression — A value that is an EBCDIC-encoded or Unicode-encoded character string.","@param integer — The length of the resulting fixed-length graphic string in the units that are either implicitly or explicitly specified."]},"id":"GRAPHIC-5"},{"identifier":"GRAPHIC","text":{"description":["Returns a fixed-length graphic string representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-graphic"],"parameters":["@param graphic-expression — A value that is a graphic string.","@param integer — The length of the resulting fixed-length graphic string in the units that are either implicitly or explicitly specified."]},"id":"GRAPHIC-6"},{"identifier":"GREATEST","text":{"description":["Returns the maximum value in a set of values.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-greatest"],"parameters":["@param expression — An expression that returns a value of any built-in data type other than a CLOB, DBCLOB, BLOB, ROWID, or XML."]},"id":"GREATEST-1"},{"identifier":"GROUPING","text":{"description":["Returns a value that indicates if a row returned in a GROUP BY result is a row generated by a grouping set that excludes the column represented by its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-grouping"],"parameters":["@param expression — An expression that matches a grouping-expression from the GROUP BY clause of the same subselect."]},"id":"GROUPING-1"},{"identifier":"HASH","text":{"description":["Returns a varying-length value that is the result of applying the specified algorithm to the first argument. It is intended for cryptographic purposes.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-hash"],"parameters":["@param expression — The string value that is to be hashed.","@param algorithm — An integer constant value of 0, 1, or 2 that indicates the hash algorithm to be used when the function name is HASH."]},"id":"HASH-1"},{"identifier":"HASH_CRC32","text":{"description":["Return a fixed-length value that is the result of applying a hash algorithm to an input argument. They are intended for cryptographic purposes.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=sf-hash-crc32-hash-md5-hash-sha1-hash-sha256"],"parameters":["@param expression — An expression that represents the string value that is to be hashed. The expression must return a built-in character string, graphic string, or binary string."]},"id":"HASH_CRC32-1"},{"identifier":"HASH_MD5","text":{"description":["Return a fixed-length value that is the result of applying a hash algorithm to an input argument. They are intended for cryptographic purposes.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=sf-hash-crc32-hash-md5-hash-sha1-hash-sha256"],"parameters":["@param expression — An expression that represents the string value that is to be hashed. The expression must return a built-in character string, graphic string, or binary string."]},"id":"HASH_MD5-1"},{"identifier":"HASH_SHA1","text":{"description":["Return a fixed-length value that is the result of applying a hash algorithm to an input argument. They are intended for cryptographic purposes.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=sf-hash-crc32-hash-md5-hash-sha1-hash-sha256"],"parameters":["@param expression — An expression that represents the string value that is to be hashed. The expression must return a built-in character string, graphic string, or binary string."]},"id":"HASH_SHA1-1"},{"identifier":"HASH_SHA256","text":{"description":["Return a fixed-length value that is the result of applying a hash algorithm to an input argument. They are intended for cryptographic purposes.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=sf-hash-crc32-hash-md5-hash-sha1-hash-sha256"],"parameters":["@param expression — An expression that represents the string value that is to be hashed. The expression must return a built-in character string, graphic string, or binary string."]},"id":"HASH_SHA256-1"},{"identifier":"HEX","text":{"description":["Returns a hexadecimal representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-hex"],"parameters":["@param expression — An expression that returns a value of any built-in data type that is not XML. A character or binary string must not have a maximum length greater than 16352."]},"id":"HEX-1"},{"identifier":"HOUR","text":{"description":["Returns the hour part of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-hour"],"parameters":["@param expression — An expression that returns a value of one of the following built-in data types: a time, a timestamp, a character string, a graphic string, or a numeric data type."]},"id":"HOUR-1"},{"identifier":"IDENTITY_VAL_LOCAL","text":{"description":["Returns the most recently assigned value for an identity column.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-identity-val-local"],"parameters":[]},"id":"IDENTITY_VAL_LOCAL-1"},{"identifier":"IFNULL","text":{"description":["Returns the first argument in a set of two arguments that is not null.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-ifnull"],"parameters":["@param expression — Arguments can be of either a built-in or user-defined data type and must be compatible.","@param expression — Arguments can be of either a built-in or user-defined data type and must be compatible."]},"id":"IFNULL-1"},{"identifier":"INSERT","text":{"description":["Returns a string that is composed of an argument inserted into another argument at the same position where some number of bytes have been deleted.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-insert"],"parameters":["@param source-string — The source string.","@param start — The starting point within the source string where the deletion of bytes and the insertion of another string is to begin.","@param length — The length of the string to replace in source-string starting at start.","@param insert-string — The string to be inserted into the source string, starting at the position identified by start."]},"id":"INSERT-1"},{"identifier":"INSTR","text":{"description":["Returns the starting position of the first occurrence of one string within another string.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-instr"],"parameters":["@param source-string — The source string in which the search is to take place.","@param search-string — The string that is the object of the search.","@param start — The position within source-string at which the search is to start.","@param instance — Which instance of search-string to search for within source-string."]},"id":"INSTR-1"},{"identifier":"INT","text":{"description":["Returns an integer representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-integer-int"],"parameters":["@param numeric-expression — A value of any built-in numeric data type."]},"id":"INT-1"},{"identifier":"INT","text":{"description":["Returns an integer representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-integer-int"],"parameters":["@param string-expression — A value of a character or graphic string (except a CLOB or DBCLOB) with a length attribute that is not greater than 255 bytes."]},"id":"INT-2"},{"identifier":"INTEGER","text":{"description":["Returns an integer representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-integer-int"],"parameters":["@param numeric-expression — A value of any built-in numeric data type."]},"id":"INTEGER-1"},{"identifier":"INTEGER","text":{"description":["Returns an integer representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-integer-int"],"parameters":["@param string-expression — A value of a character or graphic string (except a CLOB or DBCLOB) with a length attribute that is not greater than 255 bytes."]},"id":"INTEGER-2"},{"identifier":"JULIAN_DAY","text":{"description":["Returns an integer that represents the number of days from January 1, 4712 B.C.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-julian-day"],"parameters":["@param expression — An expression that returns one of the following data types: a date, a timestamp, or a valid string representation of a date or timestamp."]},"id":"JULIAN_DAY-1"},{"identifier":"LAG","text":{"description":["Returns the expression value for the row at offset rows before the current row.","This function is passthrough-only and cannot run on Db2 for z/OS without acceleration.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=expressions-olap-specification"],"parameters":["@param expression — An expression that specifies the current row.","@param offset — A positive integer constant.","@param default-value — An expression."]},"id":"LAG-1"},{"identifier":"LAST_DAY","text":{"description":["Returns a date that represents the last day of the month of the date argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-last-day"],"parameters":["@param expression — The starting date."]},"id":"LAST_DAY-1"},{"identifier":"LAST_VALUE","text":{"description":["Returns the expression value for the last row in an OLAP window.","This function is passthrough-only and cannot run on Db2 for z/OS without acceleration.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=expressions-olap-specification"],"parameters":["@param expression — An OLAP window."]},"id":"LAST_VALUE-1"},{"identifier":"LCASE","text":{"description":["Returns a string with the characters converted to lowercase.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-lcase"],"parameters":["@param string-expression — The string to be converted.","@param locale-name-string — A string constant or a string host variable other than a CLOB or DBCLOB that specifies a valid locale name.","@param integer — The length attribute of the result."]},"id":"LCASE-1"},{"identifier":"LEAD","text":{"description":["Returns the expression value for the row at offset rows after the current row.","This function is passthrough-only and cannot run on Db2 for z/OS without acceleration.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=expressions-olap-specification"],"parameters":["@param expression — The current row.","@param offset — A positive integer constant.","@param default-value — An expression"]},"id":"LEAD-1"},{"identifier":"LEAST","text":{"description":["Returns the minimum value in a set of values.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-least"],"parameters":["@param expression — An expression that returns a value of any built-in data type other than a CLOB, DBCLOB, BLOB, ROWID, or XML."]},"id":"LEAST-1"},{"identifier":"LEFT","text":{"description":["Returns a string that consists of the specified number of most bytes or the specified string units.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-left"],"parameters":["@param character-expression — The string from which the result is derived.","@param length — The length of the result."]},"id":"LEFT-1"},{"identifier":"LENGTH","text":{"description":["Returns the length of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-length"],"parameters":["@param expression — An expression that returns a value of any built-in data type that is not XML."]},"id":"LENGTH-1"},{"identifier":"LISTAGG","text":{"description":["Aggregates a set of strings into one string by concatenating the strings. Optionally, a separator string can be provided which is inserted between contiguous input strings.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-listagg"],"parameters":["@param string-expression — An expression that specifies the string values to aggregate.","@param separator - A constant expression that defines the string that is to be used between non-null string-expression values.","@param sort-key — Specifies a sort key value that is either a column name or an expression."]},"id":"LISTAGG-1"},{"identifier":"LN","text":{"description":["Returns the natural logarithm of an argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-ln"],"parameters":["@param numeric-expression — An expression that returns the value of any built-in numeric data type that is not DECFLOAT."]},"id":"LN-1"},{"identifier":"LOCATE","text":{"description":["Returns the starting position of one string within another string.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-locate"],"parameters":["@param search-string — The string that is to be searched for.","@param source-string — The source string in which the search is to take place.","@param start — The position within search-string where the search is to start."]},"id":"LOCATE-1"},{"identifier":"LOCATE_IN_STRING","text":{"description":["Returns the starting position of the first occurrence of one string within another string.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-locate-in-string"],"parameters":["@param search-string — The string that is to be searched for.","@param source-string — The source string in which the search is to take place.","@param start — The position within search-string where the search is to start.","@param instance — Which instance of search-string to search for within source-string."]},"id":"LOCATE_IN_STRING-1"},{"identifier":"LOG10","text":{"description":["Returns the base 10 logarithm of an argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-log10"],"parameters":["@param numeric-expression — An expression that returns the value of any built-in numeric data type that is not DECFLOAT."]},"id":"LOG10-1"},{"identifier":"LOWER","text":{"description":["Returns a string with the characters converted to lowercase.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-lower"],"parameters":["@param string-expression — The string to be converted.","@param locale-name-string — A string constant or a string host variable other than a CLOB or DBCLOB that specifies a valid locale name.","@param integer — The length attribute of the result."]},"id":"LOWER-1"},{"identifier":"LPAD","text":{"description":["Returns a string that is padded on the with blanks or a specified string.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-lpad"],"parameters":["@param string-expression — The source string.","@param integer — The length of the result.","@param pad — The string with which to pad."]},"id":"LPAD-1"},{"identifier":"LTRIM","text":{"description":["Returns the characters of a string with the leading blanks or hexadecimal zeros removed.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-ltrim"],"parameters":["@param string-expression — The source string.","@param trim-expression — The characters to remove from the beginning of string-expression."]},"id":"LTRIM-1"},{"identifier":"MAX","text":{"description":["Returns the maximum value in a set of column values in a group.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-max"],"parameters":["@param expression — The value of a built-in data type."]},"id":"MAX-1"},{"identifier":"MAX","text":{"description":["Returns the maximum value in a set of values.","The arguments must be compatible.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=sf-max"],"parameters":["@param expression — A value of any built-in data type other than a CLOB, DBCLOB, BLOB, ROWID, or XML."]},"id":"MAX-2"},{"identifier":"MAX_CARDINALITY","text":{"description":["Returns a value of type BIGINT that represents the maximum number of elements that an array can contain.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-max-cardinality"],"parameters":["@param array-expression — An SQL variable, SQL parameter, or global variable of an array type, or a CAST specification that specifies an SQL variable, SQL parameter, global variable, or parameter marker as the source value."]},"id":"MAX_CARDINALITY-1"},{"identifier":"MICROSECOND","text":{"description":["Returns the microsecond part of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-microsecond"],"parameters":["@param expression — An expression that returns a value of one of the following built-in data types: a timestamp, a character string, a graphic string, or a numeric data type."]},"id":"MICROSECOND-1"},{"identifier":"MIDNIGHT_SECONDS","text":{"description":["Returns an integer in the range 0 - 86400 that represents the number of seconds between midnight and the argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-midnight-seconds"],"parameters":["@param expression — An expression that returns a value of one of the following built-in data types: a time, a timestamp, a character string, or a graphic string."]},"id":"MIDNIGHT_SECONDS-1"},{"identifier":"MIN","text":{"description":["Returns the minimum value in a set of values in a group.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-min"],"parameters":["@param expression — The value of a built-in data type."]},"id":"MIN-1"},{"identifier":"MIN","text":{"description":["Returns the minimum value in a set of values.","The arguments must be compatible.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=sf-min"],"parameters":["@param expression — A value of any built-in data type other than a CLOB, DBCLOB, BLOB, ROWID, or XML."]},"id":"MIN-2"},{"identifier":"MINUTE","text":{"description":["Returns the minute part of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-minute"],"parameters":["@param expression — An expression that returns a value of one of the following built-in data types: a time, a timestamp, a character string, a graphic string, or a numeric data type."]},"id":"MINUTE-1"},{"identifier":"MOD","text":{"description":["Returns the remainder of one argument divided by a second argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-mod"],"parameters":["@param numeric-expression-1 — An expression that returns a value of any built-in numeric data type.","@param numeric-expression-2 — An expression that returns a value of any built-in numeric data type."]},"id":"MOD-1"},{"identifier":"MONTH","text":{"description":["Returns the month part of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-month"],"parameters":["@param expression — An expression that returns one of the following built-in data types: a date, a timestamp, a character string, a graphic string, or a numeric data type."]},"id":"MONTH-1"},{"identifier":"MONTHS_BETWEEN","text":{"description":["Returns an estimate of the number of months between two arguments.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-months-between"],"parameters":["@param expression1 — Expression that returns a value of any of the following built-in data types: a date, a timestamp, a character string, or a graphic string.","@param expression2 — Expression that returns a value of any of the following built-in data types: a date, a timestamp, a character string, or a graphic string."]},"id":"MONTHS_BETWEEN-1"},{"identifier":"MQREAD","text":{"description":["Returns a message from a specified MQSeries location (return value of VARCHAR) without removing the message from the queue.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-mqread"],"parameters":["@param receive-service — An expression that returns a value that is a built-in character string or graphic string data type that is not a LOB.","@param service-policy — An expression that returns a value that is a built-in character string or graphic string data type that is not a LOB."]},"id":"MQREAD-1"},{"identifier":"MQREADALL","text":{"description":["Returns a table containing the messages and message metadata from a specified MQSeries location with a VARCHAR column and without removing the messages from the queue.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-mqreadall"],"parameters":["@param receive-service — An expression that returns a value that is a built-in character string or graphic string data type that is not a LOB.","@param service-policy — An expression that returns a value that is a built-in character string or graphic string data type that is not a LOB.","@param num-rows — The maximum number of messages to return."]},"id":"MQREADALL-1"},{"identifier":"MQREADALLCLOB","text":{"description":["Returns a table containing the messages and message metadata from a specified MQSeries location with a CLOB column and without removing the messages from the queue.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-mqreadallclob"],"parameters":["@param receive-service — An expression that returns a value that is a built-in character string or graphic string data type that is not a LOB.","@param service-policy — An expression that returns a value that is a built-in character string or graphic string data type that is not a LOB.","@param num-rows — The maximum number of messages to return."]},"id":"MQREADALLCLOB-1"},{"identifier":"MQREADCLOB","text":{"description":["Returns a message from a specified MQSeries location (return value of CLOB) without removing the message from the queue.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-mqreadclob"],"parameters":["@param receive-service — An expression that returns a value that is a built-in character string or graphic string data type that is not a LOB.","@param service-policy — An expression that returns a value that is a built-in character string or graphic string data type that is not a LOB."]},"id":"MQREADCLOB-1"},{"identifier":"MQRECEIVE","text":{"description":["Returns a message from a specified MQSeries location (return value of VARCHAR) with removal of message from the queue.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-mqreceive"],"parameters":["@param receive-service — An expression that returns a value that is a built-in character string or graphic string data type that is not a LOB.","@param service-policy — An expression that returns a value that is a built-in character string or graphic string data type that is not a LOB.","@param correl-id — An expression that returns a value that is a built-in character string or graphic string data type that is not a LOB"]},"id":"MQRECEIVE-1"},{"identifier":"MQRECEIVEALL","text":{"description":["Returns a table containing the messages and message metadata from a specified MQSeries location with a VARCHAR column and with removal of messages from the queue.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-mqreceiveall"],"parameters":["@param receive-service — An expression that returns a value that is a built-in character string or graphic string data type that is not a LOB.","@param service-policy — An expression that returns a value that is a built-in character string or graphic string data type that is not a LOB.","@param correl-id — An expression that returns a value that is a built-in character string or graphic string data type that is not a LOB","@param num-rows — The maximum number of messages to return."]},"id":"MQRECEIVEALL-1"},{"identifier":"MQRECEIVEALLCLOB","text":{"description":["Returns a table containing the messages and message metadata from a specified MQSeries location with a CLOB column and with removal of messages from the queue.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-mqreceiveallclob"],"parameters":["@param receive-service — An expression that returns a value that is a built-in character string or graphic string data type that is not a LOB.","@param service-policy — An expression that returns a value that is a built-in character string or graphic string data type that is not a LOB.","@param correl-id — An expression that returns a value that is a built-in character string or graphic string data type that is not a LOB","@param num-rows — The maximum number of messages to return."]},"id":"MQRECEIVEALLCLOB-1"},{"identifier":"MQRECEIVECLOB","text":{"description":["Returns a message from a specified MQSeries location (return value of CLOB) with removal of message from the queue.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-mqreceiveclob"],"parameters":["@param receive-service — An expression that returns a value that is a built-in character string or graphic string data type that is not a LOB.","@param service-policy — An expression that returns a value that is a built-in character string or graphic string data type that is not a LOB.","@param correl-id — An expression that returns a value that is a built-in character string or graphic string data type that is not a LOB"]},"id":"MQRECEIVECLOB-1"},{"identifier":"MQSEND","text":{"description":["Sends data to a specified MQSeries location, and returns a varying-length character string that indicates whether the function was successful or unsuccessful.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-mqsend"],"parameters":["@param send-service — An expression that returns a value that is a built-in character string or graphic string data type that is not a LOB.","@param service-policy — An expression that returns a value that is a built-in character string or graphic string data type that is not a LOB.","@param msg-data — An expression that returns a value that is a built-in character string data type.","@param correl-id — An expression that returns a value that is a built-in character string or graphic string data type that is not a LOB."]},"id":"MQSEND-1"},{"identifier":"MULTIPLY_ALT","text":{"description":["Returns the product of the two arguments as a decimal value, used when the sum of the argument precisions exceeds 31.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-multiply-alt"],"parameters":["@param exact-numeric-expression-1 — An expression that returns the value of one of the following built-in numeric data types: DECIMAL, BIGINT, INTEGER, or SMALLINT.","@param exact-numeric-expression-2 — An expression that returns the value of one of the following built-in numeric data types: DECIMAL, BIGINT, INTEGER, or SMALLINT."]},"id":"MULTIPLY_ALT-1"},{"identifier":"NEXT_DAY","text":{"description":["Returns a timestamp that represents the first weekday, specified by the second argument, after the date argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-next-day"],"parameters":["@param expression — An expression that returns one of the following built-in data types: a date, a timestamp, a character string, or a graphic string.","@param string-expression — An expression that returns a built-in character or graphic string data type that is not a LOB."]},"id":"NEXT_DAY-1"},{"identifier":"NEXT_MONTH","text":{"description":["Returns the first day of the next month after the specified date.","This function is passthrough-only and cannot run on Db2 for z/OS without acceleration.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-next-month"],"parameters":["@param datetime-expression — An expression that specifies a date after which the first day of the next month is to be returned."]},"id":"NEXT_MONTH-1"},{"identifier":"NORMALIZE_DECFLOAT","text":{"description":["Returns a DECFLOAT value that is the result of normalizing the input argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-normalize-decfloat"],"parameters":["@param decfloat-expression — An expression that returns a DECFLOAT value."]},"id":"NORMALIZE_DECFLOAT-1"},{"identifier":"NORMALIZE_STRING","text":{"description":["Returns a string value that is the result of normalizing the input Unicode value.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-normalize-string"],"parameters":["@param unicode-string — An expression that returns a value of a built-in character string or graphic string data type that is either Unicode UTF-8 or Unicode UTF-16, and is not a LOB.","@param integer — The length attribute, in bytes if the string is a character string, or in double byte code points if the string is a graphic string, for the resulting variable length string."]},"id":"NORMALIZE_STRING-1"},{"identifier":"NTH_VALUE","text":{"description":["Returns the expression value for the nth-row row in an OLAP window.","This function is passthrough-only and cannot run on Db2 for z/OS without acceleration.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=expressions-olap-specification"],"parameters":["@param expression — An expression that specifies the current row in an OLAP window. The expression must return a value that is a built-in data type.","@param nth-row — An expression that specifies which row of the OLAP window to return. The expression must return a value that is a built-in numeric data type, a CHAR, or a VARCHAR data type."]},"id":"NTH_VALUE-1"},{"identifier":"NTILE","text":{"description":["Returns the quantile rank of a row.","This function is passthrough-only and cannot run on Db2 for z/OS without acceleration.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=expressions-olap-specification"],"parameters":["@param num-tiles — The number of quantiles.","@param window-partition-clause — The partition within which the OLAP operation is applied.","@param window-order-clause — The ordering of rows within a partition that is used to determine the value of the OLAP specification."]},"id":"NTILE-1"},{"identifier":"NULLIF","text":{"description":["Returns NULL if the arguments are equal; else the first argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-nullif"],"parameters":["@param expression — Arguments must be compatible and can be of either a built-in or user-defined data type."]},"id":"NULLIF-1"},{"identifier":"NVL","text":{"description":["Returns the first argument that is not null.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-nvl"],"parameters":["@param expression — Arguments must be compatible and can be of either a built-in or user-defined data type."]},"id":"NVL-1"},{"identifier":"OVERLAY","text":{"description":["Returns a string that is composed of an argument inserted into another argument at the same position where some number of bytes have been deleted.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-overlay"],"parameters":["@param source-string — An expression that specifies the source string.","@param insert-string — An expression that specifies the string that is inserted into source-string, starting at the position that is identified by start.","@param start — Integer that specifies the starting point within the source string where the deletion of bytes and the insertion of another string is to begin.","@param length — An expression that specifies the length of the string to replace in source-string starting at start."]},"id":"OVERLAY-1"},{"identifier":"PACK","text":{"description":["Returns a binary string value that contains a data type array and a packed representation of each non-null argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-pack"],"parameters":["@param expression — An expression that returns a value to be encoded in the result string."]},"id":"PACK-1"},{"identifier":"PERCENTILE_CONT","text":{"description":["Returns a percentile of a set of values.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-percentile-cont"],"parameters":["@param percentile-expr — The percentile that is to be calculated by the function.","@param sort-expression — The set of values over which to calculate the percentile and the order of the set."]},"id":"PERCENTILE_CONT-1"},{"identifier":"PERCENTILE_DISC","text":{"description":["Returns a percentile of a set of values.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-percentile-disc"],"parameters":["@param percentile-expr — The percentile that is to be calculated by the function.","@param sort-expression — The set of values over which to calculate the percentile and the order of the set."]},"id":"PERCENTILE_DISC-1"},{"identifier":"PERCENT_RANK","text":{"description":["Returns the relative percentile rank of a row that is hypothetically inserted into a group of rows.","This function is passthrough-only and cannot run on Db2 for z/OS without acceleration.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-percent-rank"],"parameters":["@param expression — Specifies a row that is hypothetically inserted into a group of rows.","@param order-by-clause — The order of the rows from the same grouping set that are processed in the aggregation."]},"id":"PERCENT_RANK-1"},{"identifier":"PERCENT_RANK","text":{"description":["Returns a relative percentile rank of a row in an OLAP window.","This function is passthrough-only and cannot run on Db2 for z/OS without acceleration.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=expressions-olap-specification"],"parameters":["@param window-partition-clause — The partition within which the OLAP operation is applied.","@param window-order-clause — The ordering of rows within a partition that is used to determine the value of the OLAP specification."]},"id":"PERCENT_RANK-2"},{"identifier":"POSITION","text":{"description":["Returns the position of the first occurrence of an argument within another argument where the position is expressed in terms of the string units that are specified.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-position"],"parameters":["@param search-string — An expression that specifies the string for which to search.","@param source-string — An expression that specifies the source string in which the search is to take place."]},"id":"POSITION-1"},{"identifier":"POSSTR","text":{"description":["Returns the position of the first occurrence of an argument within another argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-posstr"],"parameters":["@param source-string — An expression that specifies the source string in which the search is to take place.","@param search-string — An expression that specifies the string for which to search."]},"id":"POSSTR-1"},{"identifier":"POW","text":{"description":["Returns the value of one argument raised to the power of a second argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-power-pow"],"parameters":["@param numeric-expression-1 — An expression that returns the value of any built-in numeric data type.","@param numeric-expression-2 — An expression that returns the value of any built-in numeric data type."]},"id":"POW-1"},{"identifier":"POWER","text":{"description":["Returns the value of one argument raised to the power of a second argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-power-pow"],"parameters":["@param numeric-expression-1 — An expression that returns the value of any built-in numeric data type.","@param numeric-expression-2 — An expression that returns the value of any built-in numeric data type."]},"id":"POWER-1"},{"identifier":"QUANTIZE","text":{"description":["Returns a DECFLOAT value that is equal in value (except for any rounding) and sign to the first argument and which has an exponent set to be equal to the exponent of the second argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-quantize"],"parameters":["@param numeric-expression-1 — An expression that returns the value of any built-in numeric data type.","@param numeric-expression-2 — An expression that returns the value of any built-in numeric data type."]},"id":"QUANTIZE-1"},{"identifier":"QUARTER","text":{"description":["Returns an integer in the range 1 - 4 that represents the quarter of the year for the date specified in the argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-quarter"],"parameters":["@param expression — An expression that returns one of the following built-in data types: a date, a timestamp, a character string, or a graphic string."]},"id":"QUARTER-1"},{"identifier":"RADIANS","text":{"description":["Returns the number of radians for an argument that is expressed in degrees.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-radians"],"parameters":["@param numeric-expression — An expression that returns the value of any built-in numeric data type that is not DECFLOAT."]},"id":"RADIANS-1"},{"identifier":"RAISE_ERROR","text":{"description":["Raises an error in the SQLCA with the specified SQLSTATE and error description.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-raise-error"],"parameters":["@param sqlstate — An expression that returns a character string (CHAR or VARCHAR) of exactly 5 characters.","@param diagnostic-string — An expression that returns a character string with a data type of CHAR or VARCHAR and a length of up to 70 bytes."]},"id":"RAISE_ERROR-1"},{"identifier":"RAND","text":{"description":["Returns a double precision floating-point random number.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-random-rand"],"parameters":["@param numeric-expression — If numeric-expression is specified, it is used as the seed value. The argument must be an expression that returns a value of a built-in integer data type (SMALLINT or INTEGER)."]},"id":"RAND-1"},{"identifier":"RANDOM","text":{"description":["Returns a double precision floating-point random number.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-random-rand"],"parameters":["@param numeric-expression — If numeric-expression is specified, it is used as the seed value. The argument must be an expression that returns a value of a built-in integer data type (SMALLINT or INTEGER)."]},"id":"RANDOM-1"},{"identifier":"RATIO_TO_REPORT","text":{"description":["Returns the ratio of an argument to the sum of the arguments in an OLAP partition.","This function is passthrough-only and cannot run on Db2 for z/OS without acceleration.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=expressions-olap-specification"],"parameters":["@param expression — An expression that specifies the current row in an OLAP window."]},"id":"RATIO_TO_REPORT-1"},{"identifier":"REAL","text":{"description":["Returns a single precision floating-point representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-real"],"parameters":["@param numeric-expression — A value of any built-in numeric data type."]},"id":"REAL-1"},{"identifier":"REAL","text":{"description":["Returns a single precision floating-point representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-real"],"parameters":["@param string-expression — A value of a character or graphic string (except a CLOB or DBCLOB) with a length attribute that is not greater than 255 bytes."]},"id":"REAL-2"},{"identifier":"REGEXP_COUNT","text":{"description":["Returns a count of the number of times that a regular expression pattern is matched in a string.","This function is passthrough-only and cannot run on Db2 for z/OS without acceleration.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-regexp-count"],"parameters":["@param source-string — An expression that specifies the string in which the search is to take place.","@param pattern-expression — An expression that specifies the regular expression string that is the pattern for the search.","@param start — An expression that specifies the position within source-string at which the search is to start.","@param flags — An expression that specifies flags that controls aspects of the pattern matching."]},"id":"REGEXP_COUNT-1"},{"identifier":"REGEXP_INSTR","text":{"description":["Returns the starting or ending position of the matched substring, depending on the value of the return_option argument.","This function is passthrough-only and cannot run on Db2 for z/OS without acceleration.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-regexp-instr"],"parameters":["@param source-string — An expression that specifies the string in which the search is to take place.","@param pattern-expression — An expression that specifies the regular expression string that is the pattern for the search.","@param start — An expression that specifies the position within source-string at which the search is to start.","@param occurrence — An expression that specifies which occurrence of the pattern expression within the source string to search for.","@param return_option — An expression that specifies what is returned relative to the occurrence.","@param flags — An expression that specifies flags that controls aspects of the pattern matching.","@param group — An expression that specifies which capture group of the pattern expression is used to determine the position within source string to return."]},"id":"REGEXP_INSTR-1"},{"identifier":"REGEXP_LIKE","text":{"description":["Returns an INTEGER value of 0 or 1 indicating if the regular expression pattern is found in a string.","This function is passthrough-only and cannot run on Db2 for z/OS without acceleration.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-regexp-like"],"parameters":["@param source-string — An expression that specifies the string in which the search is to take place.","@param pattern-expression — An expression that specifies the regular expression string that is the pattern for the search.","@param start — An expression that specifies the position within source-string at which the search is to start.","@param flags — An expression that specifies flags that controls aspects of the pattern matching."]},"id":"REGEXP_LIKE-1"},{"identifier":"REGEXP_REPLACE","text":{"description":["Returns a modified version of the source string where occurrences of the regular expression pattern found in the source string are replaced with the specified replacement string.","This function is passthrough-only and cannot run on Db2 for z/OS without acceleration.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-regexp-replace"],"parameters":["@param source-string — An expression that specifies the string in which the search is to take place.","@param pattern-expression — An expression that specifies the regular expression string that is the pattern for the search.","@param replacement-string — An expression that specifies the replacement string for matching substrings.","@param start — An expression that specifies the position within source-string at which the search is to start.","@param occurrence — An expression that specifies which occurrence of the pattern expression within the source string to search for.","@param flags — An expression that specifies flags that controls aspects of the pattern matching."]},"id":"REGEXP_REPLACE-1"},{"identifier":"REGEXP_SUBSTR","text":{"description":["Returns one occurrence of a substring of a string that matches the regular expression pattern.","This function is passthrough-only and cannot run on Db2 for z/OS without acceleration.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-regexp-substr"],"parameters":["@param source-string — An expression that specifies the string in which the search is to take place.","@param pattern-expression — An expression that specifies the regular expression string that is the pattern for the search.","@param start — An expression that specifies the position within source-string at which the search is to start.","@param occurrence — An expression that specifies which occurrence of the pattern expression within the source string to search for.","@param flags — An expression that specifies flags that controls aspects of the pattern matching.","@param group — An expression that specifies which capture group of the pattern expression is used to determine the position within source string to return."]},"id":"REGEXP_SUBSTR-1"},{"identifier":"REGR_AVGX","text":{"description":["Return quantities that can be used to compute various diagnostic statistics needed for the evaluation of the quality and statistical validity of a regression model.","This function is passthrough-only and cannot run on Db2 for z/OS without acceleration.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=af-regression-functions-regr-avgx-regr-avgy-regr-count"],"parameters":["@param expression1 — Value of the dependent variable (that is, a y value).","@param expression2 — Value of the independent variable (that is, an x value)."]},"id":"REGR_AVGX-1"},{"identifier":"REGR_AVGY","text":{"description":["Return quantities that can be used to compute various diagnostic statistics needed for the evaluation of the quality and statistical validity of a regression model.","This function is passthrough-only and cannot run on Db2 for z/OS without acceleration.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=af-regression-functions-regr-avgx-regr-avgy-regr-count"],"parameters":["@param expression1 — Value of the dependent variable (that is, a y value).","@param expression2 — Value of the independent variable (that is, an x value)."]},"id":"REGR_AVGY-1"},{"identifier":"REGR_SXX","text":{"description":["Return quantities that can be used to compute various diagnostic statistics needed for the evaluation of the quality and statistical validity of a regression model.","This function is passthrough-only and cannot run on Db2 for z/OS without acceleration.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=af-regression-functions-regr-avgx-regr-avgy-regr-count"],"parameters":["@param expression1 — Value of the dependent variable (that is, a y value).","@param expression2 — Value of the independent variable (that is, an x value)."]},"id":"REGR_SXX-1"},{"identifier":"REGR_SXY","text":{"description":["Return quantities that can be used to compute various diagnostic statistics needed for the evaluation of the quality and statistical validity of a regression model.","This function is passthrough-only and cannot run on Db2 for z/OS without acceleration.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=af-regression-functions-regr-avgx-regr-avgy-regr-count"],"parameters":["@param expression1 — Value of the dependent variable (that is, a y value).","@param expression2 — Value of the independent variable (that is, an x value)."]},"id":"REGR_SXY-1"},{"identifier":"REGR_SYY","text":{"description":["Return quantities that can be used to compute various diagnostic statistics needed for the evaluation of the quality and statistical validity of a regression model.","This function is passthrough-only and cannot run on Db2 for z/OS without acceleration.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=af-regression-functions-regr-avgx-regr-avgy-regr-count"],"parameters":["@param expression1 — Value of the dependent variable (that is, a y value).","@param expression2 — Value of the independent variable (that is, an x value)."]},"id":"REGR_SYY-1"},{"identifier":"REGR_COUNT","text":{"description":["Returns the number of non-null number pairs used to fit a regression line.","This function is passthrough-only and cannot run on Db2 for z/OS without acceleration.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=af-regression-functions-regr-avgx-regr-avgy-regr-count"],"parameters":["@param expression1 — Value of the dependent variable (that is, a y value).","@param expression2 — Value of the independent variable (that is, an x value)."]},"id":"REGR_COUNT-1"},{"identifier":"REGR_ICPT","text":{"description":["Returns the y-intercept of a regression line (\\"b\\" in the equation y = a * x + b).","This function is passthrough-only and cannot run on Db2 for z/OS without acceleration.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=af-regression-functions-regr-avgx-regr-avgy-regr-count"],"parameters":["@param expression1 — Value of the dependent variable (that is, a y value).","@param expression2 — Value of the independent variable (that is, an x value)."]},"id":"REGR_ICPT-1"},{"identifier":"REGR_INTERCEPT","text":{"description":["Returns the y-intercept of the regression line.","This function is passthrough-only and cannot run on Db2 for z/OS without acceleration.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=af-regression-functions-regr-avgx-regr-avgy-regr-count"],"parameters":["@param expression1 — Value of the dependent variable (that is, a y value).","@param expression2 — Value of the independent variable (that is, an x value)."]},"id":"REGR_INTERCEPT-1"},{"identifier":"REGR_R2","text":{"description":["Returns the coefficient of determination (\\"R-squared\\" or \\"goodness-of-fit\\") for a regression.","This function is passthrough-only and cannot run on Db2 for z/OS without acceleration.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=af-regression-functions-regr-avgx-regr-avgy-regr-count"],"parameters":["@param expression1 — Value of the dependent variable (that is, a y value).","@param expression2 — Value of the independent variable (that is, an x value)."]},"id":"REGR_R2-1"},{"identifier":"REGR_SLOPE","text":{"description":["Returns the slope of a regression line (\\"a\\" in the equation y = a * x + b).","This function is passthrough-only and cannot run on Db2 for z/OS without acceleration.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=af-regression-functions-regr-avgx-regr-avgy-regr-count"],"parameters":["@param expression1 — Value of the dependent variable (that is, a y value).","@param expression2 — Value of the independent variable (that is, an x value)."]},"id":"REGR_SLOPE-1"},{"identifier":"REPEAT","text":{"description":["Returns a character string composed of an argument repeated a specified number of times.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-repeat"],"parameters":["@param expression — An expression that specifies the string to be repeated.","@param integer — A positive large integer value that specifies the number of times to repeat the string."]},"id":"REPEAT-1"},{"identifier":"REPLACE","text":{"description":["Returns a string in which all occurrences of an argument within a second argument are replaced with a third argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-replace"],"parameters":["@param source-string — An expression that specifies the source string.","@param search-string — An expression that specifies the string to be removed from the source string.","@param replace-string — An expression that specifies the replacement string."]},"id":"REPLACE-1"},{"identifier":"RID","text":{"description":["Returns the RID of a row.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-rid"],"parameters":["@param table-designator — Must uniquely identify a base table, a view, or a nested table expression of a subselect in which the function is referenced."]},"id":"RID-1"},{"identifier":"RIGHT","text":{"description":["Returns a string that consists of the specified number of rightmost bytes or specified string units.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-right"],"parameters":["@param string-expression — An expression that specifies the string from which the result is derived.","@param integer — An expression that specifies the length of the result."]},"id":"RIGHT-1"},{"identifier":"ROUND","text":{"description":["Returns a number rounded to the specified number of places to the right or of the decimal place.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-round"],"parameters":["@param numeric-expression-1 — An expression that returns a value of any built-in numeric data type.","@param numeric-expression-2 — An expression that returns a value that is a built-in numeric, character string or graphic string data type."]},"id":"ROUND-1"},{"identifier":"ROUND_TIMESTAMP","text":{"description":["Returns a timestamp rounded to the unit specified by the timestamp format string.","If expression is a date, Db2 passes the function through to IBM Db2 Analytics Accelerator as a passthrough-only expression.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-round-timestamp"],"parameters":["@param expression — An expression that returns a value of any of the following built-in data types: a date, a timestamp, a character string, or a graphic string.","@param format-string — An expression that returns a built-in character string or graphic string data type, with a length that is not greater than 255 bytes."]},"id":"ROUND_TIMESTAMP-1"},{"identifier":"ROWID","text":{"description":["Returns a row ID representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-rowid"],"parameters":["@param expression — An expression that returns a value of a built-in character string data type, other than a CLOB, with a maximum length that is no greater than 255 bytes."]},"id":"ROWID-1"},{"identifier":"RPAD","text":{"description":["Returns a string that is padded on the right with blanks or a specified string.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-rpad"],"parameters":["@param string-expression — An expression that specifies the source string.","@param integer — An integer constant that specifies the length of the result.","@param pad — An expression that specifies the string with which to pad."]},"id":"RPAD-1"},{"identifier":"RTRIM","text":{"description":["Returns the characters of an argument with the trailing blanks or hexadecimal zeros removed.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-rtrim"],"parameters":["@param string-expression — An expression that specifies the source string.","@param trim-expression — An expression that specifies the characters to remove from the end of string-expression."]},"id":"RTRIM-1"},{"identifier":"SCORE","text":{"description":["Returns a relevance score that measures how well a document matches the query used to search a text search index.","To use the SCORE function, Text Search for Db2 for z/OS must be installed and configured.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-score"],"parameters":["@param column-name — A qualified or unqualified name of a column that has a text search index that is to be searched.","@param search-argument — An expression that returns a value that is a string value (except a LOB) that contains the terms to be searched for and must not be all blanks or the empty string.","@param string-constant — A string constant that specifies the search argument options that are in effect for the function."]},"id":"SCORE-1"},{"identifier":"SECOND","text":{"description":["Returns the second part of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-second"],"parameters":["@param expression — An expression that returns a value of one of the following built-in data types: a time, a timestamp, a character string, a graphic string, or a numeric data type.","@param integer-constant — An integer constant that represents the scale for the fractional seconds portion of expression."]},"id":"SECOND-1"},{"identifier":"SIGN","text":{"description":["Returns the sign of an argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-sign"],"parameters":["@param numeric-expression — An expression that returns a value of any built-in numeric data type, except DECIMAL(31,31)."]},"id":"SIGN-1"},{"identifier":"SIN","text":{"description":["Returns the sine of an argument that is expressed as an angle in radians.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-sin"],"parameters":["@param expression — An expression that returns the value of any built-in numeric data type that is not DECFLOAT."]},"id":"SIN-1"},{"identifier":"SINH","text":{"description":["Returns the hyperbolic sine of an argument that is expressed as an angle in radians.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-sinh"],"parameters":["@param expression — An expression that returns the value of any built-in numeric data type that is not DECFLOAT."]},"id":"SINH-1"},{"identifier":"SMALLINT","text":{"description":["Returns a small integer representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-smallint"],"parameters":["@param numeric-expression — A value of any built-in numeric data type."]},"id":"SMALLINT-1"},{"identifier":"SMALLINT","text":{"description":["Returns a small integer representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-smallint"],"parameters":["@param string-expression — A value of character or graphic string (except a CLOB or DBCLOB) with a length attribute that is not greater than 255 bytes for a character string or 127 for a graphic string."]},"id":"SMALLINT-2"},{"identifier":"SOAPHTTPC","text":{"description":["Returns a CLOB or VARCHAR representation of XML data from a request to a web service.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-soaphttpc-soaphttpv"],"parameters":["@param endpoint_url — An expression that returns a value of a built-in character string or graphic string data type that is not a LOB.","@param soap_action — An expression that returns a value of a built-in character string or graphic string data type that is not a LOB.","@param soap_body — An expression that returns a value of a built-in character string data type that is defined as VARCHAR(3072) or CLOB(1M)."]},"id":"SOAPHTTPC-1"},{"identifier":"SOAPHTTPV","text":{"description":["Returns a CLOB or VARCHAR representation of XML data from a request to a web service.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-soaphttpc-soaphttpv"],"parameters":["@param endpoint_url — An expression that returns a value of a built-in character string or graphic string data type that is not a LOB.","@param soap_action — An expression that returns a value of a built-in character string or graphic string data type that is not a LOB.","@param soap_body — An expression that returns a value of a built-in character string data type that is defined as VARCHAR(3072) or CLOB(1M)."]},"id":"SOAPHTTPV-1"},{"identifier":"SOAPHTTPNC","text":{"description":["Returns a complete CLOB or VARCHAR representation of XML data from a complete request to a web service.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-soaphttpnc-soaphttpnv"],"parameters":["@param endpoint_url — Specifies the URL of the web service for which Db2 is acting as a client. endpoint_url is defined as a VARCHAR(4096) value.","@param soap_action — Specifies a SOAP action URI reference. soap_action is defined as a VARCHAR(4096) value.","@param soap_input — Specifies an XML document that contains the complete SOAP message."]},"id":"SOAPHTTPNC-1"},{"identifier":"SOAPHTTPNV","text":{"description":["Returns a complete CLOB or VARCHAR representation of XML data from a complete request to a web service.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-soaphttpnc-soaphttpnv"],"parameters":["@param endpoint_url — Specifies the URL of the web service for which Db2 is acting as a client. endpoint_url is defined as a VARCHAR(4096) value.","@param soap_action — Specifies a SOAP action URI reference. soap_action is defined as a VARCHAR(4096) value.","@param soap_input — Specifies an XML document that contains the complete SOAP message."]},"id":"SOAPHTTPNV-1"},{"identifier":"SOUNDEX","text":{"description":["Returns a value that represents the sound of the words in the argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-soundex"],"parameters":["@param expression — An expression that must return a value of any built-in numeric, character, or graphic string data type that is not a LOB."]},"id":"SOUNDEX-1"},{"identifier":"SPACE","text":{"description":["Returns a string that consists of the number of blanks the argument specifies.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-space"],"parameters":["@param numeric-expression — An expression that returns the value of any built-in integer data type."]},"id":"SPACE-1"},{"identifier":"SQRT","text":{"description":["Returns the square root of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-sqrt"],"parameters":["@param numeric-expression — An expression that returns the value of any built-in numeric data type."]},"id":"SQRT-1"},{"identifier":"STDDEV","text":{"description":["Returns the population standard deviation (division by n) of a set of numbers.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-stddev-pop-stddev"],"parameters":["@param numeric-expression — Argument values must each be the value of any built-in numeric data type, and their sum must be within the range of the data type of the result."]},"id":"STDDEV-1"},{"identifier":"STDDEV_POP","text":{"description":["Returns the population standard deviation (division by n) of a set of numbers.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-stddev-pop-stddev"],"parameters":["@param numeric-expression — Argument values must each be the value of any built-in numeric data type, and their sum must be within the range of the data type of the result."]},"id":"STDDEV_POP-1"},{"identifier":"STDDEV_SAMP","text":{"description":["Returns the sample standard deviation (division by n-1) of a set of numbers.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-stddev-samp"],"parameters":["@param numeric-expression — Argument values must each be the value of any built-in numeric data type, and their sum must be within the range of the data type of the result."]},"id":"STDDEV_SAMP-1"},{"identifier":"STRIP","text":{"description":["Returns the characters of a string with the blanks (or specified character) at the beginning, end, or both beginning and end of the string removed.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-strip"],"parameters":["@param string-expression — An expression that returns a value that is a built-in character string data type, graphic data type, binary string data type, or numeric data type.","@param trim-constant — Specifies a constant that indicates the binary, SBCS, or DBCS character that is to be removed."]},"id":"STRIP-1"},{"identifier":"STRLEFT","text":{"description":["Returns a string that consists of the specified number of most bytes or the specified string units.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-strleft"],"parameters":["@param character-expression — An expression that specifies the string from which the result is derived.","@param length — An expression that specifies the length of the result."]},"id":"STRLEFT-1"},{"identifier":"STRPOS","text":{"description":["Returns the position of the first occurrence of an argument within another argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-strpos"],"parameters":["@param source-string — An expression that specifies the source string in which the search is to take place.","@param search-string — An expression that specifies the string for which to search."]},"id":"STRPOS-1"},{"identifier":"STRRIGHT","text":{"description":["Returns a string that consists of the specified number of rightmost bytes or specified string units.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-strright"],"parameters":["@param string-expression — An expression that specifies the string from which the result is derived.","@param integer — An expression that specifies the length of the result."]},"id":"STRRIGHT-1"},{"identifier":"SUBSTR","text":{"description":["Returns a substring of a string.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-substr"],"parameters":["@param string-expression — An expression that specifies the string from which the result is derived.","@param start — An expression that specifies the position within string-expression to be the first character of the result.","@param length — An expression that specifies the length of the resulting substring."]},"id":"SUBSTR-1"},{"identifier":"SUBSTRING","text":{"description":["Returns a substring of a string using the specified string units.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-substring"],"parameters":["@param character-expression — The string from which the result is derived.","@param start — The position within the character-expression that is to be the first string unit of the result.","@param length — The maximum length of the resulting substring."]},"id":"SUBSTRING-1"},{"identifier":"SUBSTRING","text":{"description":["Returns a substring of a string using the specified string units.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-substring"],"parameters":["@param graphic-expression — The string from which the result is derived.","@param start — The position within the graphic-expression that is to be the first string unit of the result.","@param length — The maximum length of the resulting substring."]},"id":"SUBSTRING-2"},{"identifier":"SUBSTRING","text":{"description":["Returns a substring of a string using the specified string units.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-substring"],"parameters":["@param binary-expression — The string from which the result is derived.","@param start — The position within binary-expression to be the first byte of the result.","@param length — The maximum length of the resulting substring."]},"id":"SUBSTRING-3"},{"identifier":"SUM","text":{"description":["Returns the sum of a set of numbers.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-sum"],"parameters":["@param numeric-expression — The argument values can be of any built-in numeric data type, and their sum must be within the range of the data type of the result."]},"id":"SUM-1"},{"identifier":"TAN","text":{"description":["Returns the tangent of an argument that is expressed as an angle in radians.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-tan"],"parameters":["@param numeric-expression — An expression that returns the value of any built-in numeric data type that is not DECFLOAT."]},"id":"TAN-1"},{"identifier":"TANH","text":{"description":["Returns the hyperbolic tangent of an argument that is expressed as an angle in radians.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-tanh"],"parameters":["@param numeric-expression — An expression that returns the value of any built-in numeric data type that is not DECFLOAT."]},"id":"TANH-1"},{"identifier":"TIME","text":{"description":["Returns a time derived from its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-time"],"parameters":["@param expression — An expression that returns a value of one of the following built-in data types: a time, a timestamp, a character string, or a graphic string."]},"id":"TIME-1"},{"identifier":"TIMESTAMP","text":{"description":["Returns a timestamp derived from its arguments.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-timestamp"],"parameters":["See link for details."]},"id":"TIMESTAMP-1"},{"identifier":"TIMESTAMPADD","text":{"description":["Returns a timestamp derived from adding the specified interval to a timestamp.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-timestampadd"],"parameters":["@param interval — An expression that returns a value of a built-in SMALLINT or INTEGER data type.","@param number — An expression that returns a value of a built-in SMALLINT or INTEGER data type.","@param expression — An expression that returns a value of a built-in TIMESTAMP WITHOUT TIME ZONE data type."]},"id":"TIMESTAMPADD-1"},{"identifier":"TIMESTAMP_FORMAT","text":{"description":["Returns a timestamp for a character string expression, using a specified format to interpret the string.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-timestamp-format"],"parameters":["@param string-expression — An expression that returns a value of any built-in character or graphic string data type, other than a CLOB or DBCLOB, with an actual length that is not greater than 255 bytes.","@param format-string — An expression that returns a value that is a built-in character or graphic string data type, other than a CLOB or DBCLOB.","@param precision-constant — An integer constant that specifies the timestamp precision of the result."]},"id":"TIMESTAMP_FORMAT-1"},{"identifier":"TIMESTAMP_ISO","text":{"description":["Returns a timestamp derived from its arguments.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-timestamp-iso"],"parameters":["@param expression — An expression that returns a value of one of the following built-in data types: a TIMESTAMP WITHOUT TIME ZONE, a date, a time, a character string, or a graphic string."]},"id":"TIMESTAMP_ISO-1"},{"identifier":"TIMESTAMPDIFF","text":{"description":["Returns an estimated number of the specified intervals based on the difference between two timestamps.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-timestampdiff"],"parameters":["@param numeric-expression — An expression that returns a value that is a built-in SMALLINT or INTEGER data type.","@param string-expression — An expression that returns a value of a built-in character string or a graphic string data type that is not a LOB."]},"id":"TIMESTAMPDIFF-1"},{"identifier":"TIMESTAMP_TZ","text":{"description":["Returns a timestamp with a time zone derived from its arguments.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-timestamp-tz"],"parameters":["@param expression-1 — An expression that returns a value of one of the following built-in data types: a timestamp without time zone, a timestamp with time zone, a character string, a graphic string","@param expression-2 — An expression that returns a character string or a graphic string."]},"id":"TIMESTAMP_TZ-1"},{"identifier":"TO_CHAR","text":{"description":["Returns a character string representation of a timestamp value that has been formatted using a specified character template.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=sf-char"],"parameters":["@param character-expression — A value that must be a built-in CHAR or VARCHAR data type."]},"id":"TO_CHAR-1"},{"identifier":"TO_CHAR","text":{"description":["Returns a character string representation of a timestamp value that has been formatted using a specified character template.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=sf-char"],"parameters":["@param timestamp-expression — A value that must be a DATE or TIMESTAMP, or a valid character string or graphic string representation of a date or timestamp that is not a CLOB or DBCLOB.","@param format-string — A  built-in character string or graphic string data type that is not a LOB and has a length attribute that is not greater than 255 bytes."]},"id":"TO_CHAR-2"},{"identifier":"TO_CHAR","text":{"description":["Returns a character string representation of a timestamp value that has been formatted using a specified character template.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=sf-char"],"parameters":["@param numeric-expression — A value of any built-in numeric data type.","@param format-string — A value that is a built-in CHAR, VARCHAR, or numeric data type."]},"id":"TO_CHAR-3"},{"identifier":"TO_CLOB","text":{"description":["Returns a CLOB representation of the first argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=sf-clob"],"parameters":["@param character-expression — A value of a character string.","@param integer — An integer constant that specifies the length attribute of the resulting CLOB data type."]},"id":"TO_CLOB-1"},{"identifier":"TO_CLOB","text":{"description":["Returns a CLOB representation of the first argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=sf-clob"],"parameters":["@param graphic-expression — A value of a graphic string.","@param integer — An integer constant that specifies the length attribute of the resulting CLOB data type."]},"id":"TO_CLOB-2"},{"identifier":"TO_DATE","text":{"description":["Returns a timestamp value that is based on the interpretation of the input string using the specified format.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=sf-date"],"parameters":["@param string-expression — An expression that returns a value of any built-in character or graphic string data type, other than a CLOB or DBCLOB, with an actual length that is not greater than 255 bytes.","@param format-string — An expression that returns a value that is a built-in character or graphic string data type, other than a CLOB or DBCLOB.","@param precision-constant — An integer constant that specifies the timestamp precision of the result."]},"id":"TO_DATE-1"},{"identifier":"TO_NUMBER","text":{"description":["Returns a DECFLOAT(34) value that is based on the interpretation of the input string using the specified format.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-number"],"parameters":["@param string-expression — An expression that returns a value that is a CHAR and VARCHAR data type.","@param format-string — An expression that returns a value that is a built-in character string data type."]},"id":"TO_NUMBER-1"},{"identifier":"TOTALORDER","text":{"description":["Returns a SMALLINT value that indicates the comparison order of two arguments.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-totalorder"],"parameters":["@param expression1 — An expression that returns a built-in DECFLOAT value.","@param expression2 — An expression that returns a built-in DECFLOAT value."]},"id":"TOTALORDER-1"},{"identifier":"TO_TIMESTAMP","text":{"description":["Returns a timestamp for a character string expression, using a specified format to interpret the string.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=sf-timestamp"],"parameters":["@param string-expression — An expression that returns a value of any built-in character or graphic string data type, other than a CLOB or DBCLOB, with an actual length that is not greater than 255 bytes.","@param format-string — An expression that returns a value that is a built-in character or graphic string data type, other than a CLOB or DBCLOB.","@param precision-constant — An integer constant that specifies the timestamp precision of the result."]},"id":"TO_TIMESTAMP-1"},{"identifier":"TRANSLATE","text":{"description":["Returns a string with one or more characters translated.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-translate"],"parameters":["@param string-expression — An expression that specifies the string to be converted.","@param to-string — An expression that specifies the characters to which certain characters in string-expression are to be converted.","@param from-string — An expression that specifies the characters that if found in string-expression are to be converted.","@param pad — An expression that specifies the character with which to pad to-string if its length is less than from-string."]},"id":"TRANSLATE-1"},{"identifier":"TRIM","text":{"description":["Removes bytes from the beginning, from the end, or from both the beginning and end of a string expression.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-trim"],"parameters":["@param trim-constant — Specifies a constant that indicates the binary, SBCS, or DBCS character that is to be removed.","@param string-expression — An expression that returns a value that is a built-in character string data type, graphic data type, binary string data type, or numeric data type."]},"id":"TRIM-1"},{"identifier":"TRIM_ARRAY","text":{"description":["Returns an array after removing elements from the end of an ordinary array.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-trim-array"],"parameters":["@param array-expression — An SQL variable, SQL parameter, or global variable of an ordinary array type, or a CAST specification of a parameter marker to an array type. An associative array type cannot be specified.","@param numeric-expression — Specifies the number of elements that are trimmed from the end of the array."]},"id":"TRIM_ARRAY-1"},{"identifier":"TRUNC","text":{"description":["Returns a number truncated to the specified number of places to the right or of the decimal point.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-truncate-trunc"],"parameters":["@param numeric-expression-1 — An expression that returns a value of any built-in numeric data type.","@param numeric-expression-2 — An expression that returns a value that is a built-in SMALLINT or INTEGER data type."]},"id":"TRUNC-1"},{"identifier":"TRUNCATE","text":{"description":["Returns a number truncated to the specified number of places to the right or of the decimal point.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-truncate-trunc"],"parameters":["@param numeric-expression-1 — An expression that returns a value of any built-in numeric data type.","@param numeric-expression-2 — An expression that returns a value that is a built-in SMALLINT or INTEGER data type."]},"id":"TRUNCATE-1"},{"identifier":"TRUNC_TIMESTAMP","text":{"description":["Returns a timestamp truncated to the unit specified by the timestamp format string.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-trunc-timestamp"],"parameters":["@param expression — An expression that returns a value of any of the following built-in data types: a timestamp, a character string, or a graphic string.","@param format-string — An expression that returns a built-in character string or graphic string data type, with a length that is not greater than 255 bytes."]},"id":"TRUNC_TIMESTAMP-1"},{"identifier":"UCASE","text":{"description":["Returns a string with the characters converted to uppercase.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-ucase"],"parameters":["@param string-expression — An expression that specifies the string to be converted.","@param locale-name-string — A string constant or a string host variable other than a CLOB or DBCLOB that specifies a valid locale name.","@param integer — An integer value that specifies the length attribute of the result."]},"id":"UCASE-1"},{"identifier":"UNICODE","text":{"description":["Returns the Unicode (UTF-16) code value of the most character of the argument as an integer.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-unicode"],"parameters":["@param string-expression — Any built-in string data type that is not a LOB."]},"id":"UNICODE-1"},{"identifier":"UNICODE_STR","text":{"description":["Returns a string in Unicode (UTF-8 or UTF-16) that represents a Unicode encoding of the argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-unicode-str-unistr"],"parameters":["@param string-expression — An expression that returns a value of a built-in character or graphic string."]},"id":"UNICODE_STR-1"},{"identifier":"UNISTR","text":{"description":["Returns a string in Unicode (UTF-8 or UTF-16) that represents a Unicode encoding of the argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-unicode-str-unistr"],"parameters":["@param string-expression — An expression that returns a value of a built-in character or graphic string."]},"id":"UNISTR-1"},{"identifier":"UNPACK","text":{"description":["Returns a row of values that are derived from unpacking the input binary string. It is used to unpack a string that was encoded according to the PACK function.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-unpack"],"parameters":["@param expression — An expression that returns the string value to be unpacked."]},"id":"UNPACK-1"},{"identifier":"UPPER","text":{"description":["Returns a string with the characters converted to uppercase.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-upper"],"parameters":["@param string-expression — An expression that specifies the string to be converted.","@param locale-name-string — A string constant or a string host variable other than a CLOB or DBCLOB that specifies a valid locale name.","@param integer — An integer value that specifies the length attribute of the result."]},"id":"UPPER-1"},{"identifier":"VALUE","text":{"description":["Returns the value of the first non-null expression..","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-value"],"parameters":["@param expression — Arguments must be compatible and can be of either a built-in or user-defined data type."]},"id":"VALUE-1"},{"identifier":"VARBINARY","text":{"description":["Returns a varying-length binary string representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-varbinary"],"parameters":["@param string-expression — An expression that returns a value that is a built-in character string, graphic string, binary string, or a row ID type.","@param integer — An integer value that specifies the length attribute of the resulting binary string."]},"id":"VARBINARY-1"},{"identifier":"VARCHAR","text":{"description":["Returns the varying-length character string representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-varchar"],"parameters":["@param integer-expression — A value that is a built-in integer data type (SMALLINT, INTEGER, BIGINT)."]},"id":"VARCHAR-1"},{"identifier":"VARCHAR","text":{"description":["Returns the varying-length character string representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-varchar"],"parameters":["@param decimal-expression — A value that is a built-in decimal data type.","@param decimal-character — The single-byte character constant that is used to delimit the decimal digits in the result character string."]},"id":"VARCHAR-2"},{"identifier":"VARCHAR","text":{"description":["Returns the varying-length character string representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-varchar"],"parameters":["@param floating-point-expression — A value that is a built-in floating-point data type."]},"id":"VARCHAR-3"},{"identifier":"VARCHAR","text":{"description":["Returns the varying-length character string representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-varchar"],"parameters":["@param decimal-floating-point-expression — A value that is the built-in DECFLOAT data type."]},"id":"VARCHAR-4"},{"identifier":"VARCHAR","text":{"description":["Returns the varying-length character string representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-varchar"],"parameters":["@param character-expression — A value that is a built-in character data type.","@param integer — The length attribute for the resulting varying-length character string."]},"id":"VARCHAR-5"},{"identifier":"VARCHAR","text":{"description":["Returns the varying-length character string representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-varchar"],"parameters":["@param graphic-expression — A value that is a built-in graphic data type.","@param integer — The length attribute for the resulting varying-length graphic string."]},"id":"VARCHAR-6"},{"identifier":"VARCHAR","text":{"description":["Returns the varying-length character string representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-varchar"],"parameters":["@param datetime-expression — An expression whose value has one of the following three built-in data types: DATE, TIME, or TIMESTAMP."]},"id":"VARCHAR-7"},{"identifier":"VARCHAR","text":{"description":["Returns the varying-length character string representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-varchar"],"parameters":["@param row-ID-expression — A value that is a built-in row ID data type."]},"id":"VARCHAR-8"},{"identifier":"VARCHAR9","text":{"description":["Returns the fixed-length character string representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-varchar9"],"parameters":["@param decimal-expression — An expression that returns a value that is a built-in decimal data type.","@param decimal-character — Specifies the single-byte character constant (CHAR or VARCHAR) that is used to delimit the decimal digits in the result character string."]},"id":"VARCHAR9-1"},{"identifier":"VARCHAR_FORMAT","text":{"description":["Returns a varying-length character string representation of a timestamp, with the string in a specified format.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-varchar-format"],"parameters":["@param character-expression — A value that must be a built-in CHAR or VARCHAR data type."]},"id":"VARCHAR_FORMAT-1"},{"identifier":"VARCHAR_FORMAT","text":{"description":["Returns a varying-length character string representation of a timestamp, with the string in a specified format.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-varchar-format"],"parameters":["@param timestamp-expression — A value that must be a DATE or TIMESTAMP, or a valid character string or graphic string representation of a date or timestamp that is not a CLOB or DBCLOB.","@param format-string — A  built-in character string or graphic string data type that is not a LOB and has a length attribute that is not greater than 255 bytes."]},"id":"VARCHAR_FORMAT-2"},{"identifier":"VARCHAR_FORMAT","text":{"description":["Returns a varying-length character string representation of a timestamp, with the string in a specified format.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-varchar-format"],"parameters":["@param numeric-expression — A value of any built-in numeric data type.","@param format-string — A value that is a built-in CHAR, VARCHAR, or numeric data type."]},"id":"VARCHAR_FORMAT-3"},{"identifier":"VARGRAPHIC","text":{"description":["Returns a varying-length graphic string representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-vargraphic"],"parameters":["@param integer-expression — A value that is an integer data type (either SMALLINT, INTEGER, or BIGINT)."]},"id":"VARGRAPHIC-1"},{"identifier":"VARGRAPHIC","text":{"description":["Returns a varying-length graphic string representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-vargraphic"],"parameters":["@param decimal-expression — A value that is a built-in decimal data type.","@param decimal-character — The single-byte character constant that is used to delimit the decimal digits in the result graphic string."]},"id":"VARGRAPHIC-2"},{"identifier":"VARGRAPHIC","text":{"description":["Returns a varying-length graphic string representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-vargraphic"],"parameters":["@param floating-point-expression — A value that is a floating-point data type (DOUBLE or REAL)."]},"id":"VARGRAPHIC-3"},{"identifier":"VARGRAPHIC","text":{"description":["Returns a varying-length graphic string representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-vargraphic"],"parameters":["@param decimal-floating-point-expression — A value that is a built-in decimal floating-point data type (DECFLOAT)."]},"id":"VARGRAPHIC-4"},{"identifier":"VARGRAPHIC","text":{"description":["Returns a varying-length graphic string representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-vargraphic"],"parameters":["@param character-expression — A value of a built-in character string data type that contains an EBCDIC-encoded or Unicode-encoded character string value.","@param integer — The length attribute of the resulting varying-length graphic string."]},"id":"VARGRAPHIC-5"},{"identifier":"VARGRAPHIC","text":{"description":["Returns a varying-length graphic string representation of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-vargraphic"],"parameters":["@param graphic-expression — A value of a built-in graphic string data type that contains an EBCDIC-encoded or Unicode-encoded graphic string value.","@param integer — The length attribute of the resulting varying-length graphic string."]},"id":"VARGRAPHIC-6"},{"identifier":"VAR","text":{"description":["Returns the biased variance (division by n) of a set of numbers.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-var-pop-variance-var"],"parameters":["@param numeric-expression — The argument values can be of any built-in numeric type, and their sum must be within the range of the data type of the result."]},"id":"VAR-1"},{"identifier":"VAR_POP","text":{"description":["Returns the biased variance (division by n) of a set of numbers.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-var-pop-variance-var"],"parameters":["@param numeric-expression — The argument values can be of any built-in numeric type, and their sum must be within the range of the data type of the result."]},"id":"VAR_POP-1"},{"identifier":"VARIANCE","text":{"description":["Returns the biased variance (division by n) of a set of numbers.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-var-pop-variance-var"],"parameters":["@param numeric-expression — The argument values can be of any built-in numeric type, and their sum must be within the range of the data type of the result."]},"id":"VARIANCE-1"},{"identifier":"VAR_SAMP","text":{"description":["Returns the sample variance (division by n-1) of a set of numbers.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-var-samp-variance-samp"],"parameters":["@param numeric-expression — The argument values can be of any built-in numeric type, and their sum must be within the range of the data type of the result."]},"id":"VAR_SAMP-1"},{"identifier":"VARIANCE_SAMP","text":{"description":["Returns the sample variance (division by n-1) of a set of numbers.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-var-samp-variance-samp"],"parameters":["@param numeric-expression — The argument values can be of any built-in numeric type, and their sum must be within the range of the data type of the result."]},"id":"VARIANCE_SAMP-1"},{"identifier":"VERIFY_GROUP_FOR_USER","text":{"description":["Returns a value that indicates whether the primary authorization ID and the group authorization IDs that are associated with the first argument are included in the authorization names that are specified in the list of the second argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-verify-group-user"],"parameters":["@param group-name-expression — An expression that specifies an authorization name."]},"id":"VERIFY_GROUP_FOR_USER-1"},{"identifier":"VERIFY_ROLE_FOR_USER","text":{"description":["Returns a value that indicates whether the roles that are associated with the first argument are included in the role names that are specified in the list of the second argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-verify-role-user"],"parameters":["@param role-name-expression — An expression that specifies a role name."]},"id":"VERIFY_ROLE_FOR_USER-1"},{"identifier":"VERIFY_TRUSTED_CONTEXT_ROLE_FOR_USER","text":{"description":["Returns a value that indicates whether the authorization ID that is associated with first argument has acquired a role in a trusted connection and whether that acquired role is included in the role names that are specified in the list of the second argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-verify-trusted-context-role-user"],"parameters":["@param role-name-expression — An expression that specifies a role name."]},"id":"VERIFY_TRUSTED_CONTEXT_ROLE_FOR_USER-1"},{"identifier":"WEEK","text":{"description":["Returns an integer that represents the week of the year with Sunday as the first day of the week.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-week"],"parameters":["@param expression — An expression that returns a value of one of the following built-in data types: a date, a timestamp, a character string, or a graphic string."]},"id":"WEEK-1"},{"identifier":"WEEK_ISO","text":{"description":["Returns an integer that represents the week of the year with Monday as first day of a week.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-week-iso"],"parameters":["@param expression — A date, a timestamp, or a valid string representation of a date or timestamp."]},"id":"WEEK_ISO-1"},{"identifier":"WRAP","text":{"description":["Encodes a readable data definition statement into an obfuscated data definition statement.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-wrap"],"parameters":["@param object-defintion-string — A string of any built-in character type that contains any of the following data definition statements: CREATE FUNCTION (compiled SQL scalar), CREATE FUNCTION (inlined SQL scalar), CREATE FUNCTION (SQL table), CREATE PROCEDURE (SQL - native), CREATE TRIGGER (basic), CREATE TRIGGER (advanced)."]},"id":"WRAP-1"},{"identifier":"XMLAGG","text":{"description":["Returns an XML type that represents a concatenation of XML elements from a collection of XML elements.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-xmlagg"],"parameters":["@param XML-expression — An expression that returns an XML value.","@param sort-key — Specifies a sort key value that is either a column name or an expression."]},"id":"XMLAGG-1"},{"identifier":"XMLATTRIBUTES","text":{"description":["Returns an XML sequence that contains an XQuery attribute node for each non-null argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-xmlattributes"],"parameters":["@param attribute-value-expression — An expression that returns a value for the attribute.","@param attribute-name — Specifies an attribute name."]},"id":"XMLATTRIBUTES-1"},{"identifier":"XMLCOMMENT","text":{"description":["Returns an XML value with a single comment node from a string expression.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-xmlcomment"],"parameters":["@param string-expression — An expression that returns a value of a built-in character or graphic string that is not a LOB and is not bit data."]},"id":"XMLCOMMENT-1"},{"identifier":"XMLCONCAT","text":{"description":["Returns an XML value that represents a forest of XML elements generated by concatenating a variable number of arguments.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-xmlconcat"],"parameters":["@param XML-expression — An expression that returns an XML value."]},"id":"XMLCONCAT-1"},{"identifier":"XMLDOCUMENT","text":{"description":["Returns an XML value with a single document node and zero or more nodes as its children.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-xmldocument"],"parameters":["@param XML-expression — An expression that returns an XML value."]},"id":"XMLDOCUMENT-1"},{"identifier":"XMLELEMENT","text":{"description":["Returns an XML value that represents an XML element.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-xmlelement"],"parameters":["@param element-name — Specifies the name of an XML element.","@param xmlnamespace-declaration — Specifies the XML namespace declarations that are the result of the XMLNAMESPACES function.","@param xmlattributes-function — Specifies the attributes for the XML element.","@param element-content-expression — The content of the generated XML element node is specified by an expression or a list of expressions.","@param option — Specifies additional options for constructing the XML element."]},"id":"XMLELEMENT-1"},{"identifier":"XMLFOREST","text":{"description":["Returns an XML value that represents a forest of XML elements that all share a specific pattern.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-xmlforest"],"parameters":["@param xmlnamespace-function — The XML namespace declarations that are the result of the XMLNAMESPACES function.","@param element-content-expression — An expression that returns a value that is used for the content of a generated XML element.","@param element-name — An identifier that is used for the XML element name.","@param option — Specifies options for the result for NULL values, binary data, and bit data."]},"id":"XMLFOREST-1"},{"identifier":"XMLMODIFY","text":{"description":["Returns an XML value that might have been modified by the evaluation of an XQuery updating expression and XQuery variables that are specified as input arguments.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-xmlmodify"],"parameters":["@param xquery-update-constant — An SQL character string constant that is interpreted as an XQuery updating expression that uses supported XQuery language syntax.","@param query-variable-expression — An SQL expression whose value is available to the XQuery expression that is specified by xquery-update-constant during execution.","@param identifier — Specifies that the value that is generated by xquery-variable-expression is passed to xquery-update-constant as an XQuery variable named identifier."]},"id":"XMLMODIFY-1"},{"identifier":"XMLNAMESPACES","text":{"description":["Returns the declaration of one or more XML namespaces.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-xmlnamespaces"],"parameters":["@param namespace-uri — Specifies an SQL character string constant that contains the namespace name or a universal resource identifier (URI).","@param namespace-prefix — Specifies a namespace prefix.","@param namespace-uri — Specifies whether a default namespace is to be used within the scope of this namespace declaration."]},"id":"XMLNAMESPACES-1"},{"identifier":"XMLPARSE","text":{"description":["Returns an XML value from parsing the argument as an XML document.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-xmlparse"],"parameters":["@param string-expression — An expression that returns a character, graphic, or binary string.","@param XML-host-variable — An XML host variable that contains a well-formed XML document as defined in XML 1.0."]},"id":"XMLPARSE-1"},{"identifier":"XMLPI","text":{"description":["Returns an XML value with a single processing instruction node.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-xmlpi"],"parameters":["@param pi-name — Specifies the name of a processing instruction.","@param string-expression — An expression that returns a value of a built-in character or graphic string that is not a LOB and is not bit data."]},"id":"XMLPI-1"},{"identifier":"XMLQUERY","text":{"description":["Returns an XML value from the evaluation of an XPath expression against a set of arguments.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-xmlquery"],"parameters":["@param xquery-expression-constant — Specifies an SQL character string constant that is interpreted as an XQuery expression using supported XQuery language syntax.","@param xquery-argument — Specifies an argument that is passed to the XQuery expression that is specified by xquery-expression-constant."]},"id":"XMLQUERY-1"},{"identifier":"XMLSERIALIZE","text":{"description":["Returns an SQL character string or a BLOB value from an XML value.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-xmlserialize"],"parameters":["@param XML-expression — An expression that returns an XML value that is not an attribute node."]},"id":"XMLSERIALIZE-1"},{"identifier":"XMLTABLE","text":{"description":["Returns a result table from the evaluation of XQuery expressions, possibly using specified input arguments as XQuery variables.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-xmltable"],"parameters":["@param xmlnamespaces-declaration — One or more XML namespace declarations, using the XMLNAMESPACES function, that become part of the static context of the row-xquery-expression-constant and the column-xquery-expression-constant.","@param row-xquery-expression-constant — An SQL character string constant that is interpreted as an XQuery expression using supported XQuery language syntax.","@param row-xquery-argument — An argument that is to be passed to the XQuery expression specified by row-xquery-expression-constant.","@param xml-table-regular-column-definition — One output column of the result table including the column name, data type, and an XQuery expression to extract the value from the sequence item for the row.","@param xml-table-ordinality-column-definition — The ordinality column of the result table."]},"id":"XMLTABLE-1"},{"identifier":"XMLTEXT","text":{"description":["Returns an XML value with a single text node that contains the value of the argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-xmltext"],"parameters":["@param string-expression — An expression that returns a value of a built-in character or graphic string that is not bit data."]},"id":"XMLTEXT-1"},{"identifier":"XMLXSROBJECTID","text":{"description":["Returns the XSR object identifier of the XML schema that is used to validate the XML document specified in the argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-xmlxsrobjectid"],"parameters":["@param xml-value-expression — An expression that results in a value with a data type of XML."]},"id":"XMLXSROBJECTID-1"},{"identifier":"XSLTRANSFORM","text":{"description":["The XSLTRANSFORM function transforms an XML document into a different data format. The output can be any form possible for the XSLT processor, including but not limited to XML, HTML, and plain text.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-xsltransform"],"parameters":["@param xml-document — An expression that returns a well-formed XML document with a data type of CHAR, VARCHAR, or CLOB(2 MB).","@param xsl-stylesheet — An expression that returns a well-formed XML document with a data type of CHAR, VARCHAR, or CLOB(256 KB).","@param xsl-parameters — An expression that returns a well-formed XML document or empty string with a data type of CHAR, VARCHAR, or CLOB(64 KB)."]},"id":"XSLTRANSFORM-1"},{"identifier":"YEAR","text":{"description":["Returns the year part of its argument.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=functions-year"],"parameters":["@param expression — An expression that returns one of the following built-in data types: a date, a timestamp, a character string, a graphic string, or a numeric data type."]},"id":"YEAR-1"}]}')},53382:e=>{"use strict";e.exports=JSON.parse('{"items":[{"identifier":"ADMIN_COMMAND_DB2","text":{"description":["Executes one or more Db2 commands on a connected Db2 subsystem, or on a Db2 data sharing group member.","Returns the command output messages.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-admin-command"],"parameters":["@param db2-command — Any Db2 command. If multiple, use null value (CHAR string of \'\\\\0\') as delimiter.","@param command-length — The length of the Db2 command(s).","@param processing-type — The action that you want ADMIN_COMMAND_DB2 to complete.","@param db2-member — The name of a single data sharing group member on which an IFI request is to be executed.","@param commands-executed — The number of commands that were executed.","@param IFI-return-code — The IFI return code.","@param IFI-reason-code — The IFI reason code.","@param excess-bytes — The number of bytes that did not fit in the return area.","@param group-IFI-reason-code — The reason code for the situation in which an IFI call requests data from members of a data sharing group, and not all the data is returned from group members.","@param group-excess-bytes — The total length of data that was returned from other data sharing group members and did not fit in the return area.","@param return-code — The return code from the stored procedure.","@param message — The messages describing the SQL error encountered by the stored procedure."]},"id":"ADMIN_COMMAND_DB2-1"},{"identifier":"ADMIN_COMMAND_DSN","text":{"description":["Executes a BIND, REBIND, or FREE DSN subcommand.","Returns the output from the DSN subcommand execution.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-admin-command-dsn"],"parameters":["@param DSN-subcommand — The DSN subcommand to be executed.","@param messages — Contains messages if an error occurs during stored procedure execution."]},"id":"ADMIN_COMMAND_DSN-1"},{"identifier":"ADMIN_COMMAND_MVS","text":{"description":["Issues the QUERY COPYPOOL, LIST COPYPOOL, Db2 START, Db2 STOP, DUMP, or DISPLAY WLM command.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-admin-command-mvs"],"parameters":["@param type — The type of command to be issued.","@param command_prefix — The command prefix that identifies which Db2 subsystem to direct the command to.","@param remote_system — The z/OS system to which the Db2 command is to be routed.","@param jobname — The name of the batch job or started task to be modified.","@param command — The command to be executed.","@param parameters — The parameters of the command, or the program parameters that will be passed to the started task.","@param subparameters — The sub-parameters of the command.","@param wait_timeout — The amount of time (in seconds) that this procedure waits for the command to complete and for the message to be routed to the console.","@param return_code — The return code from the stored procedure.","@param command_completion_code — The completion status of the command.","@param message — Contains messages that describe the error that was encountered by the stored procedure."]},"id":"ADMIN_COMMAND_MVS-1"},{"identifier":"ADMIN_COMMAND_UNIX","text":{"description":["Executes a z/OS UNIX System Services command and returns the output.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-admin-command-unix"],"parameters":["@param user-ID — The user ID under which the z/OS UNIX System Services command is issued.","@param password — The password associated with the input parameter user-ID.","@param USS-command — The z/OS UNIX System Services command to be executed.","@param output-layout — Specifies how the output from the z/OS UNIX System Services command is returned and the default home directory of the specified user-ID.","@param return-code — The return code from the stored procedure.","@param message — Contains messages describing the error encountered by the stored procedure."]},"id":"ADMIN_COMMAND_UNIX-1"},{"identifier":"ADMIN_DS_BROWSE","text":{"description":["Returns either text or binary records from certain data sets or their members.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-admin-ds-browse"],"parameters":["@param data-type — The type of data to be browsed and how the data set will be allocated.","@param data-set-name — The name of the data set, or of the library that contains the member to be browsed.","@param member-name — The name of the PDS or PDSE member, if reading from a PDS or PDSE member.","@param dump-option — Whether or not to use the Db2 standard dump facility.","@param return-code — The return code from the stored procedure.","@param message — Contains messages describing the error encountered by the stored procedure."]},"id":"ADMIN_DS_BROWSE-1"},{"identifier":"ADMIN_DS_DELETE","text":{"description":["Deletes certain data sets or their members.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-admin-ds-delete"],"parameters":["@param data-set-type — The type of data set to delete.","@param data-set-name — The name of the data set, library member, or GDS absolute generation number to be deleted.","@param parent-data-set-name — The name of the library that contains the member to be deleted, or of the GDG that contains the GDS to be delete.","@param dump-option — Whether or not to use the Db2 standard dump facility.","@param return-code — The return code from the stored procedure.","@param message — Contains messages describing the error encountered by the stored procedure."]},"id":"ADMIN_DS_DELETE-1"},{"identifier":"ADMIN_DS_LIST","text":{"description":["Returns a list of data set names, a generation data group (GDG), a partitioned data set (PDS) member, a partitioned data set extended (PDSE) member, or generation data sets of a GDG.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-admin-ds-list"],"parameters":["@param data-set-name — The data set name.","@param list-members — Whether or not to list PDS or PDSE members.","@param list-generations — Whether or not to list generation data sets.","@param max-results — The maximum number of result set rows.","@param dump-option — Whether or not to use the Db2 standard dump facility.","@param return-code — The return code from the stored procedure.","@param message — Contains messages describing the error encountered by the stored procedure."]},"id":"ADMIN_DS_LIST-1"},{"identifier":"ADMIN_DS_RENAME","text":{"description":["Renames a physical sequential (PS) data set, a partitioned data set (PDS), a partitioned data set extended (PDSE), or a member of a PDS or PDSE.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-admin-ds-rename"],"parameters":["@param data-set-type — The type of data set to rename.","@param data-set-name — The data set or member to be renamed.","@param parent-data-set-name — The name of the PDS or PDSE, if renaming a PDS or PDSE member.","@param new-data-set-name — The new data set or member name.","@param dump-option — Whether or not to use the Db2 standard dump facility","@param return-code — The return code from the stored procedure.","@param message — Contains messages based on return-code and data-set-type combinations."]},"id":"ADMIN_DS_RENAME-1"},{"identifier":"ADMIN_DS_SEARCH","text":{"description":["Determines if certain data sets are cataloged, or if a library member of a cataloged data set exists.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-admin-ds-search"],"parameters":["@param data-set-name — The name of a PS data set, PDS, PDSE, GDG or GDS.","@param member-name — The name of a PDS or PDSE member.","@param dump-option — Whether or not to use the Db2 standard dump facility.","@param data-set-exists — Whether or not a data set or library member exists.","@param return-code — The return code from the stored procedure.","@param message — Contains IDCAMS messages if return-code is 0. Otherwise, contains messages describing the error."]},"id":"ADMIN_DS_SEARCH-1"},{"identifier":"ADMIN_DS_WRITE","text":{"description":["Writes either text or binary records that are passed in a global temporary table to data sets or their members.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-admin-ds-write"],"parameters":["@param data-type — The type of data to be saved.","@param data-set-name — The name of the data set, GDG that contains the GDS, or library that contains the member, to be written to.","@param member-name — The relative generation number of the GDS, if writing to a GDS, or the name of the PDS or PDSE member, if writing to a PDS or PDSE member.","@param processing-option — The type of operation.","@param dump-option — Whether or not to use the Db2 standard dump facility.","@param return-code — The return code from the stored procedure.","@param message — Contains messages describing the error encountered by the stored procedure."]},"id":"ADMIN_DS_WRITE-1"},{"identifier":"ADMIN_EXPLAIN_MAINT","text":{"description":["Creates EXPLAIN tables, upgrades the tables to the format for the current Db2 version, and completes other administrative tasks.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-admin-explain-maint"],"parameters":["@param mode — The processing mode.","@param action — The action that is completed for the EXPLAIN tables in the specified schema.","@param manage-alias — Whether or not to create aliases for EXPLAIN tables.","@param table-set — The list of EXPLAIN tables to be created.","@param authid — The CURRENT SQLID setting.","@param schema-name — The schema name that qualifies the EXPLAIN tables.","@param schema-alias — The schema name that qualifies aliases that are created when the action value is CREATE_ALIAS.","@param database-name — The database that contains the new EXPLAIN tables.","@param stogroup-database — The storage group for the database that contains the new EXPLAIN tables.","@param stogroup-index — The storage group for the indexes for the new EXPLAIN tables.","@param 4k-bufferpool — The name of the 4-KB page buffer pool that is assigned to new table spaces.","@param 8k-bufferpool — The name of the 8 KB page buffer pool that is assigned to new table spaces.","@param 16k-bufferpool — The name of the 16 KB page buffer pool that is assigned to new table spaces.","@param 32k-bufferpool — The name of the 32 KB page buffer pool that is assigned to new table spaces.","@param index-bufferpool — The name of the buffer pool for the indexes for the new EXPLAIN tables.","@param bp-4kb-lob — The name of the 4-KB page buffer pool that is assigned to new LOB tables spaces for the new auxiliary tables of the new EXPLAIN tables.","@param bp-8kb-lob — The name of the 8-KB page buffer pool that is assigned to new LOB tables spaces for the new auxiliary tables of the new EXPLAIN tables.","@param bp-16kb-lob — The name of the 16-KB page buffer pool that is assigned to new LOB tables spaces for the new auxiliary tables of the new EXPLAIN tables.","@param bp-32kb-lob — he name of the 32-KB page buffer pool that is assigned to new LOB tables spaces for the new auxiliary tables of the new EXPLAIN tables.","@param return-code — The return code from the stored procedure.","@param message — Contains messages that describe errors that the stored procedure encountered."]},"id":"ADMIN_EXPLAIN_MAINT-1"},{"identifier":"ADMIN_INFO_HOST","text":{"description":["Returns the host name of a connected Db2 subsystem or the host name of every member of a data sharing group.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-admin-info-host"],"parameters":["@param processing-option — The processing option.","@param db2-member — The Db2 data sharing group member name.","@param return-code — The return code from the stored procedure.","@param message — Contains messages describing the error encountered by the stored procedure."]},"id":"ADMIN_INFO_HOST-1"},{"identifier":"ADMIN_INFO_IFCID","text":{"description":["Returns Db2 instrumentation facility interface (IFI) information.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-admin-info-ifcid"],"parameters":["@param ifcid — The Db2 instrumentation facility component ID (IFCID).","@param db2-member — The name of the single data sharing group member that executes the IFI request.","@param return-code — The return code from the stored procedure.","@param message — Contains messages that describe the error that was encountered by the stored procedure."]},"id":"ADMIN_INFO_IFCID-1"},{"identifier":"ADMIN_INFO_SMS","text":{"description":["Returns space information about copy pools and their storage groups and volumes.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-admin-info-sms"],"parameters":["@param return-code — The return code from the stored procedure.","@param message — Contains messages that describe a parameter error, an SQL error, or an internal error that was encountered by the stored procedure."]},"id":"ADMIN_INFO_SMS-1"},{"identifier":"ADMIN_INFO_SSID","text":{"description":["Returns the name of the connected Db2 subsystem.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-admin-info-ssid"],"parameters":["@param subsystem-ID — The subsystem ID of the connected Db2 subsystem.","@param return-code — The return code from the stored procedure.","@param message — Contains messages describing the error encountered by the stored procedure."]},"id":"ADMIN_INFO_SSID-1"},{"identifier":"ADMIN_INFO_SQL","text":{"description":["Captures statistics about a Db2 subsystem, its objects, and applications and returns the results in a data set or as a result set.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-admin-info-sql"],"parameters":["@param table-creator — The explicit qualifier for the object, the list of tables, or the plan table (PLAN_TABLE).","@param table-name — The name of a single user object, a list of objects, or the plan table (PLAN_TABLE).","@param catalog-creator — The catalog to use for collection.","@param plan-info — The programs and query numbers from PLAN_TABLE for the tables to be collected.","@param collect-ddl — Whether or not to collect DDL information.","@param collect-stats — Whether or not to collect statistics information.","@param collect-column-stats — Whether or not to collect column-level statistics information.","@param edit-ddl — Whether or not to edit the DDL output.","@param edit-version-mode — Specifies that the output should be formatted for a different version and mode of Db2 for z/OS than the version and mode that is currently running when collecting information.","@param partition-rotation — Whether or not to verify the number of partition rotations that are required to balance the table.","@param output-method — The data set attributes the output should include.","@param output-info — The output information.","@param pmr-info — The suposed case ID or the PMR number.","@param return-code — The return code from the stored procedure.","@param message — Contains messages describing the error or warning encountered by the stored procedure."]},"id":"ADMIN_INFO_SQL-1"},{"identifier":"ADMIN_INFO_SYSLOG","text":{"description":["Returns system log entries.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-admin-info-syslog"],"parameters":["@param search-filter — A logical expression that is used to filter the SYSLOG records.","@param system-name — The system in the sysplex where the system log entries will be processed or searched.","@param start-date — The starting date for system log records to be processed.","@param start-time — The starting time for system log records to be processed.","@param end-date — The ending date for system log records to be processed.","@param end-time — The ending time for system log records to be processed.","@param max-entries — A limit for the number of SYSLOG records to be processed for each system.","@param message — Contains messages that describe errors that occurred during stored procedure processing."]},"id":"ADMIN_INFO_SYSLOG-1"},{"identifier":"ADMIN_INFO_SYSPARM","text":{"description":["Returns the system parameters, application defaults module, and IRLM parameters of a connected Db2 subsystem, or member of its data sharing group.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-admin-info-sysparm"],"parameters":["@param db2-member — The name of the Db2 data sharing group member that you want to get the system parameters, DSNHDECP or a user-specified application defaults module, and IRLM parameters from.","@param return-code — The return code from the stored procedure.","@param message — Contains messages that describe the IFI error or SQL error that was encountered by the stored procedure."]},"id":"ADMIN_INFO_SYSPARM-1"},{"identifier":"ADMIN_JOB_CANCEL","text":{"description":["Purges or cancels a job.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-admin-job-cancel"],"parameters":["@param user-ID — The user ID under which the job is canceled or purged.","@param password — The password associated with the input parameter user-ID.","@param processing-option — The type of command to invoke.","@param job-ID — The job ID of the job to be canceled or purged.","@param return-code — The return code from the stored procedure.","@param message — Contains messages describing the error encountered by the stored procedure."]},"id":"ADMIN_JOB_CANCEL-1"},{"identifier":"ADMIN_JOB_FETCH","text":{"description":["Retrieves SYSOUT from JES spool and returns the SYSOUT.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-admin-job-fetch"],"parameters":["@param user-ID — The user ID under which SYSOUT is retrieved.","@param password — The password associated with the input parameter user-ID.","@param job-ID — Specifies the JES2 or JES3 job ID whose SYSOUT data sets are to be retrieved.","@param return-code — The return code from the stored procedure.","@param message — Contains messages describing the error encountered by the stored procedure."]},"id":"ADMIN_JOB_FETCH-1"},{"identifier":"ADMIN_JOB_QUERY","text":{"description":["Displays the status and completion information about a job.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-admin-job-query"],"parameters":["@param user-ID — The user ID under which the job is queried.","@param password — The password associated with the input parameter user-ID.","@param job-ID — The job ID of the job being queried.","@param status — The current status of the job.","@param max-RC — The job completion code.","@param completion-type — The job\'s completion type.","@param system-abend-code — The system abend code if an abnormal termination occurs.","@param user-abend-code — The user abend code if an abnormal termination occurs.","@param return-code — The return code from the stored procedure.","@param message — Contains messages describing the error encountered by the stored procedure."]},"id":"ADMIN_JOB_QUERY-1"},{"identifier":"ADMIN_JOB_SUBMIT","text":{"description":["Submits a job to a JES2 or JES3 system.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-admin-job-submit"],"parameters":["@param user-ID — The user ID under which the job is submitted.","@param password — The password associated with the input parameter user-ID.","@param job-ID — The JES2 or JES3 job ID of the submitted job.","@param return-code — The return code from the stored procedure.","@param message — Contains messages describing the error encountered by the stored procedure."]},"id":"ADMIN_JOB_SUBMIT-1"},{"identifier":"ADMIN_TASK_ADD","text":{"description":["Adds a task to the task list of the administrative task scheduler.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-admin-task-add"],"parameters":["@param user-ID — The user ID under which the task execution is performed.","@param password — The password associated with the input parameter user-ID.","@param begin-timestamp — When a task can first begin execution.","@param end-timestamp — When a task can last begin execution.","@param max-invocations — The maximum number of executions allowed for a task.","@param interval — A duration in minutes between two executions of a repetitive regular task.","@param point-in-time — One or more points in time when a task is executed.","@param trigger-task-name — The name of the task which, when its execution is complete, will trigger the execution of this task.","@param trigger-task-cond — The type of comparison to be made to the return code after the execution of task trigger-task-name.","@param trigger-task-code — The return code from executing trigger-task-name.","@param db2-ssid — The Db2 subsystem ID whose associated scheduler should execute the task.","@param procedure-schema — The schema of the Db2 stored procedure this task will execute.","@param procedure-name — The name of the Db2 stored procedure this task will execute.","@param procedure-input — The input parameters of the Db2 stored procedure this task will execute.","@param JCL-library — The name of the data set where the JCL job to be executed is saved.","@param JCL-member — The name of the library member where JCL job to be executed is saved.","@param job-wait — Whether the job can be executed synchronously or not.","@param task-name — A unique name assigned to the task.","@param description — A description assigned to the task.","@param return-code — The return code from the stored procedure.","@param message — Contains messages describing the error encountered by the stored procedure."]},"id":"ADMIN_TASK_ADD-1"},{"identifier":"ADMIN_TASK_CANCEL","text":{"description":["Attempts to stop the execution of a task that is currently running.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-admin-task-cancel"],"parameters":["@param task-name — The unique name of the task whose execution you want to cancel.","@param return-code — The return code from the stored procedure.","@param message — Contains messages describing the error encountered by the stored procedure."]},"id":"ADMIN_TASK_CANCEL-1"},{"identifier":"ADMIN_TASK_REMOVE","text":{"description":["Removes a task from the task list of the administrative task scheduler.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-admin-task-remove"],"parameters":["@param task-name — The name of the task to be removed from the task list of the administrative task scheduler.","@param return-code — The return code from the stored procedure.","@param message — Contains messages describing the error encountered by the stored procedure."]},"id":"ADMIN_TASK_REMOVE-1"},{"identifier":"ADMIN_TASK_UPDATE","text":{"description":["Updates the schedule of a task that is in the task list for the administrative task scheduler.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-admin-task-update"],"parameters":["@param task-name — The unique name of the task that is to be updated in the task list of the administrative task scheduler.","@param description — A description that is assigned to the task.","@param begin_timestamp — The earliest time a task can begin execution.","@param end_timestamp — The latest time that a task can begin execution.","@param max_invocations — The maximum number of executions that are allowed for the modified task.","@param interval — A time duration between two executions of a repetitive regular task.","@param point-in-time — Specifies one or more points in time when a task is executed.","@param trigger-task-name — The name of the task that, upon completion, will trigger the execution of this task.","@param trigger-task-cond — The type of comparison to be made to the return code after the execution of task trigger-task-name.","@param trigger-task-code — The return code from executing the task trigger-task-name.","@param db2-ssid — The Db2 subsystem ID whose associated scheduler should execute the task.","@param return-code — The return code from the stored procedure.","@param message — Contains messages describing the error encountered by the stored procedure."]},"id":"ADMIN_TASK_UPDATE-1"},{"identifier":"ADMIN_UPDATE_SYSPARM","text":{"description":["Changes the value of one or more subsystem parameters which are located in one of these macros: DSN6SPRM, DSN6ARVP, DSN6LOGP, DSN6SYSP, DSN6FAC, and DSN6GRP.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-admin-update-sysparm"],"parameters":["@param db2_member — The name of a single data sharing group member on which the SET SYSPARM command with the LOAD option is to be run.","@param parameter_module — The name of the subsystem parameters load module that has the new values assembled and linked into it.","@param module_library — The name of the library where the stored procedure saves the new subsystem parameters load module.","@param source_library — The name of the library where the stored procedure saves a sample JCL that assembles and link-edits the new subsystem parameters load module offline.","@param load — Whether or not to issue SET SYSPARM with the LOAD option to load the new subsystem parameters load module into storage.","@param return-code — The return code from the stored procedure."]},"id":"ADMIN_UPDATE_SYSPARM-1"},{"identifier":"ADMIN_UTL_EXECUTE","text":{"description":["Solves alerts stored in the SYSIBM.SYSAUTOALERTS catalog table within the maintenance windows defined by the SYSIBM.SYSAUTOTIMEWINDOWS catalog table.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-admin-utl-execute"],"parameters":["@param execute-options — A string representation of the configuration parameters for the ADMIN_UTL_EXECUTE stored procedure, consisting of \\"NAME=VALUE\\" pairs separated by commas.","@param history-entry-id — A unique identifier that can be used to read the execution log written in the SYSIBM.SYSAUTORUNS_HIST table when the SYSPROC.ADMIN_UTL_EXECUTE stored procedure executes.","@param return-code — The return code from the stored procedure.","@param message — Contains messages describing the error encountered by the stored procedure."]},"id":"ADMIN_UTL_EXECUTE-1"},{"identifier":"ADMIN_UTL_MONITOR","text":{"description":["Provides functions that enable analysis of database statistics.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-admin-utl-monitor"],"parameters":["@param monitor-options — A string representation of the configuration parameters for the ADMIN_UTIL_MONITOR stored procedure, consisting of \\"NAME = VALUE\\" pairs separated by commas.","@param history-entry-id — A unique identifier that can be used to read the execution log in the SYSIBM.SYSAUTORUNS_HIST table and the alerts in the SYSIBM.SYSAUTOALERTS table when the SYSPROC.ADMIN_UTL_MONITOR stored procedure executes.","@param return-code — The return code from the stored procedure.","@param message — Contains messages describing the error encountered by the stored procedure."]},"id":"ADMIN_UTL_MONITOR-1"},{"identifier":"ADMIN_UTL_MODIFY","text":{"description":["Maintains the SYSIBM.SYSAUTORUNS_HIST and SYSIBM.SYSAUTOALERTS catalog tables.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-admin-utl-modify"],"parameters":["@param modify-options — A string representation of the configuration parameters for the ADMIN_UTIL_MODIFY stored procedure, consisting of \\"NAME = VALUE\\" pairs separated by commas.","@param history-entry-id — A unique identifier that can be used to read the execution log in the SYSIBM.SYSAUTORUNS_HIST table when the SYSPROC.ADMIN_UTL_MODIFY stored procedure executes.","@param return-code — The return code from the stored procedure.","@param message — Contains messages describing the error encountered by the stored procedure."]},"id":"ADMIN_UTL_MODIFY-1"},{"identifier":"ADMIN_UTL_SCHEDULE","text":{"description":["Executes utilities in parallel.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-admin-utl-schedule"],"parameters":["@param max-parallel — The maximum number of parallel threads that may be started.","@param optimize-workload — Whether the parallel utility executions should be sorted to achieve shortest overall execution time.","@param stop-condition — The utility execution condition after which ADMIN_UTL_SCHEDULE will not continue starting new utility executions in parallel, but will wait until all currently running utilities have completed and will then return to the caller.","@param utility-ID-stem — The first part of the utility ID of a utility execution in a parallel thread.","@param shutdown-duration — The elapsed time in seconds that ADMIN_UTL_SCHEDULE will allow utility executions before a shutdown is initiated.","@param number-of-objects — The number of utility executions and their sorting objects that were passed in the SYSIBM.UTILITY_OBJECTS table.","@param utilities-run — The number of actual utility executions.","@param highest-return-code — The highest return code from DSNUTILU for all utility executions.","@param parallel-tasks — The actual number of parallel tasks that were started to execute the utility in parallel.","@param return-code — The return code from the stored procedure.","@param message — Contains messages describing the error encountered by the stored procedure."]},"id":"ADMIN_UTL_SCHEDULE-1"},{"identifier":"ADMIN_UTL_SORT","text":{"description":["Sorts objects for parallel utility execution using JCL or the ADMIN_UTL_SCHEDULE stored procedure.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-admin-utl-sort"],"parameters":["@param max-parallel — The maximum number of parallel units.","@param max-per-job — The maximum number of steps per job for batch execution.","@param optimize-workload — Whether or not the parallel units should be sorted to achieve shortest overall execution time.","@param batch-execution — Whether or not the objects should be sorted for online or batch (JCL) execution.","@param number-of-objects — The number of objects that were passed in SYSIBM.UTILITY_SORT_OBJ.","@param parallel-units — The number of recommended parallel units.","@param max-objects — The maximum number of objects in any parallel unit.","@param max-sequences — The number of jobs in any parallel unit.","@param return-code — The return code from the stored procedure.","@param message — Contains messages describing the error encountered by the stored procedure."]},"id":"ADMIN_UTL_SORT-1"},{"identifier":"CREATE_WRAPPED","text":{"description":["Encodes a readable data definition statement into an obfuscated data definition statement and then deploys the object in the database.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-create-wrapped"],"parameters":["@param object-definition-string — Contains any of the following data definition statements: CREATE FUNCTION (compiled SQL scalar), CREATE FUNCTION (inlined SQL scalar), CREATE FUNCTION (SQL table), CREATE PROCEDURE (SQL - native), CREATE TRIGGER (basic), or CREATE TRIGGER (advanced)."]},"id":"CREATE_WRAPPED-1"},{"identifier":"DSNACCOX","text":{"description":["Makes recommendations to help maintain Db2 databases.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-dsnaccox"],"parameters":["See link for details."]},"id":"DSNACCOX-1"},{"identifier":"DSNACICS","text":{"description":["Gives workstation applications a way to invoke CICS server programs while using TCP/IP as their communication protocol.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-dsnacics"],"parameters":["@param parm-level — The level of the parameter list that is supplied to the stored procedure.","@param pgm-name — The name of the CICS program that DSNACICS invokes.","@param CICS-applid — The applid of the CICS system to which DSNACICS connects.","@param CICS-level — The level of the target CICS subsystem.","@param connect-type — Whether or not the CICS connection is generic or specific.","@param netname — If the value of connection-type is SPECIFIC, specifies the name of the specific connection that is to be used.","@param mirror-trans — The name of the CICS mirror transaction to invoke.","@param COMMAREA — The communication area (COMMAREA) that is used to pass data between the DSNACICS caller and the CICS server program that DSNACICS calls.","@param COMMAREA-total-len — The total length of the COMMAREA that the server program needs.","@param sync-opts — Whether or not the calling program controls resource recovery, using two-phase commit protocols that are supported by RRS.","@param return-code — The return code from the stored procedure.","@param msg-area — Contains messages if an error occurs during stored procedure execution."]},"id":"DSNACICS-1"},{"identifier":"DSNAIMS","text":{"description":["Allows Db2 applications to invoke IMS transactions and commands easily, without maintaining their own connections to IMS.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-dsnaims"],"parameters":["@param dsnaims-function — A string that indicates whether the transaction is send-only, receive-only, or send-and-receive.","@param dsnaims-2pc — Whether or not to use a two-phase commit process to perform the transaction syncpoint service.","@param xcf-group-name — The XCF group name that the IMS OTMA joins.","@param xcf-ims-name — The XCF member name that IMS uses for the XCF group.","@param racf-userid — The RACF user ID that is used for IMS to perform the transaction or command authorization checking.","@param racf-groupid — The RACF group ID that is used for IMS to perform the transaction or command authorization checking.","@param ims-lterm — An IMS LTERM name that is used to override the LTERM name in the I/O program communication block of the IMS application program.","@param ims-modname — The formatting map name that is used by the server to map output data streams, such as 3270 streams.","@param ims-tran-name — The name of an IMS transaction or command that is sent to IMS.","@param ims-data-in — The data that is sent to IMS.","@param ims-data-out — Data that is returned after successful completion of the transaction.","@param otma-tpipe-name — An 8-byte user-defined communication session name that IMS uses for the input and output data for the transaction or the command in a SEND or a RECEIVE function.","@param otma-dru-name — The name of an IMS user-defined exit routine, OTMA destination resolution user exit routine, if it is used.","@param user-data-in — Contains any data that is to be included in the IMS message prefix.","@param user-data-out — On output, this field contains the user-data-in in the IMS output prefix.","@param status-message — Indicates any error message that is returned from the transaction or command, OTMA, RRS, or DSNAIMS.","@param return-code — he return code that is returned for the transaction or command, OTMA, RRS, or DSNAIMS."]},"id":"DSNAIMS-1"},{"identifier":"DSNAIMS2","text":{"description":["Allows Db2 applications to invoke IMS transactions and commands easily, without maintaining their own connections to IMS.","DSNAIMS2 includes multi-segment input support for IMS transactions.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-dsnaims2"],"parameters":["@param dsnaims-function — A string that indicates whether the transaction is send-only, receive-only, or send-and-receive.","@param dsnaims-2pc — Whether or not to use a two-phase commit process to perform the transaction syncpoint service.","@param xcf-group-name — The XCF group name that the IMS OTMA joins.","@param xcf-ims-name — The XCF member name that IMS uses for the XCF group.","@param racf-userid — The RACF user ID that is used for IMS to perform the transaction or command authorization checking.","@param racf-groupid — The RACF group ID that is used for IMS to perform the transaction or command authorization checking.","@param ims-lterm — An IMS LTERM name that is used to override the LTERM name in the I/O program communication block of the IMS application program.","@param ims-modname — The formatting map name that is used by the server to map output data streams, such as 3270 streams.","@param ims-tran-name — The name of an IMS transaction or command that is sent to IMS.","@param ims-data-in — The data that is sent to IMS.","@param ims-data-out — Data returned after successful completion of the transaction.","@param otma-tpipe-name — An 8-byte user-defined communication session name that IMS uses for the input and output data for the transaction or the command in a SEND or a RECEIVE function.","@param otma-dru-name — The name of an IMS user-defined exit routine, OTMA destination resolution user exit routine, if it is used.","@param user-data-in — Contains any data that is to be included in the IMS message prefix.","@param user-data-out — On output, this field contains the user-data-in in the IMS output prefix.","@param status-message — Indicates any error message that is returned from the transaction or command, OTMA, RRS, or DSNAIMS.","@param return-code — he return code that is returned for the transaction or command, OTMA, RRS, or DSNAIMS."]},"id":"DSNAIMS2-1"},{"identifier":"DSNLEUSR","text":{"description":["Stores encrypted values in the translated authorization ID (NEWAUTHID) and password fields of the SYSIBM.USERNAMES table.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-dsnleusr"],"parameters":["@param Type — The value that is to be inserted into the TYPE column of SYSIBM.USERNAMES.","@param AuthID — The value that is to be inserted into the AUTHID column of SYSIBM.USERNAMES.","@param LinkName — The value that is to be inserted into the LINKNAME column of SYSIBM.USERNAMES.","@param NewAuthID — The value that is to be inserted into the NEWAUTHID column of SYSIBM.USERNAMES.","@param Password — The value that is to be inserted into the PASSWORD column of SYSIBM.USERNAMES.","@param ReturnCode — The return code from DSNLEUSR execution.","@param MsgArea — Contains information about DSNLEUSR execution."]},"id":"DSNLEUSR-1"},{"identifier":"DSNUTILU","text":{"description":["Runs Db2 utilities from a Db2 application program.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-dsnutilu"],"parameters":["@param utility-id — A unique identifier for this utility within Db2.","@param restart — Whether or not Db2 is to restart a current utility, and, if so, at what point the utility is to be restarted.","@param utstmt — The utility control statements.","@param retcode — The utility highest return code."]},"id":"DSNUTILU-1"},{"identifier":"DSNUTILV","text":{"description":["Runs Db2 utilities from a Db2 application program.","Can run utility statements as large as 2 GB.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-dsnutilv"],"parameters":["@param utility-id — A unique identifier for this utility within Db2.","@param restart — Whether or not Db2 is to restart a current utility, and, if so, at what point the utility is to be restarted.","@param utstmt — The utility control statements.","@param retcode — The utility highest return code."]},"id":"DSNUTILV-1"},{"identifier":"DSN_WLM_APPLENV","text":{"description":["Provides a convenient way to define, install, and activate a new WLM application environment for Db2.","Can also be used to remove WLM application environments.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-dsn-wlm-appenv"],"parameters":["@param action — The type of action to be performed.","@param policyid — The WLM service policy to be activated.","@param wlmoptions — See link for details.","@param return-code — The return code from the stored procedure.","@param message — Contains messages if an error occurs during stored procedure execution."]},"id":"DSN_WLM_APPLENV-1"},{"identifier":"CREATE_DGTT","text":{"description":["Creates a declared temporary table named SESSION.DBMS_BUFFER.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-dsn8create-dgtt"],"parameters":[]},"id":"CREATE_DGTT-1"},{"identifier":"DISABLE","text":{"description":["Disables the message buffer into which trace messages for native SQL routines are written.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-dsn8disable"],"parameters":[]},"id":"DISABLE-1"},{"identifier":"ENABLE","text":{"description":["Enables the message buffer into which trace messages for native SQL routines are written.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-dsn8enable"],"parameters":["@param buffer-size — This value is not used by DSN8.ENABLE."]},"id":"ENABLE-1"},{"identifier":"GET_LINE","text":{"description":["Returns a single line from the message buffer, up to, but not including the end-of-line character sequence.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-dsn8get-line"],"parameters":["@param line — A line from the message buffer.","@param status — Indicates whether a line was returned from the message buffer."]},"id":"GET_LINE-1"},{"identifier":"GET_LINES","text":{"description":["Returns one or more lines from the message buffer, and stores the text in an array.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-dsn8get-lines"],"parameters":["@param lines — Lines of text from the message buffer.","@param numlines — See link for details."]},"id":"GET_LINES-1"},{"identifier":"NEW_LINE","text":{"description":["Writes an end-of-line character sequence to the message buffer.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-dsn8new-line"],"parameters":[]},"id":"NEW_LINE-1"},{"identifier":"PUT","text":{"description":["Writes a line to the message buffer, without an end-of-line character sequence at the end.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-dsn8put"],"parameters":["@param item — The line to write to the message buffer."]},"id":"PUT-1"},{"identifier":"PUT_LINE","text":{"description":["Writes a line, including the end-of-line character sequence, to the message buffer.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-dsn8put-line"],"parameters":["@param item — The line to write to the message buffer."]},"id":"PUT_LINE-1"},{"identifier":"GET_CONFIG","text":{"description":["Retrieves data server configuration information.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-get-config"],"parameters":["@param major_version — The major document version.","@param minor_version — The minor document version.","@param requested_locale — A locale.","@param xml_input — An XML input document of type Data Server Configuration Input in UTF-8 that contains input values for the stored procedure.","@param xml_filter — A valid XPath query string.","@param xml_output — A complete XML output document of type Data Server Configuration Output in UTF-8.","@param xml_message — A complete XML output document of type Data Server Message in UTF-8 that provides detailed information about an SQL warning condition."]},"id":"GET_CONFIG-1"},{"identifier":"GET_MESSAGE","text":{"description":["Returns the short message text for an SQLCODE.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-get-message"],"parameters":["@param major_version — The major document version.","@param minor_version — The minor document version.","@param requested_locale — A locale.","@param xml_input — An XML input document of type Data Server Configuration Input in UTF-8 that contains input values for the stored procedure.","@param xml_filter — A valid XPath query string.","@param xml_output — A complete XML output document of type Data Server Configuration Output in UTF-8.","@param xml_message — A complete XML output document of type Data Server Message in UTF-8 that provides detailed information about an SQL warning condition."]},"id":"GET_MESSAGE-1"},{"identifier":"GET_SYSTEM_INFO","text":{"description":["Returns system information about the data server.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-get-system-info"],"parameters":["@param major_version — The major document version.","@param minor_version — The minor document version.","@param requested_locale — A locale.","@param xml_input — An XML input document of type Data Server Configuration Input in UTF-8 that contains input values for the stored procedure.","@param xml_filter — A valid XPath query string.","@param xml_output — A complete XML output document of type Data Server Configuration Output in UTF-8.","@param xml_message — A complete XML output document of type Data Server Message in UTF-8 that provides detailed information about an SQL warning condition."]},"id":"GET_SYSTEM_INFO-1"},{"identifier":"SET_MAINT_MODE_RECORD_NO_TEMPORALHISTORY","text":{"description":["Indicates that Db2 is to disable recording of temporal history for a system-period temporal table and allow an application to specify values for row-begin, row-end, and transaction-start-ID columns on subsequent operations.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-set-maint-mode-record-no-temporalhistory"],"parameters":[]},"id":"SET_MAINT_MODE_RECORD_NO_TEMPORALHISTORY-1"},{"identifier":"SET_PLAN_HINT","text":{"description":["Validates, deploys, modifies, or deletes catalog tables rows that influence access path selection for SQL statements.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-set-plan-hint"],"parameters":["@param major_version — The major document version.","@param minor_version — The minor document version.","@param requested_locale — A locale.","@param xml_input — An XML input document of type Data Server Configuration Input in UTF-8 that contains input values for the stored procedure.","@param xml_filter — A valid XPath query string.","@param xml_output — A complete XML output document of type Data Server Configuration Output in UTF-8.","@param xml_message — A complete XML output document of type Data Server Message in UTF-8 that provides detailed information about an SQL warning condition."]},"id":"SET_PLAN_HINT-1"},{"identifier":"ALTER_JAVA_PATH","text":{"description":["Modifies the class resolution path of an installed JAR.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-sqljalter-java-path"],"parameters":["@param JAR-name1 — The Db2 name of the JAR whose path is to be altered, in the form schema.JAR-id or JAR-id.","@param path — The class resolution path that the JVM uses when JAR-name1 references a class that is neither contained in JAR-name1, found in the CLASSPATH, nor system-supplied."]},"id":"ALTER_JAVA_PATH-1"},{"identifier":"DB2_INSTALL_JAR","text":{"description":["Creates a new definition of a JAR file in the local Db2 catalog or in a remote Db2 catalog.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-sqljdb2-install-jar"],"parameters":["@param JAR-locator — The JAR file that is to be installed in the Db2 catalog.","@param JAR-name — The Db2 name of the JAR, in the form schema.JAR-id or JAR-id.","@param deploy — Whether or not additional actions are to be performed after the JAR file is installed."]},"id":"DB2_INSTALL_JAR-1"},{"identifier":"DB2_REPLACE_JAR","text":{"description":["Replaces an existing JAR file in the local Db2 catalog or in a remote Db2 catalog.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-sqljdb2-replace-jar"],"parameters":["@param JAR-locator — The JAR file that is to be replaced in the Db2 catalog.","@param JAR-name — The Db2 name of the JAR, in the form schema.JAR-id or JAR-id."]},"id":"DB2_REPLACE_JAR-1"},{"identifier":"INSTALL_JAR","text":{"description":["Creates a new definition of a JAR file in the local Db2 catalog.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-sqljinstall-jar"],"parameters":["@param url — The z/OS UNIX System Services full path name for the JAR file that is to be installed in the Db2 catalog.","@param JAR-name — The Db2 name of the JAR, in the form schema.JAR-id or JAR-id.","@param deploy — Whether or not additional actions are to be performed after the JAR file is installed."]},"id":"INSTALL_JAR-1"},{"identifier":"REMOVE_JAR","text":{"description":["Deletes a JAR file from the local Db2 catalog or from a remote Db2 catalog.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-sqljremove-jar"],"parameters":["@param JAR-name — The Db2 name of the JAR that is to be removed from the catalog, in the form schema.JAR-id or JAR-id.","@param undeploy — Whether or not additional actions should be performed before the JAR file is removed. Additional actions are not supported, so this value is 0."]},"id":"REMOVE_JAR-1"},{"identifier":"REPLACE_JAR","text":{"description":["Replaces an existing JAR file in the local Db2 catalog.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-sqljreplace-jar"],"parameters":["@param url — The z/OS UNIX System Services full path name for the JAR file that replaces the existing JAR file in the Db2 catalog.","@param JAR-name — The Db2 name of the JAR, in the form schema.JAR-id or JAR-id."]},"id":"REPLACE_JAR-1"},{"identifier":"WLM_REFRESH","text":{"description":["Refreshes a WLM environment.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-wlm-refresh"],"parameters":["@param WLM-environment — The name of the WLM environment that you want to refresh.","@param ssid — The subsystem ID of the Db2 subsystem with which the WLM environment is associated.","@param status-message — An informational message about the execution of the WLM refresh.","@param return-code — The return code from the WLM_REFRESH call."]},"id":"WLM_REFRESH-1"},{"identifier":"WLM_SET_CLIENT_INFO","text":{"description":["Sets client information that is associated with the current connection at the Db2 for z/OS server.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-wlm-set-client-info"],"parameters":["@param client_userid — The user ID for the client.","@param client_wrkstnname — The workstation name for the client.","@param client_applname — The application name for the client.","@param client_acctstr — The accounting string for the client."]},"id":"WLM_SET_CLIENT_INFO-1"},{"identifier":"XSR_ADDSCHEMADOC","text":{"description":["Adds every XML schema, other than the primary XML schema document, to the XSR.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-xsr-addschemadoc"],"parameters":["@param rschema — The SQL schema for the XML schema.","@param name — The name of the XML schema.","@param schemalocation — The schema location of the primary XML schema document to which the XML schema document is being added.","@param content — The content of the XML schema document being added.","@param docproperty — The properties for the XML schema document being added."]},"id":"XSR_ADDSCHEMADOC-1"},{"identifier":"XSR_COMPLETE","text":{"description":["The final stored procedure to be called as part of the XML schema registration process, which registers XML schemas with the XSR.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-xsr-complete"],"parameters":["@param rschema — The SQL schema for the XML schema.","@param name — The name of the XML schema.","@param schema-properties — The  properties, if any, associated with the XML schema.","@param for-decomposition — This value must be 0. XML schema decomposition is not supported."]},"id":"XSR_COMPLETE-1"},{"identifier":"XSR_REGISTER","text":{"description":["The first stored procedure to be called as part of the XML schema registration process, which registers XML schemas with the XSR.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-xsr-register"],"parameters":["@param rschema — The SQL schema for the XML schema.","@param name — The name of the XML schema.","@param schemalocation — The schema location of the primary XML schema document.","@param content — The content of the primary XML schema document.","@param docproperty — The properties for the primary XML schema document."]},"id":"XSR_REGISTER-1"},{"identifier":"XSR_REMOVE","text":{"description":["Removes all components of an XML schema.","https://www.ibm.com/docs/en/db2-for-zos/13?topic=db2-xsr-remove"],"parameters":["@param rschema — The SQL schema for the XML schema.","@param name — The name of the XML schema."]},"id":"XSR_REMOVE-1"}]}')}},t={};function r(i){var n=t[i];if(void 0!==n)return n.exports;var a=t[i]={exports:{}};return e[i].call(a.exports,a,a.exports,r),a.exports}r.d=(e,t)=>{for(var i in t)r.o(t,i)&&!r.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var i=r(59296);module.exports=i})();
//# sourceMappingURL=server.js.map